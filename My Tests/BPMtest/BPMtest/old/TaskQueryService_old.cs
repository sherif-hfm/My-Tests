//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 

namespace BPM_old
{


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="TaskQueryServiceSOAPBinding", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(presentationType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(userApplicationDataType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(userPreferenceType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(chartType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(viewGrantType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(viewSummaryType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ruleActionType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ruleInfoType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ruleRepositoryInfoType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(TaskEvidenceServiceErrorType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EvidenceListResponseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EvidenceResponseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ValidateEvidenceSignatureRequestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UploadCertificateRequestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateEvidenceRequestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateEvidenceRequestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EvidenceRequestType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(CertificateRevokeType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(decomposeTaskInfoType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(taskQueryServiceFaultType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(contextAndTaskNumberRequestBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(contextAndTaskIdRequestBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(contextAndPredicateQueryRequestBaseType))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(task[]))]
public partial class TaskQueryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback authenticateOperationCompleted;
    
    private System.Threading.SendOrPostCallback authenticateOnBehalfOfOperationCompleted;
    
    private System.Threading.SendOrPostCallback getWorkflowContextOperationCompleted;
    
    private System.Threading.SendOrPostCallback destroyWorkflowContextOperationCompleted;
    
    private System.Threading.SendOrPostCallback refreshWorkflowContextOperationCompleted;
    
    private System.Threading.SendOrPostCallback updateWorkflowContextOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryAggregatedTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback countTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback doesTaskExistOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryViewTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryViewAggregatedTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback countViewTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback doesViewTaskExistOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryDecomposedTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback queryTaskErrorsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTaskHistoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTaskDetailsByIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTaskDetailsByNumberOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTaskVersionDetailsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPermittedAssigneesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPermittedAssigneesForTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTaskSequenceOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSummaryFieldsInfoForTaskOperationCompleted;
    
    /// <remarks/>
    public TaskQueryService() {
        this.Url = "http://10.110.121.2:35015/integration/services/TaskQueryService/TaskQueryService";
    }
    
    /// <remarks/>
    public event authenticateCompletedEventHandler authenticateCompleted;
    
    /// <remarks/>
    public event authenticateOnBehalfOfCompletedEventHandler authenticateOnBehalfOfCompleted;
    
    /// <remarks/>
    public event getWorkflowContextCompletedEventHandler getWorkflowContextCompleted;
    
    /// <remarks/>
    public event destroyWorkflowContextCompletedEventHandler destroyWorkflowContextCompleted;
    
    /// <remarks/>
    public event refreshWorkflowContextCompletedEventHandler refreshWorkflowContextCompleted;
    
    /// <remarks/>
    public event updateWorkflowContextCompletedEventHandler updateWorkflowContextCompleted;
    
    /// <remarks/>
    public event queryTasksCompletedEventHandler queryTasksCompleted;
    
    /// <remarks/>
    public event queryAggregatedTasksCompletedEventHandler queryAggregatedTasksCompleted;
    
    /// <remarks/>
    public event countTasksCompletedEventHandler countTasksCompleted;
    
    /// <remarks/>
    public event doesTaskExistCompletedEventHandler doesTaskExistCompleted;
    
    /// <remarks/>
    public event queryViewTasksCompletedEventHandler queryViewTasksCompleted;
    
    /// <remarks/>
    public event queryViewAggregatedTasksCompletedEventHandler queryViewAggregatedTasksCompleted;
    
    /// <remarks/>
    public event countViewTasksCompletedEventHandler countViewTasksCompleted;
    
    /// <remarks/>
    public event doesViewTaskExistCompletedEventHandler doesViewTaskExistCompleted;
    
    /// <remarks/>
    public event queryDecomposedTasksCompletedEventHandler queryDecomposedTasksCompleted;
    
    /// <remarks/>
    public event queryTaskErrorsCompletedEventHandler queryTaskErrorsCompleted;
    
    /// <remarks/>
    public event getTaskHistoryCompletedEventHandler getTaskHistoryCompleted;
    
    /// <remarks/>
    public event getTaskDetailsByIdCompletedEventHandler getTaskDetailsByIdCompleted;
    
    /// <remarks/>
    public event getTaskDetailsByNumberCompletedEventHandler getTaskDetailsByNumberCompleted;
    
    /// <remarks/>
    public event getTaskVersionDetailsCompletedEventHandler getTaskVersionDetailsCompleted;
    
    /// <remarks/>
    public event getPermittedAssigneesCompletedEventHandler getPermittedAssigneesCompleted;
    
    /// <remarks/>
    public event getPermittedAssigneesForTasksCompletedEventHandler getPermittedAssigneesForTasksCompleted;
    
    /// <remarks/>
    public event getTaskSequenceCompletedEventHandler getTaskSequenceCompleted;
    
    /// <remarks/>
    public event getSummaryFieldsInfoForTaskCompletedEventHandler getSummaryFieldsInfoForTaskCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("workflowContext", Namespace="http://xmlns.oracle.com/bpel/workflow/common")]
    public workflowContextType authenticate([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/common")] credentialType credential) {
        object[] results = this.Invoke("authenticate", new object[] {
                    credential});
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginauthenticate(credentialType credential, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("authenticate", new object[] {
                    credential}, callback, asyncState);
    }
    
    /// <remarks/>
    public workflowContextType Endauthenticate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public void authenticateAsync(credentialType credential) {
        this.authenticateAsync(credential, null);
    }
    
    /// <remarks/>
    public void authenticateAsync(credentialType credential, object userState) {
        if ((this.authenticateOperationCompleted == null)) {
            this.authenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateOperationCompleted);
        }
        this.InvokeAsync("authenticate", new object[] {
                    credential}, this.authenticateOperationCompleted, userState);
    }
    
    private void OnauthenticateOperationCompleted(object arg) {
        if ((this.authenticateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.authenticateCompleted(this, new authenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("workflowContext", Namespace="http://xmlns.oracle.com/bpel/workflow/common")]
    public workflowContextType authenticateOnBehalfOf([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] credentialOnBehalfOfRequestType credentialOnBehalfOfRequest) {
        object[] results = this.Invoke("authenticateOnBehalfOf", new object[] {
                    credentialOnBehalfOfRequest});
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginauthenticateOnBehalfOf(credentialOnBehalfOfRequestType credentialOnBehalfOfRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("authenticateOnBehalfOf", new object[] {
                    credentialOnBehalfOfRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public workflowContextType EndauthenticateOnBehalfOf(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public void authenticateOnBehalfOfAsync(credentialOnBehalfOfRequestType credentialOnBehalfOfRequest) {
        this.authenticateOnBehalfOfAsync(credentialOnBehalfOfRequest, null);
    }
    
    /// <remarks/>
    public void authenticateOnBehalfOfAsync(credentialOnBehalfOfRequestType credentialOnBehalfOfRequest, object userState) {
        if ((this.authenticateOnBehalfOfOperationCompleted == null)) {
            this.authenticateOnBehalfOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateOnBehalfOfOperationCompleted);
        }
        this.InvokeAsync("authenticateOnBehalfOf", new object[] {
                    credentialOnBehalfOfRequest}, this.authenticateOnBehalfOfOperationCompleted, userState);
    }
    
    private void OnauthenticateOnBehalfOfOperationCompleted(object arg) {
        if ((this.authenticateOnBehalfOfCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.authenticateOnBehalfOfCompleted(this, new authenticateOnBehalfOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("workflowContext", Namespace="http://xmlns.oracle.com/bpel/workflow/common")]
    public workflowContextType getWorkflowContext([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] workflowContextRequestType workflowContextRequest) {
        object[] results = this.Invoke("getWorkflowContext", new object[] {
                    workflowContextRequest});
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetWorkflowContext(workflowContextRequestType workflowContextRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getWorkflowContext", new object[] {
                    workflowContextRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public workflowContextType EndgetWorkflowContext(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public void getWorkflowContextAsync(workflowContextRequestType workflowContextRequest) {
        this.getWorkflowContextAsync(workflowContextRequest, null);
    }
    
    /// <remarks/>
    public void getWorkflowContextAsync(workflowContextRequestType workflowContextRequest, object userState) {
        if ((this.getWorkflowContextOperationCompleted == null)) {
            this.getWorkflowContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowContextOperationCompleted);
        }
        this.InvokeAsync("getWorkflowContext", new object[] {
                    workflowContextRequest}, this.getWorkflowContextOperationCompleted, userState);
    }
    
    private void OngetWorkflowContextOperationCompleted(object arg) {
        if ((this.getWorkflowContextCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getWorkflowContextCompleted(this, new getWorkflowContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("successResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public string destroyWorkflowContext([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/common")] workflowContextType workflowContext) {
        object[] results = this.Invoke("destroyWorkflowContext", new object[] {
                    workflowContext});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindestroyWorkflowContext(workflowContextType workflowContext, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("destroyWorkflowContext", new object[] {
                    workflowContext}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddestroyWorkflowContext(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void destroyWorkflowContextAsync(workflowContextType workflowContext) {
        this.destroyWorkflowContextAsync(workflowContext, null);
    }
    
    /// <remarks/>
    public void destroyWorkflowContextAsync(workflowContextType workflowContext, object userState) {
        if ((this.destroyWorkflowContextOperationCompleted == null)) {
            this.destroyWorkflowContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OndestroyWorkflowContextOperationCompleted);
        }
        this.InvokeAsync("destroyWorkflowContext", new object[] {
                    workflowContext}, this.destroyWorkflowContextOperationCompleted, userState);
    }
    
    private void OndestroyWorkflowContextOperationCompleted(object arg) {
        if ((this.destroyWorkflowContextCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.destroyWorkflowContextCompleted(this, new destroyWorkflowContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("workflowContext", Namespace="http://xmlns.oracle.com/bpel/workflow/common")]
    public workflowContextType refreshWorkflowContext([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/common")] workflowContextType refreshWorkflowContextRequest) {
        object[] results = this.Invoke("refreshWorkflowContext", new object[] {
                    refreshWorkflowContextRequest});
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginrefreshWorkflowContext(workflowContextType refreshWorkflowContextRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("refreshWorkflowContext", new object[] {
                    refreshWorkflowContextRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public workflowContextType EndrefreshWorkflowContext(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public void refreshWorkflowContextAsync(workflowContextType refreshWorkflowContextRequest) {
        this.refreshWorkflowContextAsync(refreshWorkflowContextRequest, null);
    }
    
    /// <remarks/>
    public void refreshWorkflowContextAsync(workflowContextType refreshWorkflowContextRequest, object userState) {
        if ((this.refreshWorkflowContextOperationCompleted == null)) {
            this.refreshWorkflowContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefreshWorkflowContextOperationCompleted);
        }
        this.InvokeAsync("refreshWorkflowContext", new object[] {
                    refreshWorkflowContextRequest}, this.refreshWorkflowContextOperationCompleted, userState);
    }
    
    private void OnrefreshWorkflowContextOperationCompleted(object arg) {
        if ((this.refreshWorkflowContextCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.refreshWorkflowContextCompleted(this, new refreshWorkflowContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("workflowContext", Namespace="http://xmlns.oracle.com/bpel/workflow/common")]
    public workflowContextType updateWorkflowContext([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] updateWorkflowContextRequestType updateWorkflowContextRequest) {
        object[] results = this.Invoke("updateWorkflowContext", new object[] {
                    updateWorkflowContextRequest});
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateWorkflowContext(updateWorkflowContextRequestType updateWorkflowContextRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateWorkflowContext", new object[] {
                    updateWorkflowContextRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public workflowContextType EndupdateWorkflowContext(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((workflowContextType)(results[0]));
    }
    
    /// <remarks/>
    public void updateWorkflowContextAsync(updateWorkflowContextRequestType updateWorkflowContextRequest) {
        this.updateWorkflowContextAsync(updateWorkflowContextRequest, null);
    }
    
    /// <remarks/>
    public void updateWorkflowContextAsync(updateWorkflowContextRequestType updateWorkflowContextRequest, object userState) {
        if ((this.updateWorkflowContextOperationCompleted == null)) {
            this.updateWorkflowContextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWorkflowContextOperationCompleted);
        }
        this.InvokeAsync("updateWorkflowContext", new object[] {
                    updateWorkflowContextRequest}, this.updateWorkflowContextOperationCompleted, userState);
    }
    
    private void OnupdateWorkflowContextOperationCompleted(object arg) {
        if ((this.updateWorkflowContextCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.updateWorkflowContextCompleted(this, new updateWorkflowContextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("taskListResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("task", Namespace="http://xmlns.oracle.com/bpel/workflow/task", IsNullable=false)]
    public task[] queryTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] taskListRequestType taskListRequest) {
        object[] results = this.Invoke("queryTasks", new object[] {
                    taskListRequest});
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryTasks(taskListRequestType taskListRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryTasks", new object[] {
                    taskListRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public task[] EndqueryTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public void queryTasksAsync(taskListRequestType taskListRequest) {
        this.queryTasksAsync(taskListRequest, null);
    }
    
    /// <remarks/>
    public void queryTasksAsync(taskListRequestType taskListRequest, object userState) {
        if ((this.queryTasksOperationCompleted == null)) {
            this.queryTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryTasksOperationCompleted);
        }
        this.InvokeAsync("queryTasks", new object[] {
                    taskListRequest}, this.queryTasksOperationCompleted, userState);
    }
    
    private void OnqueryTasksOperationCompleted(object arg) {
        if ((this.queryTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryTasksCompleted(this, new queryTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("aggregatedTasksResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("entry", IsNullable=false)]
    public taskCountType[] queryAggregatedTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] queryAggregatedTasksRequestType queryAggregatedTasksRequest) {
        object[] results = this.Invoke("queryAggregatedTasks", new object[] {
                    queryAggregatedTasksRequest});
        return ((taskCountType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryAggregatedTasks(queryAggregatedTasksRequestType queryAggregatedTasksRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryAggregatedTasks", new object[] {
                    queryAggregatedTasksRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public taskCountType[] EndqueryAggregatedTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((taskCountType[])(results[0]));
    }
    
    /// <remarks/>
    public void queryAggregatedTasksAsync(queryAggregatedTasksRequestType queryAggregatedTasksRequest) {
        this.queryAggregatedTasksAsync(queryAggregatedTasksRequest, null);
    }
    
    /// <remarks/>
    public void queryAggregatedTasksAsync(queryAggregatedTasksRequestType queryAggregatedTasksRequest, object userState) {
        if ((this.queryAggregatedTasksOperationCompleted == null)) {
            this.queryAggregatedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryAggregatedTasksOperationCompleted);
        }
        this.InvokeAsync("queryAggregatedTasks", new object[] {
                    queryAggregatedTasksRequest}, this.queryAggregatedTasksOperationCompleted, userState);
    }
    
    private void OnqueryAggregatedTasksOperationCompleted(object arg) {
        if ((this.queryAggregatedTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryAggregatedTasksCompleted(this, new queryAggregatedTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("taskCountResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public int countTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] countTasksRequestType countTasksRequest) {
        object[] results = this.Invoke("countTasks", new object[] {
                    countTasksRequest});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincountTasks(countTasksRequestType countTasksRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("countTasks", new object[] {
                    countTasksRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndcountTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void countTasksAsync(countTasksRequestType countTasksRequest) {
        this.countTasksAsync(countTasksRequest, null);
    }
    
    /// <remarks/>
    public void countTasksAsync(countTasksRequestType countTasksRequest, object userState) {
        if ((this.countTasksOperationCompleted == null)) {
            this.countTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountTasksOperationCompleted);
        }
        this.InvokeAsync("countTasks", new object[] {
                    countTasksRequest}, this.countTasksOperationCompleted, userState);
    }
    
    private void OncountTasksOperationCompleted(object arg) {
        if ((this.countTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.countTasksCompleted(this, new countTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("taskExistsResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public bool doesTaskExist([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] countTasksRequestType doesTaskExistRequest) {
        object[] results = this.Invoke("doesTaskExist", new object[] {
                    doesTaskExistRequest});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoesTaskExist(countTasksRequestType doesTaskExistRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doesTaskExist", new object[] {
                    doesTaskExistRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EnddoesTaskExist(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void doesTaskExistAsync(countTasksRequestType doesTaskExistRequest) {
        this.doesTaskExistAsync(doesTaskExistRequest, null);
    }
    
    /// <remarks/>
    public void doesTaskExistAsync(countTasksRequestType doesTaskExistRequest, object userState) {
        if ((this.doesTaskExistOperationCompleted == null)) {
            this.doesTaskExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoesTaskExistOperationCompleted);
        }
        this.InvokeAsync("doesTaskExist", new object[] {
                    doesTaskExistRequest}, this.doesTaskExistOperationCompleted, userState);
    }
    
    private void OndoesTaskExistOperationCompleted(object arg) {
        if ((this.doesTaskExistCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doesTaskExistCompleted(this, new doesTaskExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("taskListResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("task", Namespace="http://xmlns.oracle.com/bpel/workflow/task", IsNullable=false)]
    public task[] queryViewTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] queryViewTasksRequestType queryViewTasksRequest) {
        object[] results = this.Invoke("queryViewTasks", new object[] {
                    queryViewTasksRequest});
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryViewTasks(queryViewTasksRequestType queryViewTasksRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryViewTasks", new object[] {
                    queryViewTasksRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public task[] EndqueryViewTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public void queryViewTasksAsync(queryViewTasksRequestType queryViewTasksRequest) {
        this.queryViewTasksAsync(queryViewTasksRequest, null);
    }
    
    /// <remarks/>
    public void queryViewTasksAsync(queryViewTasksRequestType queryViewTasksRequest, object userState) {
        if ((this.queryViewTasksOperationCompleted == null)) {
            this.queryViewTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryViewTasksOperationCompleted);
        }
        this.InvokeAsync("queryViewTasks", new object[] {
                    queryViewTasksRequest}, this.queryViewTasksOperationCompleted, userState);
    }
    
    private void OnqueryViewTasksOperationCompleted(object arg) {
        if ((this.queryViewTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryViewTasksCompleted(this, new queryViewTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("aggregatedTasksResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("entry", IsNullable=false)]
    public taskCountType[] queryViewAggregatedTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] queryViewAggregatedTasksRequestType queryViewAggregatedTasksRequest) {
        object[] results = this.Invoke("queryViewAggregatedTasks", new object[] {
                    queryViewAggregatedTasksRequest});
        return ((taskCountType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryViewAggregatedTasks(queryViewAggregatedTasksRequestType queryViewAggregatedTasksRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryViewAggregatedTasks", new object[] {
                    queryViewAggregatedTasksRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public taskCountType[] EndqueryViewAggregatedTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((taskCountType[])(results[0]));
    }
    
    /// <remarks/>
    public void queryViewAggregatedTasksAsync(queryViewAggregatedTasksRequestType queryViewAggregatedTasksRequest) {
        this.queryViewAggregatedTasksAsync(queryViewAggregatedTasksRequest, null);
    }
    
    /// <remarks/>
    public void queryViewAggregatedTasksAsync(queryViewAggregatedTasksRequestType queryViewAggregatedTasksRequest, object userState) {
        if ((this.queryViewAggregatedTasksOperationCompleted == null)) {
            this.queryViewAggregatedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryViewAggregatedTasksOperationCompleted);
        }
        this.InvokeAsync("queryViewAggregatedTasks", new object[] {
                    queryViewAggregatedTasksRequest}, this.queryViewAggregatedTasksOperationCompleted, userState);
    }
    
    private void OnqueryViewAggregatedTasksOperationCompleted(object arg) {
        if ((this.queryViewAggregatedTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryViewAggregatedTasksCompleted(this, new queryViewAggregatedTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("taskCountResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public int countViewTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] countViewTasksRequestType countViewTasksRequest) {
        object[] results = this.Invoke("countViewTasks", new object[] {
                    countViewTasksRequest});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincountViewTasks(countViewTasksRequestType countViewTasksRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("countViewTasks", new object[] {
                    countViewTasksRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndcountViewTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void countViewTasksAsync(countViewTasksRequestType countViewTasksRequest) {
        this.countViewTasksAsync(countViewTasksRequest, null);
    }
    
    /// <remarks/>
    public void countViewTasksAsync(countViewTasksRequestType countViewTasksRequest, object userState) {
        if ((this.countViewTasksOperationCompleted == null)) {
            this.countViewTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountViewTasksOperationCompleted);
        }
        this.InvokeAsync("countViewTasks", new object[] {
                    countViewTasksRequest}, this.countViewTasksOperationCompleted, userState);
    }
    
    private void OncountViewTasksOperationCompleted(object arg) {
        if ((this.countViewTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.countViewTasksCompleted(this, new countViewTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("taskExistsResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public bool doesViewTaskExist([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] countViewTasksRequestType doesViewTaskExistRequest) {
        object[] results = this.Invoke("doesViewTaskExist", new object[] {
                    doesViewTaskExistRequest});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoesViewTaskExist(countViewTasksRequestType doesViewTaskExistRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doesViewTaskExist", new object[] {
                    doesViewTaskExistRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EnddoesViewTaskExist(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void doesViewTaskExistAsync(countViewTasksRequestType doesViewTaskExistRequest) {
        this.doesViewTaskExistAsync(doesViewTaskExistRequest, null);
    }
    
    /// <remarks/>
    public void doesViewTaskExistAsync(countViewTasksRequestType doesViewTaskExistRequest, object userState) {
        if ((this.doesViewTaskExistOperationCompleted == null)) {
            this.doesViewTaskExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoesViewTaskExistOperationCompleted);
        }
        this.InvokeAsync("doesViewTaskExist", new object[] {
                    doesViewTaskExistRequest}, this.doesViewTaskExistOperationCompleted, userState);
    }
    
    private void OndoesViewTaskExistOperationCompleted(object arg) {
        if ((this.doesViewTaskExistCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doesViewTaskExistCompleted(this, new doesViewTaskExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("taskListResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("task", Namespace="http://xmlns.oracle.com/bpel/workflow/task", IsNullable=false)]
    public task[] queryDecomposedTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] queryDecomposedTasksRequestType queryDecomposedTasksRequest) {
        object[] results = this.Invoke("queryDecomposedTasks", new object[] {
                    queryDecomposedTasksRequest});
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryDecomposedTasks(queryDecomposedTasksRequestType queryDecomposedTasksRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryDecomposedTasks", new object[] {
                    queryDecomposedTasksRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public task[] EndqueryDecomposedTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public void queryDecomposedTasksAsync(queryDecomposedTasksRequestType queryDecomposedTasksRequest) {
        this.queryDecomposedTasksAsync(queryDecomposedTasksRequest, null);
    }
    
    /// <remarks/>
    public void queryDecomposedTasksAsync(queryDecomposedTasksRequestType queryDecomposedTasksRequest, object userState) {
        if ((this.queryDecomposedTasksOperationCompleted == null)) {
            this.queryDecomposedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryDecomposedTasksOperationCompleted);
        }
        this.InvokeAsync("queryDecomposedTasks", new object[] {
                    queryDecomposedTasksRequest}, this.queryDecomposedTasksOperationCompleted, userState);
    }
    
    private void OnqueryDecomposedTasksOperationCompleted(object arg) {
        if ((this.queryDecomposedTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryDecomposedTasksCompleted(this, new queryDecomposedTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("taskErrorsResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("taskError", Namespace="http://xmlns.oracle.com/bpel/workflow/taskError", IsNullable=false)]
    public taskError[] queryTaskErrors([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] queryTaskErrorsRequestType queryTaskErrorsRequest) {
        object[] results = this.Invoke("queryTaskErrors", new object[] {
                    queryTaskErrorsRequest});
        return ((taskError[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginqueryTaskErrors(queryTaskErrorsRequestType queryTaskErrorsRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("queryTaskErrors", new object[] {
                    queryTaskErrorsRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public taskError[] EndqueryTaskErrors(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((taskError[])(results[0]));
    }
    
    /// <remarks/>
    public void queryTaskErrorsAsync(queryTaskErrorsRequestType queryTaskErrorsRequest) {
        this.queryTaskErrorsAsync(queryTaskErrorsRequest, null);
    }
    
    /// <remarks/>
    public void queryTaskErrorsAsync(queryTaskErrorsRequestType queryTaskErrorsRequest, object userState) {
        if ((this.queryTaskErrorsOperationCompleted == null)) {
            this.queryTaskErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryTaskErrorsOperationCompleted);
        }
        this.InvokeAsync("queryTaskErrors", new object[] {
                    queryTaskErrorsRequest}, this.queryTaskErrorsOperationCompleted, userState);
    }
    
    private void OnqueryTaskErrorsOperationCompleted(object arg) {
        if ((this.queryTaskErrorsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.queryTaskErrorsCompleted(this, new queryTaskErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlArrayAttribute("taskListResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("task", Namespace="http://xmlns.oracle.com/bpel/workflow/task", IsNullable=false)]
    public task[] getTaskHistory([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] taskHistoryRequestType taskHistoryRequest) {
        object[] results = this.Invoke("getTaskHistory", new object[] {
                    taskHistoryRequest});
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTaskHistory(taskHistoryRequestType taskHistoryRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTaskHistory", new object[] {
                    taskHistoryRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public task[] EndgetTaskHistory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public void getTaskHistoryAsync(taskHistoryRequestType taskHistoryRequest) {
        this.getTaskHistoryAsync(taskHistoryRequest, null);
    }
    
    /// <remarks/>
    public void getTaskHistoryAsync(taskHistoryRequestType taskHistoryRequest, object userState) {
        if ((this.getTaskHistoryOperationCompleted == null)) {
            this.getTaskHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskHistoryOperationCompleted);
        }
        this.InvokeAsync("getTaskHistory", new object[] {
                    taskHistoryRequest}, this.getTaskHistoryOperationCompleted, userState);
    }
    
    private void OngetTaskHistoryOperationCompleted(object arg) {
        if ((this.getTaskHistoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTaskHistoryCompleted(this, new getTaskHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("task", Namespace="http://xmlns.oracle.com/bpel/workflow/task")]
    public task getTaskDetailsById([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] taskDetailsByIdRequestType taskDetailsByIdRequest) {
        object[] results = this.Invoke("getTaskDetailsById", new object[] {
                    taskDetailsByIdRequest});
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTaskDetailsById(taskDetailsByIdRequestType taskDetailsByIdRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTaskDetailsById", new object[] {
                    taskDetailsByIdRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public task EndgetTaskDetailsById(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public void getTaskDetailsByIdAsync(taskDetailsByIdRequestType taskDetailsByIdRequest) {
        this.getTaskDetailsByIdAsync(taskDetailsByIdRequest, null);
    }
    
    /// <remarks/>
    public void getTaskDetailsByIdAsync(taskDetailsByIdRequestType taskDetailsByIdRequest, object userState) {
        if ((this.getTaskDetailsByIdOperationCompleted == null)) {
            this.getTaskDetailsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskDetailsByIdOperationCompleted);
        }
        this.InvokeAsync("getTaskDetailsById", new object[] {
                    taskDetailsByIdRequest}, this.getTaskDetailsByIdOperationCompleted, userState);
    }
    
    private void OngetTaskDetailsByIdOperationCompleted(object arg) {
        if ((this.getTaskDetailsByIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTaskDetailsByIdCompleted(this, new getTaskDetailsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("task", Namespace="http://xmlns.oracle.com/bpel/workflow/task")]
    public task getTaskDetailsByNumber([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] taskDetailsByNumberRequestType taskDetailsByNumberRequest) {
        object[] results = this.Invoke("getTaskDetailsByNumber", new object[] {
                    taskDetailsByNumberRequest});
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTaskDetailsByNumber(taskDetailsByNumberRequestType taskDetailsByNumberRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTaskDetailsByNumber", new object[] {
                    taskDetailsByNumberRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public task EndgetTaskDetailsByNumber(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public void getTaskDetailsByNumberAsync(taskDetailsByNumberRequestType taskDetailsByNumberRequest) {
        this.getTaskDetailsByNumberAsync(taskDetailsByNumberRequest, null);
    }
    
    /// <remarks/>
    public void getTaskDetailsByNumberAsync(taskDetailsByNumberRequestType taskDetailsByNumberRequest, object userState) {
        if ((this.getTaskDetailsByNumberOperationCompleted == null)) {
            this.getTaskDetailsByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskDetailsByNumberOperationCompleted);
        }
        this.InvokeAsync("getTaskDetailsByNumber", new object[] {
                    taskDetailsByNumberRequest}, this.getTaskDetailsByNumberOperationCompleted, userState);
    }
    
    private void OngetTaskDetailsByNumberOperationCompleted(object arg) {
        if ((this.getTaskDetailsByNumberCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTaskDetailsByNumberCompleted(this, new getTaskDetailsByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("task", Namespace="http://xmlns.oracle.com/bpel/workflow/task")]
    public task getTaskVersionDetails([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] taskVersionDetailsRequestType taskVersionDetailsRequest) {
        object[] results = this.Invoke("getTaskVersionDetails", new object[] {
                    taskVersionDetailsRequest});
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTaskVersionDetails(taskVersionDetailsRequestType taskVersionDetailsRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTaskVersionDetails", new object[] {
                    taskVersionDetailsRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public task EndgetTaskVersionDetails(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public void getTaskVersionDetailsAsync(taskVersionDetailsRequestType taskVersionDetailsRequest) {
        this.getTaskVersionDetailsAsync(taskVersionDetailsRequest, null);
    }
    
    /// <remarks/>
    public void getTaskVersionDetailsAsync(taskVersionDetailsRequestType taskVersionDetailsRequest, object userState) {
        if ((this.getTaskVersionDetailsOperationCompleted == null)) {
            this.getTaskVersionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskVersionDetailsOperationCompleted);
        }
        this.InvokeAsync("getTaskVersionDetails", new object[] {
                    taskVersionDetailsRequest}, this.getTaskVersionDetailsOperationCompleted, userState);
    }
    
    private void OngetTaskVersionDetailsOperationCompleted(object arg) {
        if ((this.getTaskVersionDetailsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTaskVersionDetailsCompleted(this, new getTaskVersionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("getPermittedAssigneesResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public getPermittedAssigneesResponseType getPermittedAssignees([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] getPermittedAssigneesRequestType getPermittedAssigneesRequest) {
        object[] results = this.Invoke("getPermittedAssignees", new object[] {
                    getPermittedAssigneesRequest});
        return ((getPermittedAssigneesResponseType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPermittedAssignees(getPermittedAssigneesRequestType getPermittedAssigneesRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPermittedAssignees", new object[] {
                    getPermittedAssigneesRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public getPermittedAssigneesResponseType EndgetPermittedAssignees(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((getPermittedAssigneesResponseType)(results[0]));
    }
    
    /// <remarks/>
    public void getPermittedAssigneesAsync(getPermittedAssigneesRequestType getPermittedAssigneesRequest) {
        this.getPermittedAssigneesAsync(getPermittedAssigneesRequest, null);
    }
    
    /// <remarks/>
    public void getPermittedAssigneesAsync(getPermittedAssigneesRequestType getPermittedAssigneesRequest, object userState) {
        if ((this.getPermittedAssigneesOperationCompleted == null)) {
            this.getPermittedAssigneesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPermittedAssigneesOperationCompleted);
        }
        this.InvokeAsync("getPermittedAssignees", new object[] {
                    getPermittedAssigneesRequest}, this.getPermittedAssigneesOperationCompleted, userState);
    }
    
    private void OngetPermittedAssigneesOperationCompleted(object arg) {
        if ((this.getPermittedAssigneesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPermittedAssigneesCompleted(this, new getPermittedAssigneesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("getPermittedAssigneesForTasksResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public getPermittedAssigneesForTasksResponseType getPermittedAssigneesForTasks([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] getPermittedAssigneesForTasksRequestType getPermittedAssigneesForTasksRequest) {
        object[] results = this.Invoke("getPermittedAssigneesForTasks", new object[] {
                    getPermittedAssigneesForTasksRequest});
        return ((getPermittedAssigneesForTasksResponseType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPermittedAssigneesForTasks(getPermittedAssigneesForTasksRequestType getPermittedAssigneesForTasksRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPermittedAssigneesForTasks", new object[] {
                    getPermittedAssigneesForTasksRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public getPermittedAssigneesForTasksResponseType EndgetPermittedAssigneesForTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((getPermittedAssigneesForTasksResponseType)(results[0]));
    }
    
    /// <remarks/>
    public void getPermittedAssigneesForTasksAsync(getPermittedAssigneesForTasksRequestType getPermittedAssigneesForTasksRequest) {
        this.getPermittedAssigneesForTasksAsync(getPermittedAssigneesForTasksRequest, null);
    }
    
    /// <remarks/>
    public void getPermittedAssigneesForTasksAsync(getPermittedAssigneesForTasksRequestType getPermittedAssigneesForTasksRequest, object userState) {
        if ((this.getPermittedAssigneesForTasksOperationCompleted == null)) {
            this.getPermittedAssigneesForTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPermittedAssigneesForTasksOperationCompleted);
        }
        this.InvokeAsync("getPermittedAssigneesForTasks", new object[] {
                    getPermittedAssigneesForTasksRequest}, this.getPermittedAssigneesForTasksOperationCompleted, userState);
    }
    
    private void OngetPermittedAssigneesForTasksOperationCompleted(object arg) {
        if ((this.getPermittedAssigneesForTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPermittedAssigneesForTasksCompleted(this, new getPermittedAssigneesForTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("taskSequence", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public taskSequenceType getTaskSequence([System.Xml.Serialization.XmlElementAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] getTaskSequenceRequestType getTaskSequenceRequest) {
        object[] results = this.Invoke("getTaskSequence", new object[] {
                    getTaskSequenceRequest});
        return ((taskSequenceType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTaskSequence(getTaskSequenceRequestType getTaskSequenceRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTaskSequence", new object[] {
                    getTaskSequenceRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public taskSequenceType EndgetTaskSequence(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((taskSequenceType)(results[0]));
    }
    
    /// <remarks/>
    public void getTaskSequenceAsync(getTaskSequenceRequestType getTaskSequenceRequest) {
        this.getTaskSequenceAsync(getTaskSequenceRequest, null);
    }
    
    /// <remarks/>
    public void getTaskSequenceAsync(getTaskSequenceRequestType getTaskSequenceRequest, object userState) {
        if ((this.getTaskSequenceOperationCompleted == null)) {
            this.getTaskSequenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskSequenceOperationCompleted);
        }
        this.InvokeAsync("getTaskSequence", new object[] {
                    getTaskSequenceRequest}, this.getTaskSequenceOperationCompleted, userState);
    }
    
    private void OngetTaskSequenceOperationCompleted(object arg) {
        if ((this.getTaskSequenceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTaskSequenceCompleted(this, new getTaskSequenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
    [return: System.Xml.Serialization.XmlElementAttribute("taskSummaryFieldsInfoResponse", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")]
    public summaryFieldsInfoResponseType getSummaryFieldsInfoForTask([System.Xml.Serialization.XmlElementAttribute("getSummaryFieldsInfoForTask", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQueryService")] summaryFieldsInfoByTaskIdType getSummaryFieldsInfoForTask1) {
        object[] results = this.Invoke("getSummaryFieldsInfoForTask", new object[] {
                    getSummaryFieldsInfoForTask1});
        return ((summaryFieldsInfoResponseType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSummaryFieldsInfoForTask(summaryFieldsInfoByTaskIdType getSummaryFieldsInfoForTask1, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSummaryFieldsInfoForTask", new object[] {
                    getSummaryFieldsInfoForTask1}, callback, asyncState);
    }
    
    /// <remarks/>
    public summaryFieldsInfoResponseType EndgetSummaryFieldsInfoForTask(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((summaryFieldsInfoResponseType)(results[0]));
    }
    
    /// <remarks/>
    public void getSummaryFieldsInfoForTaskAsync(summaryFieldsInfoByTaskIdType getSummaryFieldsInfoForTask1) {
        this.getSummaryFieldsInfoForTaskAsync(getSummaryFieldsInfoForTask1, null);
    }
    
    /// <remarks/>
    public void getSummaryFieldsInfoForTaskAsync(summaryFieldsInfoByTaskIdType getSummaryFieldsInfoForTask1, object userState) {
        if ((this.getSummaryFieldsInfoForTaskOperationCompleted == null)) {
            this.getSummaryFieldsInfoForTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSummaryFieldsInfoForTaskOperationCompleted);
        }
        this.InvokeAsync("getSummaryFieldsInfoForTask", new object[] {
                    getSummaryFieldsInfoForTask1}, this.getSummaryFieldsInfoForTaskOperationCompleted, userState);
    }
    
    private void OngetSummaryFieldsInfoForTaskOperationCompleted(object arg) {
        if ((this.getSummaryFieldsInfoForTaskCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSummaryFieldsInfoForTaskCompleted(this, new getSummaryFieldsInfoForTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class presentationType {
    
    private string idField;
    
    private string nameField;
    
    private string ownerField;
    
    private string identityContextField;
    
    private columnType1[] columnsField;
    
    private taskOptionalInfoEnum[] optionalInfoField;
    
    private orderingClauseType[] orderingField;
    
    private principleRefType[] granteesField;
    
    private System.DateTime createdDateField;
    
    private bool createdDateFieldSpecified;
    
    private System.DateTime updatedDateField;
    
    private bool updatedDateFieldSpecified;
    
    private string createdByField;
    
    private string updatedByField;
    
    private presentationDataTypeEnum presentationDataTypeField;
    
    private bool presentationDataTypeFieldSpecified;
    
    /// <remarks/>
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string owner {
        get {
            return this.ownerField;
        }
        set {
            this.ownerField = value;
        }
    }
    
    /// <remarks/>
    public string identityContext {
        get {
            return this.identityContextField;
        }
        set {
            this.identityContextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("column", IsNullable=false)]
    public columnType1[] columns {
        get {
            return this.columnsField;
        }
        set {
            this.columnsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("taskOptionalInfo", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQuery", IsNullable=false)]
    public taskOptionalInfoEnum[] optionalInfo {
        get {
            return this.optionalInfoField;
        }
        set {
            this.optionalInfoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("clause", Namespace="http://xmlns.oracle.com/bpel/workflow/taskQuery", IsNullable=false)]
    public orderingClauseType[] ordering {
        get {
            return this.orderingField;
        }
        set {
            this.orderingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("participant", Namespace="http://xmlns.oracle.com/bpel/workflow/common", IsNullable=false)]
    public principleRefType[] grantees {
        get {
            return this.granteesField;
        }
        set {
            this.granteesField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime createdDate {
        get {
            return this.createdDateField;
        }
        set {
            this.createdDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool createdDateSpecified {
        get {
            return this.createdDateFieldSpecified;
        }
        set {
            this.createdDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime updatedDate {
        get {
            return this.updatedDateField;
        }
        set {
            this.updatedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool updatedDateSpecified {
        get {
            return this.updatedDateFieldSpecified;
        }
        set {
            this.updatedDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string createdBy {
        get {
            return this.createdByField;
        }
        set {
            this.createdByField = value;
        }
    }
    
    /// <remarks/>
    public string updatedBy {
        get {
            return this.updatedByField;
        }
        set {
            this.updatedByField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public presentationDataTypeEnum presentationDataType {
        get {
            return this.presentationDataTypeField;
        }
        set {
            this.presentationDataTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool presentationDataTypeSpecified {
        get {
            return this.presentationDataTypeFieldSpecified;
        }
        set {
            this.presentationDataTypeFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="columnType", Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class columnType1 {
    
    private string columnNameField;
    
    private string displayNameField;
    
    private string columnWidthField;
    
    private string formatMaskField;
    
    /// <remarks/>
    public string columnName {
        get {
            return this.columnNameField;
        }
        set {
            this.columnNameField = value;
        }
    }
    
    /// <remarks/>
    public string displayName {
        get {
            return this.displayNameField;
        }
        set {
            this.displayNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
    public string columnWidth {
        get {
            return this.columnWidthField;
        }
        set {
            this.columnWidthField = value;
        }
    }
    
    /// <remarks/>
    public string formatMask {
        get {
            return this.formatMaskField;
        }
        set {
            this.formatMaskField = value;
        }
    }
}

/// <remarks/>


/// <remarks/>


/// <remarks/>


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class viewGranteeType : principleRefType {
    
    private grantTypeEnum grantTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public grantTypeEnum grantType {
        get {
            return this.grantTypeField;
        }
        set {
            this.grantTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public enum grantTypeEnum {
    
    /// <remarks/>
    SHARE_DATA,
    
    /// <remarks/>
    SHARE_DEFINITION,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public enum presentationDataTypeEnum {
    
    /// <remarks/>
    TASK,
    
    /// <remarks/>
    PROCESS,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class userApplicationDataType {
    
    private string idField;
    
    private string nameField;
    
    private string ownerField;
    
    private string identityContextField;
    
    private string dataField;
    
    private principleRefType[] granteesField;
    
    private System.DateTime createdDateField;
    
    private bool createdDateFieldSpecified;
    
    private System.DateTime updatedDateField;
    
    private bool updatedDateFieldSpecified;
    
    private string createdByField;
    
    private string updatedByField;
    
    private string applicationDataTypeField;
    
    /// <remarks/>
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string owner {
        get {
            return this.ownerField;
        }
        set {
            this.ownerField = value;
        }
    }
    
    /// <remarks/>
    public string identityContext {
        get {
            return this.identityContextField;
        }
        set {
            this.identityContextField = value;
        }
    }
    
    /// <remarks/>
    public string data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("participant", Namespace="http://xmlns.oracle.com/bpel/workflow/common", IsNullable=false)]
    public principleRefType[] grantees {
        get {
            return this.granteesField;
        }
        set {
            this.granteesField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime createdDate {
        get {
            return this.createdDateField;
        }
        set {
            this.createdDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool createdDateSpecified {
        get {
            return this.createdDateFieldSpecified;
        }
        set {
            this.createdDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime updatedDate {
        get {
            return this.updatedDateField;
        }
        set {
            this.updatedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool updatedDateSpecified {
        get {
            return this.updatedDateFieldSpecified;
        }
        set {
            this.updatedDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string createdBy {
        get {
            return this.createdByField;
        }
        set {
            this.createdByField = value;
        }
    }
    
    /// <remarks/>
    public string updatedBy {
        get {
            return this.updatedByField;
        }
        set {
            this.updatedByField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string applicationDataType {
        get {
            return this.applicationDataTypeField;
        }
        set {
            this.applicationDataTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class userPreferenceType {
    
    private principleRefType userField;
    
    private string nameField;
    
    private string valueField;
    
    /// <remarks/>
    public principleRefType user {
        get {
            return this.userField;
        }
        set {
            this.userField = value;
        }
    }
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class chartType {
    
    private string groupByColumnField;
    
    private string[] selectValuesField;
    
    private bool orderByCountField;
    
    private bool orderByCountFieldSpecified;
    
    private bool ascendingOrderField;
    
    private bool ascendingOrderFieldSpecified;
    
    /// <remarks/>
    public string groupByColumn {
        get {
            return this.groupByColumnField;
        }
        set {
            this.groupByColumnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("value", IsNullable=false)]
    public string[] selectValues {
        get {
            return this.selectValuesField;
        }
        set {
            this.selectValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool orderByCount {
        get {
            return this.orderByCountField;
        }
        set {
            this.orderByCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool orderByCountSpecified {
        get {
            return this.orderByCountFieldSpecified;
        }
        set {
            this.orderByCountFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool ascendingOrder {
        get {
            return this.ascendingOrderField;
        }
        set {
            this.ascendingOrderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ascendingOrderSpecified {
        get {
            return this.ascendingOrderFieldSpecified;
        }
        set {
            this.ascendingOrderFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class viewGrantType {
    
    private string viewIdField;
    
    private principleRefType granteeField;
    
    private string grantedNameField;
    
    private string grantedDescriptionField;
    
    private bool hiddenField;
    
    private principleRefType viewOwnerField;
    
    private string originalNameField;
    
    private string originalDescriptionField;
    
    private grantTypeEnum grantTypeField;
    
    /// <remarks/>
    public string viewId {
        get {
            return this.viewIdField;
        }
        set {
            this.viewIdField = value;
        }
    }
    
    /// <remarks/>
    public principleRefType grantee {
        get {
            return this.granteeField;
        }
        set {
            this.granteeField = value;
        }
    }
    
    /// <remarks/>
    public string grantedName {
        get {
            return this.grantedNameField;
        }
        set {
            this.grantedNameField = value;
        }
    }
    
    /// <remarks/>
    public string grantedDescription {
        get {
            return this.grantedDescriptionField;
        }
        set {
            this.grantedDescriptionField = value;
        }
    }
    
    /// <remarks/>
    public bool hidden {
        get {
            return this.hiddenField;
        }
        set {
            this.hiddenField = value;
        }
    }
    
    /// <remarks/>
    public principleRefType viewOwner {
        get {
            return this.viewOwnerField;
        }
        set {
            this.viewOwnerField = value;
        }
    }
    
    /// <remarks/>
    public string originalName {
        get {
            return this.originalNameField;
        }
        set {
            this.originalNameField = value;
        }
    }
    
    /// <remarks/>
    public string originalDescription {
        get {
            return this.originalDescriptionField;
        }
        set {
            this.originalDescriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public grantTypeEnum grantType {
        get {
            return this.grantTypeField;
        }
        set {
            this.grantTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class viewSummaryType {
    
    private string idField;
    
    private string nameField;
    
    private principleRefType ownerField;
    
    private bool hiddenField;
    
    private viewTypeEnum viewTypeField;
    
    private string descriptionField;
    
    private System.DateTime createdDateField;
    
    private System.DateTime updatedDateField;
    
    private string untranslatedNameField;
    
    /// <remarks/>
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public principleRefType owner {
        get {
            return this.ownerField;
        }
        set {
            this.ownerField = value;
        }
    }
    
    /// <remarks/>
    public bool hidden {
        get {
            return this.hiddenField;
        }
        set {
            this.hiddenField = value;
        }
    }
    
    /// <remarks/>
    public viewTypeEnum viewType {
        get {
            return this.viewTypeField;
        }
        set {
            this.viewTypeField = value;
        }
    }
    
    /// <remarks/>
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime createdDate {
        get {
            return this.createdDateField;
        }
        set {
            this.createdDateField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime updatedDate {
        get {
            return this.updatedDateField;
        }
        set {
            this.updatedDateField = value;
        }
    }
    
    /// <remarks/>
    public string untranslatedName {
        get {
            return this.untranslatedNameField;
        }
        set {
            this.untranslatedNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public enum viewTypeEnum {
    
    /// <remarks/>
    INBOX,
    
    /// <remarks/>
    VIEW,
    
    /// <remarks/>
    STANDARD_VIEW,
    
    /// <remarks/>
    PROCESS_VIEW,
    
    /// <remarks/>
    STANDARD_PROCESS_VIEW,
    
    /// <remarks/>
    REPORT,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class ruleActionType {
    
    private object itemField;
    
    private ItemChoiceType itemElementNameField;
    
    private actionTypeEnum actionTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("delegate", typeof(ruleAssignmentType))]
    [System.Xml.Serialization.XmlElementAttribute("noOperation", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("reassign", typeof(ruleAssignmentType))]
    [System.Xml.Serialization.XmlElementAttribute("setOutcome", typeof(string))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public actionTypeEnum actionType {
        get {
            return this.actionTypeField;
        }
        set {
            this.actionTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class ruleAssignmentType {
    
    private principleRefType assigneeField;
    
    private string dynamicAssignmentFunctionField;
    
    /// <remarks/>
    public principleRefType assignee {
        get {
            return this.assigneeField;
        }
        set {
            this.assigneeField = value;
        }
    }
    
    /// <remarks/>
    public string dynamicAssignmentFunction {
        get {
            return this.dynamicAssignmentFunctionField;
        }
        set {
            this.dynamicAssignmentFunctionField = value;
        }
    }
}



/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public enum actionTypeEnum {
    
    /// <remarks/>
    NOOPERATION,
    
    /// <remarks/>
    REASSIGN,
    
    /// <remarks/>
    DELEGATE,
    
    /// <remarks/>
    SETOUTCOME,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class ruleTestType {
    
    private string fieldField;
    
    private ruleTestTypeOperation operationField;
    
    private object itemField;
    
    /// <remarks/>
    public string field {
        get {
            return this.fieldField;
        }
        set {
            this.fieldField = value;
        }
    }
    
    /// <remarks/>
    public ruleTestTypeOperation operation {
        get {
            return this.operationField;
        }
        set {
            this.operationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("dateValue", typeof(System.DateTime))]
    [System.Xml.Serialization.XmlElementAttribute("value", typeof(string))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public enum ruleTestTypeOperation {
    
    /// <remarks/>
    EQ,
    
    /// <remarks/>
    NEQ,
    
    /// <remarks/>
    GTE,
    
    /// <remarks/>
    LTE,
    
    /// <remarks/>
    LT,
    
    /// <remarks/>
    GT,
    
    /// <remarks/>
    CONTAINS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NOT CONTAINS")]
    NOTCONTAINS,
    
    /// <remarks/>
    BEGINS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NOT BEGINS")]
    NOTBEGINS,
    
    /// <remarks/>
    ENDS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("NOT ENDS")]
    NOTENDS,
    
    /// <remarks/>
    BEFORE,
    
    /// <remarks/>
    AFTER,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class ruleInfoType {
    
    private string ruleIdField;
    
    private string ruleNameField;
    
    private int priorityField;
    
    private principleRefType ownerField;
    
    private string[] itemsField;
    
    private ItemsChoiceType3[] itemsElementNameField;
    
    private string taskDefinitionDisplayNameField;
    
    private System.Nullable<System.DateTime> startDateField;
    
    private System.Nullable<System.DateTime> endDateField;
    
    private actionTypeEnum actionTypeField;
    
    private bool actionTypeFieldSpecified;
    
    private string actionTargetField;
    
    private bool isVacationRuleField;
    
    private bool isVacationRuleFieldSpecified;
    
    private string descriptionField;
    
    private System.DateTime createdDateField;
    
    private bool createdDateFieldSpecified;
    
    private System.DateTime updatedDateField;
    
    private bool updatedDateFieldSpecified;
    
    private ruleTypeEnum ruleTypeField;
    
    private bool ruleTypeFieldSpecified;
    
    /// <remarks/>
    public string ruleId {
        get {
            return this.ruleIdField;
        }
        set {
            this.ruleIdField = value;
        }
    }
    
    /// <remarks/>
    public string ruleName {
        get {
            return this.ruleNameField;
        }
        set {
            this.ruleNameField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    public principleRefType owner {
        get {
            return this.ownerField;
        }
        set {
            this.ownerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("taskCategory", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("taskCategoryDisplayName", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("taskNamespace", typeof(string))]
    [System.Xml.Serialization.XmlElementAttribute("workflowId", typeof(string))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
    public string[] Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemsChoiceType3[] ItemsElementName {
        get {
            return this.itemsElementNameField;
        }
        set {
            this.itemsElementNameField = value;
        }
    }
    
    /// <remarks/>
    public string taskDefinitionDisplayName {
        get {
            return this.taskDefinitionDisplayNameField;
        }
        set {
            this.taskDefinitionDisplayNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> startDate {
        get {
            return this.startDateField;
        }
        set {
            this.startDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> endDate {
        get {
            return this.endDateField;
        }
        set {
            this.endDateField = value;
        }
    }
    
    /// <remarks/>
    public actionTypeEnum actionType {
        get {
            return this.actionTypeField;
        }
        set {
            this.actionTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool actionTypeSpecified {
        get {
            return this.actionTypeFieldSpecified;
        }
        set {
            this.actionTypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string actionTarget {
        get {
            return this.actionTargetField;
        }
        set {
            this.actionTargetField = value;
        }
    }
    
    /// <remarks/>
    public bool isVacationRule {
        get {
            return this.isVacationRuleField;
        }
        set {
            this.isVacationRuleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool isVacationRuleSpecified {
        get {
            return this.isVacationRuleFieldSpecified;
        }
        set {
            this.isVacationRuleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime createdDate {
        get {
            return this.createdDateField;
        }
        set {
            this.createdDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool createdDateSpecified {
        get {
            return this.createdDateFieldSpecified;
        }
        set {
            this.createdDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime updatedDate {
        get {
            return this.updatedDateField;
        }
        set {
            this.updatedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool updatedDateSpecified {
        get {
            return this.updatedDateFieldSpecified;
        }
        set {
            this.updatedDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ruleTypeEnum ruleType {
        get {
            return this.ruleTypeField;
        }
        set {
            this.ruleTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ruleTypeSpecified {
        get {
            return this.ruleTypeFieldSpecified;
        }
        set {
            this.ruleTypeFieldSpecified = value;
        }
    }
}

/// <remarks/>
/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public enum ruleTypeEnum {
    
    /// <remarks/>
    USER,
    
    /// <remarks/>
    GROUP,
}

/// <remarks/>


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public partial class ruleRepositoryInfoType {
    
    private ruleEngineEnum ruleEngineField;
    
    private string repositoryLocationField;
    
    private string dictionaryNameField;
    
    private propertyType1[] reposPropertyField;
    
    /// <remarks/>
    public ruleEngineEnum ruleEngine {
        get {
            return this.ruleEngineField;
        }
        set {
            this.ruleEngineField = value;
        }
    }
    
    /// <remarks/>
    public string repositoryLocation {
        get {
            return this.repositoryLocationField;
        }
        set {
            this.repositoryLocationField = value;
        }
    }
    
    /// <remarks/>
    public string dictionaryName {
        get {
            return this.dictionaryNameField;
        }
        set {
            this.dictionaryNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("reposProperty")]
    public propertyType1[] reposProperty {
        get {
            return this.reposPropertyField;
        }
        set {
            this.reposPropertyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xmlns.oracle.com/bpel/workflow/userMetadata")]
public enum ruleEngineEnum {
    
    /// <remarks/>
    ORACLE,
    
    /// <remarks/>
    OTHER,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void authenticateCompletedEventHandler(object sender, authenticateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class authenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal authenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public workflowContextType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((workflowContextType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void authenticateOnBehalfOfCompletedEventHandler(object sender, authenticateOnBehalfOfCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class authenticateOnBehalfOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal authenticateOnBehalfOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public workflowContextType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((workflowContextType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getWorkflowContextCompletedEventHandler(object sender, getWorkflowContextCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getWorkflowContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getWorkflowContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public workflowContextType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((workflowContextType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void destroyWorkflowContextCompletedEventHandler(object sender, destroyWorkflowContextCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class destroyWorkflowContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal destroyWorkflowContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void refreshWorkflowContextCompletedEventHandler(object sender, refreshWorkflowContextCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class refreshWorkflowContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal refreshWorkflowContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public workflowContextType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((workflowContextType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void updateWorkflowContextCompletedEventHandler(object sender, updateWorkflowContextCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class updateWorkflowContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal updateWorkflowContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public workflowContextType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((workflowContextType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void queryTasksCompletedEventHandler(object sender, queryTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void queryAggregatedTasksCompletedEventHandler(object sender, queryAggregatedTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryAggregatedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryAggregatedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public taskCountType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((taskCountType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void countTasksCompletedEventHandler(object sender, countTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class countTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal countTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void doesTaskExistCompletedEventHandler(object sender, doesTaskExistCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doesTaskExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doesTaskExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void queryViewTasksCompletedEventHandler(object sender, queryViewTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryViewTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryViewTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void queryViewAggregatedTasksCompletedEventHandler(object sender, queryViewAggregatedTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryViewAggregatedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryViewAggregatedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public taskCountType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((taskCountType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void countViewTasksCompletedEventHandler(object sender, countViewTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class countViewTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal countViewTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void doesViewTaskExistCompletedEventHandler(object sender, doesViewTaskExistCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doesViewTaskExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doesViewTaskExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void queryDecomposedTasksCompletedEventHandler(object sender, queryDecomposedTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryDecomposedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryDecomposedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void queryTaskErrorsCompletedEventHandler(object sender, queryTaskErrorsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class queryTaskErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal queryTaskErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public taskError[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((taskError[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTaskHistoryCompletedEventHandler(object sender, getTaskHistoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTaskHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTaskHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTaskDetailsByIdCompletedEventHandler(object sender, getTaskDetailsByIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTaskDetailsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTaskDetailsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTaskDetailsByNumberCompletedEventHandler(object sender, getTaskDetailsByNumberCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTaskDetailsByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTaskDetailsByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTaskVersionDetailsCompletedEventHandler(object sender, getTaskVersionDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTaskVersionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTaskVersionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getPermittedAssigneesCompletedEventHandler(object sender, getPermittedAssigneesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPermittedAssigneesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPermittedAssigneesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public getPermittedAssigneesResponseType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((getPermittedAssigneesResponseType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getPermittedAssigneesForTasksCompletedEventHandler(object sender, getPermittedAssigneesForTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPermittedAssigneesForTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPermittedAssigneesForTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public getPermittedAssigneesForTasksResponseType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((getPermittedAssigneesForTasksResponseType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTaskSequenceCompletedEventHandler(object sender, getTaskSequenceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTaskSequenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTaskSequenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public taskSequenceType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((taskSequenceType)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getSummaryFieldsInfoForTaskCompletedEventHandler(object sender, getSummaryFieldsInfoForTaskCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getSummaryFieldsInfoForTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSummaryFieldsInfoForTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public summaryFieldsInfoResponseType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((summaryFieldsInfoResponseType)(this.results[0]));
        }
    }
}

}