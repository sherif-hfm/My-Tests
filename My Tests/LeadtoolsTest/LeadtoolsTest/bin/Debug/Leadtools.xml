<?xml version="1.0"?>
<doc processed="true">
  <assembly>
    <name>Leadtools</name>
  </assembly>
  <members>
    <member name="T:Leadtools.RasterColorTypeConverter">
      <summary>
            Converts <see cref="T:Leadtools.RasterColor" /> objects from one data type to another. Access this class through the <see cref="T:System.ComponentModel.TypeConverter" /></summary>
      <remarks>
        <para>To convert a <see cref="T:Leadtools.RasterColor" /> to a string value, use the <see cref="M:Leadtools.RasterColor.ToString">RasterColor.ToString</see> method.</para>
        <para>You can use the members of this class to convert a string to a <see cref="T:Leadtools.RasterColor" /> value. You can also use the
            helper static (Shared) <see cref="M:Leadtools.RasterColorTypeConverter.ConvertFromString(System.String)">RasterColorTypeConverter.ConvertFromString</see> method directly without
            creating a <see cref="T:System.ComponentModel.TypeConverter" /> instance.</para>
        <para>Currently, this class supports converting a <see cref="T:Leadtools.RasterColor" /> to and from a string type only. The string can be in an HTML compatible format.</para>
      </remarks>
      <example>
        <!--RasterColor.RasterColorTypeConverter-->
      </example>
    </member>
    <member name="M:Leadtools.RasterColorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information, refer to <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">TypeConverter.CanConvertFrom</see></para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this converter can perform the operation; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information, refer to <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertFrom</see></para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeConverter" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the color.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <remarks>
        <para>For more information, refer to <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">TypeConverter.ConvertFrom</see></para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorTypeConverter.ConvertFromString(System.String)">
      <summary>
            Converts the specified text to a <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="value">A <see cref="T:System.String" /> containing the text value. This must be an HTML compatible string representation of a color.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> this method creates. If the string is null (Nothing in Visual Basic), then an empty <see cref="T:Leadtools.RasterColor" /> will be returned with all color components set to zero.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterColorTypeConverter" />.</example>
    </member>
    <member name="M:Leadtools.RasterColorTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is nullNothingnullptra null reference (Nothing in Visual Basic). Also, properties on the context object may return nullNothingnullptra null reference (Nothing in Visual Basic)</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the color.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <returns>An Object representing the converted value.</returns>
      <remarks>
        <para>For more information, refer to <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">TypeConverter.ConvertFrom</see></para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterKnownColor">
      <summary>
            Specifies the known system colors.
            </summary>
      <remarks>
        <para>You can use the <see cref="T:Leadtools.RasterKnownColor" /> enumeration to construct <see cref="T:Leadtools.RasterColor" /> objects from colors known by name.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterColor.FromKnownColor(Leadtools.RasterKnownColor)">RasterColor.FromKnownColor</see>.</example>
    </member>
    <member name="F:Leadtools.RasterKnownColor.AliceBlue">
      <summary>
            (0xfff0f8ff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.AntiqueWhite">
      <summary>
            (0xfffaebd7)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Aqua">
      <summary>
            (0xff00ffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Aquamarine">
      <summary>
            (0xff7fffd4)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Azure">
      <summary>
            (0xfff0ffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Beige">
      <summary>
            (0xfff5f5dc)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Bisque">
      <summary>
            (0xffffe4c4)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Black">
      <summary>
            (0xff000000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.BlanchedAlmond">
      <summary>
            (0xffffebcd)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Blue">
      <summary>
            (0xff0000ff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.BlueViolet">
      <summary>
            (0xff8a2be2)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Brown">
      <summary>
            (0xffa52a2a)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.BurlyWood">
      <summary>
            (0xffdeb887)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.CadetBlue">
      <summary>
            (0xff5f9ea0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Chartreuse">
      <summary>
            (0xff7fff00)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Chocolate">
      <summary>
            (0xffd2691e)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Coral">
      <summary>
            (0xffff7f50)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.CornflowerBlue">
      <summary>
            (0xff6495ed)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Cornsilk">
      <summary>
            (0xfffff8dc)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Crimson">
      <summary>
            (0xffdc143c)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Cyan">
      <summary>
            (0xff00ffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkBlue">
      <summary>
            (0xff00008b)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkCyan">
      <summary>
            (0xff008b8b)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkGoldenrod">
      <summary>
            (0xffb8860b)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkGray">
      <summary>
            (0xffa9a9a9)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkGreen">
      <summary>
            (0xff006400)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkKhaki">
      <summary>
            (0xffbdb76b)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkMagenta">
      <summary>
            (0xff8b008b)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkOliveGreen">
      <summary>
            (0xff556b2f)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkOrange">
      <summary>
            (0xffff8c00)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkOrchid">
      <summary>
            (0xff9932cc)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkRed">
      <summary>
            (0xff8b0000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkSalmon">
      <summary>
            (0xffe9967a)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkSeaGreen">
      <summary>
            (0xff8fbc8f)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkSlateBlue">
      <summary>
            (0xff483d8b)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkSlateGray">
      <summary>
            (0xff2f4f4f)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkTurquoise">
      <summary>
            (0xff00ced1)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DarkViolet">
      <summary>
            (0xff9400d3)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DeepPink">
      <summary>
            (0xffff1493)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DeepSkyBlue">
      <summary>
            (0xff00bfff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DimGray">
      <summary>
            (0xff696969)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.DodgerBlue">
      <summary>
            (0xff1e90ff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Firebrick">
      <summary>
            (0xffb22222)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.FloralWhite">
      <summary>
            (0xfffffaf0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ForestGreen">
      <summary>
            (0xff228b22)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Fuchsia">
      <summary>
            (0xffff00ff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Gainsboro">
      <summary>
            (0xffdcdcdc)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.GhostWhite">
      <summary>
            (0xfff8f8ff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Gold">
      <summary>
            (0xffffd700)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Goldenrod">
      <summary>
            (0xffdaa520)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Gray">
      <summary>
            (0xff808080)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Green">
      <summary>
            (0xff008000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.GreenYellow">
      <summary>
            (0xffadff2f)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Honeydew">
      <summary>
            (0xfff0fff0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.HotPink">
      <summary>
            (0xffff69b4)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.IndianRed">
      <summary>
            (0xffcd5c5c)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Indigo">
      <summary>
            (0xff4b0082)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Ivory">
      <summary>
            (0xfffffff0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Khaki">
      <summary>
            (0xfff0e68c)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Lavender">
      <summary>
            (0xffe6e6fa)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LavenderBlush">
      <summary>
            (0xfffff0f5)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LawnGreen">
      <summary>
            (0xff7cfc00)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LemonChiffon">
      <summary>
            (0xfffffacd)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightBlue">
      <summary>
            (0xffadd8e6)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightCoral">
      <summary>
            (0xfff08080)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightCyan">
      <summary>
            (0xffe0ffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightGoldenrodYellow">
      <summary>
            (0xfffafad2)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightGray">
      <summary>
            (0xffd3d3d3)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightGreen">
      <summary>
            (0xff90ee90)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightPink">
      <summary>
            (0xffffb6c1)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightSalmon">
      <summary>
            (0xffffa07a)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightSeaGreen">
      <summary>
            (0xff20b2aa)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightSkyBlue">
      <summary>
            (0xff87cefa)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightSlateGray">
      <summary>
            (0xff778899)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightSteelBlue">
      <summary>
            (0xffb0c4de)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LightYellow">
      <summary>
            (0xffffffe0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Lime">
      <summary>
            (0xff00ff00)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.LimeGreen">
      <summary>
            (0xff32cd32)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Linen">
      <summary>
            (0xfffaf0e6)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Magenta">
      <summary>
            (0xffff00ff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Maroon">
      <summary>
            (0xff800000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumAquamarine">
      <summary>
            (0xff66cdaa)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumBlue">
      <summary>
            (0xff0000cd)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumOrchid">
      <summary>
            (0xffba55d3)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumPurple">
      <summary>
            (0xff9370db)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumSeaGreen">
      <summary>
            (0xff3cb371)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumSlateBlue">
      <summary>
            (0xff7b68ee)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumSpringGreen">
      <summary>
            (0xff00fa9a)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumTurquoise">
      <summary>
            (0xff48d1cc)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MediumVioletRed">
      <summary>
            (0xffc71585)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MidnightBlue">
      <summary>
            (0xff191970)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MintCream">
      <summary>
            (0xfff5fffa)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MistyRose">
      <summary>
            (0xffffe4e1)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Moccasin">
      <summary>
            (0xffffe4b5)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.NavajoWhite">
      <summary>
            (0xffffdead)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Navy">
      <summary>
            (0xff000080)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.OldLace">
      <summary>
            (0xfffdf5e6)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Olive">
      <summary>
            (0xff808000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.OliveDrab">
      <summary>
            (0xff6b8e23)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Orange">
      <summary>
            (0xffffa500)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.OrangeRed">
      <summary>
            (0xffff4500)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Orchid">
      <summary>
            (0xffda70d6)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.PaleGoldenrod">
      <summary>
            (0xffeee8aa)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.PaleGreen">
      <summary>
            (0xff98fb98)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.PaleTurquoise">
      <summary>
            (0xffafeeee)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.PaleVioletRed">
      <summary>
            (0xffdb7093)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.PapayaWhip">
      <summary>
            (0xffffefd5)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.PeachPuff">
      <summary>
            (0xffffdab9)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Peru">
      <summary>
            (0xffcd853f)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Pink">
      <summary>
            (0xffffc0cb)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Plum">
      <summary>
            (0xffdda0dd)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.PowderBlue">
      <summary>
            (0xffb0e0e6)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Purple">
      <summary>
            (0xff800080)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Red">
      <summary>
            (0xffff0000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.RosyBrown">
      <summary>
            (0xffbc8f8f)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.RoyalBlue">
      <summary>
            (0xff4169e1)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SaddleBrown">
      <summary>
            (0xff8b4513)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Salmon">
      <summary>
            (0xfffa8072)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SandyBrown">
      <summary>
            (0xfff4a460)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SeaGreen">
      <summary>
            (0xff2e8b57)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SeaShell">
      <summary>
            (0xfffff5ee)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Sienna">
      <summary>
            (0xffa0522d)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Silver">
      <summary>
            (0xffc0c0c0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SkyBlue">
      <summary>
            (0xff87ceeb)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SlateBlue">
      <summary>
            (0xff6a5acd)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SlateGray">
      <summary>
            (0xff708090)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Snow">
      <summary>
            (0xfffffafa)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SpringGreen">
      <summary>
            (0xff00ff7f)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.SteelBlue">
      <summary>
            (0xff4682b4)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Tan">
      <summary>
            (0xffd2b48c)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Teal">
      <summary>
            (0xff008080)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Thistle">
      <summary>
            (0xffd8bfd8)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Tomato">
      <summary>
            (0xffff6347)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Transparent">
      <summary>
            A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Turquoise">
      <summary>
            (0xff40e0d0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.UnknownColor">
      <summary>
            A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Violet">
      <summary>
            (0xffee82ee)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Wheat">
      <summary>
            (0xfff5deb3)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.White">
      <summary>
            (0xffffffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.WhiteSmoke">
      <summary>
            (0xfff5f5f5)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Yellow">
      <summary>
            (0xffffff00)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.YellowGreen">
      <summary>
            (0xff9acd32)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ActiveBorder">
      <summary>
            (0xffb4b4b4)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ActiveCaption">
      <summary>
            (0xff99b4d1)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.AppWorkspace">
      <summary>
            (0xffababab)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Background">
      <summary>
            (0xff000000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ButtonFace">
      <summary>
            (0xfff0f0f0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ButtonHighlight">
      <summary>
            (0xffffffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ButtonShadow">
      <summary>
            (0xffa0a0a0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ButtonText">
      <summary>
            (0xff000000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.CaptionText">
      <summary>
            (0xff000000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.GrayText">
      <summary>
            (0xff6d6d6d)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Highlight">
      <summary>
            (0xff3399ff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.HighlightText">
      <summary>
            (0xffffffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.InactiveBorder">
      <summary>
            (0xfff4f7fc)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.InactiveCaption">
      <summary>
            (0xffbfcddb)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.InactiveCaptionText">
      <summary>
            (0xff434e54)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.InfoBackground">
      <summary>
            (0xffffffe1)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.InfoText">
      <summary>
            (0xff000000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Menu">
      <summary>
            (0xfff0f0f0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.MenuText">
      <summary>
            (0xff000000)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Scrollbar">
      <summary>
            (0xffc8c8c8)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ThreeDDarkShadow">
      <summary>
            (0xff696969)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ThreeDFace">
      <summary>
            (0xfff0f0f0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ThreeDHighlight">
      <summary>
            (0xffe3e3e3)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.ThreeDLightShadow">
      <summary>
            (0xffffffff)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.Window">
      <summary>
            (0xfff0f0f0)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.WindowFrame">
      <summary>
            (0xff646464)A system-defined color
            </summary>
    </member>
    <member name="F:Leadtools.RasterKnownColor.WindowText">
      <summary>
            (0xff000000)A system-defined color
            </summary>
    </member>
    <member name="T:Leadtools.NotifyLeadCollectionChangedAction">
      <summary>
            Describes the action that caused a <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.NotifyLeadCollectionChangedAction.Add">
      <summary>
            (0)One or more items were added to the collection.
            </summary>
    </member>
    <member name="F:Leadtools.NotifyLeadCollectionChangedAction.Remove">
      <summary>
            (1)One or more items were removed from the collection.
            </summary>
    </member>
    <member name="F:Leadtools.NotifyLeadCollectionChangedAction.Replace">
      <summary>
            (2)One or more items were replaced in the collection. 
            </summary>
    </member>
    <member name="F:Leadtools.NotifyLeadCollectionChangedAction.Move">
      <summary>
            (3)One or more items were moved within the collection.
            </summary>
    </member>
    <member name="F:Leadtools.NotifyLeadCollectionChangedAction.Reset">
      <summary>
            (4)The content of the collection changed dramatically. 
            </summary>
    </member>
    <member name="T:Leadtools.NotifyLeadCollectionChangedEventArgs">
      <summary>
            Provides data for the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.NotifyLeadCollectionChangedEventArgs.#ctor">
      <summary>
            Initializes a new <see cref="T:Leadtools.NotifyLeadCollectionChangedEventArgs" /> object.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.NotifyLeadCollectionChangedEventArgs.Create(Leadtools.NotifyLeadCollectionChangedAction)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.NotifyLeadCollectionChangedEventArgs" /> with the specified action.
            </summary>
      <param name="action">Action to set.</param>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.NotifyLeadCollectionChangedEventArgs.CreateMove(System.Int32,System.Int32)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.NotifyLeadCollectionChangedEventArgs" /> for a move operation.
            </summary>
      <param name="oldStartingIndex">0-based old starting index of the moved item(s)</param>
      <param name="newStartingIndex">0-based new starting index of the moved item(s)</param>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.NotifyLeadCollectionChangedEventArgs.CreateRemove(System.Int32)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.NotifyLeadCollectionChangedEventArgs" /> for a remove operation.
            </summary>
      <param name="index">0-based index of the item being removed.</param>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.NotifyLeadCollectionChangedEventArgs.CreateReplace(System.Int32)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.NotifyLeadCollectionChangedEventArgs" /> for a replace operation.
            </summary>
      <param name="index">0-based index of the item being replaced.</param>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.NotifyLeadCollectionChangedEventArgs.Action">
      <summary>
            Gets the action that caused the event.
            </summary>
      <value>The action that caused the event.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.NotifyLeadCollectionChangedEventArgs.NewItems">
      <summary>
            Gets the list of new items involved in the change.
            </summary>
      <value>A list of new items involved in the change.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.NotifyLeadCollectionChangedEventArgs.OldItems">
      <summary>
            Gets the list of old items involved in the change.
            </summary>
      <value>A list of old items involved in the change.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.NotifyLeadCollectionChangedEventArgs.NewStartingIndex">
      <summary>
            Gets the 0-based index at which the change occurred.
            </summary>
      <value>The 0-based index at which the change occurred.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.NotifyLeadCollectionChangedEventArgs.OldStartingIndex">
      <summary>
            Gets the 0-based index at which a <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Move</see>, <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Remove</see>, or <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Replace</see> action occurred.
            </summary>
      <value>The 0-based index at which a <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Move</see>, <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Remove</see>, or <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Replace</see> action occurred.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadCollection`1">
      <summary>
            Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.
            </summary>
      <typeparam name="T">A generic <see cref="T:System.Type" /> parameter.</typeparam>
      <remarks>
        <para>The <see cref="T:Leadtools.LeadCollection`1" /> class provides a generic observable collection class that overrides the .NET <see cref="T:System.Collections.ObjectModel.Collection`1" />,
            class.</para>
        <para>The class contains the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event. This events will fire whenever objects are added, moved, replaced or removed to/from the collection.</para>
        <para>This class follows the design of the .NET ObservableCollection&lt;T&gt; class.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.ToArray">
      <summary>
            Gets an array of the items in this collection.
            </summary>
      <returns>An array of the items in this collection.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadCollection`1" /> class that contains items copied from the specified collection and that has the same initial capacity as the number
            of items copied.
            </summary>
      <param name="collection">The collection whose items are copied into this collection.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadCollection`1" /> class that contains items copied from the specified list and that has the same initial capacity as the number
            of items copied.
            </summary>
      <param name="list">The list whose items are copied into this collection.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.#ctor">
      <summary>
            Initializes a new empty instance of the <see cref="T:Leadtools.LeadCollection`1" /> class.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.InsertItem(System.Int32,`0)">
      <summary>
            Inserts an item into the <see cref="T:Leadtools.LeadCollection`1" /> at the specified index.
            </summary>
      <param name="index">The 0-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert. The value can be <strong>null</strong> for reference types.</param>
      <remarks>
        <para>The <see cref="M:Leadtools.LeadCollection`1.InsertItem(System.Int32,`0)" /> is meant to be overridden in a derived class. For a public method to insert an item in the <see cref="T:Leadtools.LeadCollection`1" />, see <see cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />.</para>
        <para>
          <see cref="T:Leadtools.LeadCollection`1" /> accepts <strong>null</strong> as a valid value for reference types and allows duplicate items.</para>
        <para>If <paramref name="index" /> is equal to <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />, item is added to the end of <see cref="T:Leadtools.LeadCollection`1" />.</para>
        <para>This method raises the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event with <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Add</see> action.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.Move(System.Int32,System.Int32)">
      <summary>
            Moves the item at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The 0-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The 0-based index specifying the new location of the item.</param>
      <remarks>
        <para>This method raises the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event with <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Move</see> action.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.MoveItem(System.Int32,System.Int32)">
      <summary>
            Moves the item at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">The 0-based index specifying the location of the item to be moved.</param>
      <param name="newIndex">The 0-based index specifying the new location of the item.</param>
      <remarks>
        <para>This method raises the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event with <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Move</see> action.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.OnCollectionChanged(Leadtools.NotifyLeadCollectionChangedEventArgs)">
      <summary>
            Raises the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event with the provided arguments.
            </summary>
      <param name="e">Event data.</param>
      <remarks>
        <para>Properties and methods that modify this collection raise the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event through this virtual method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.RemoveItem(System.Int32)">
      <summary>
            Removes the item at the specified index of the collection.
            </summary>
      <param name="index">The 0-based index of the item to remove.</param>
      <remarks>
        <para>This method raises the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event with <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Remove</see> action.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.SetItem(System.Int32,`0)">
      <summary>
            Replaces the item at the specified index.
            </summary>
      <param name="index">The 0-based index of the item to replace.</param>
      <param name="item">The new value of the item.</param>
      <remarks>
        <para>This method raises the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event with <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Replace</see> action.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadCollection`1.ClearItems">
      <summary>
            Removes all items from the collection.
            </summary>
      <remarks>
        <para>This method raises the <see cref="E:Leadtools.LeadCollection`1.CollectionChanged" /> event with <see cref="T:Leadtools.NotifyLeadCollectionChangedAction">Reset</see> action.</para>
      </remarks>
      <noexample />
    </member>
    <member name="E:Leadtools.LeadCollection`1.CollectionChanged">
      <summary>
            Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.GeneralConverter">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(Leadtools.LeadPoint,System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(Leadtools.LeadPoint[],System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(System.IntPtr,System.Int32)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(Leadtools.LeadPoint[])">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(System.IntPtr,System.Int32,Leadtools.Junk.IVector{Leadtools.LeadPoint})">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(Leadtools.Junk.IVector{Leadtools.LeadPoint},System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertPoint(Leadtools.Junk.IVector{Leadtools.LeadPoint})">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(Leadtools.LeadRect,System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(Leadtools.LeadRect[],System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(System.IntPtr,System.Int32)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(Leadtools.LeadRect[])">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(System.IntPtr,System.Int32,Leadtools.Junk.IVector{Leadtools.LeadRect})">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(Leadtools.Junk.IVector{Leadtools.LeadRect},System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.GeneralConverter.ConvertRect(Leadtools.Junk.IVector{Leadtools.LeadRect})">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.ISvgDocument">
      <summary>
            Defines an SVG document
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Svg.SvgDocument" /> class implements <see cref="T:Leadtools.ISvgDocument" />. You should always cast <see cref="T:Leadtools.ISvgDocument" /> to
            <see cref="T:Leadtools.Svg.SvgDocument" /> to access the actual properties/methods of the SVG document class.</para>
        <para>The interface is used by the LEADTOOLS framework to minimize dependencies between the various assemblies. For example, the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadSvg(System.IO.Stream,System.Int32,Leadtools.Codecs.CodecsLoadSvgOptions)">Leadtools.Codecs.RasterCodecs.LoadSvg</see> method (define in <strong>Leadtools.Codecs.dll</strong>) returns
            <see cref="T:Leadtools.ISvgDocument">Leadtools.ISvgDocument</see> (defined in <strong>Leadtools.dll</strong>) instead of <see cref="T:Leadtools.Svg.SvgDocument">Leadtools.Svg.SvgDocument</see>
            (defined in <strong>Leadtools.Svg.dll</strong>). This way, <strong>Leadtools.Codecs.dll</strong> does not have a dependency on
            <strong>Leadtools.Svg.dll</strong> if SVG functionality is not required by your application.</para>
        <para>For more information, refer to <see cref="T:SVG.Topics.WorkingWithSVG">Working With SVG</see>.</para>
      </remarks>
      <seealso cref="T:Leadtools.Svg.SvgDocument" />
      <seealso cref="T:SVG.Topics.WorkingWithSVG">Working With SVG</seealso>
      <seealso cref="T:SVG.Topics.SVGSizeBoundsAndFlat">SVG Size, Bounds and Flat</seealso>
      <seealso cref="T:SVG.Topics.SVGRendering">SVG Rendering</seealso>
      <example>
        <para>This example will load a PDF file as SVG and save it to disk</para>
        <!--ISvgDocument-->
      </example>
    </member>
    <member name="P:Leadtools.ISvgDocument.Handle">
      <summary>
            Gets the internal SVG handle.
            </summary>
      <value>The internal SVG handle</value>
      <remarks>
        <para>This property is used internally by LEADTOOLS.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.IRenderingEngine">
      <summary>
            Defines a LEADTOOLS rendering engine.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.IRenderingEngine" /> interface is used as a parameter to the <see cref="M:Leadtools.Svg.SvgDocument.Render(Leadtools.IRenderingEngine,Leadtools.Svg.SvgRenderOptions)">SvgDocument.Render</see> method to
            render an SVG document into a target device.</para>
        <para>You cannot create a class that implements <see cref="T:Leadtools.IRenderingEngine" /> directly. Instead, you use one the following method to obtain an instance:</para>
        <list type="table">
          <listheader>
            <term>Method</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="M:Leadtools.Drawing.RenderingEngineFactory.Create(System.Drawing.Graphics)">Leadtools.Drawing.RenderingEngineFactory.Create</see>
            </term>
            <description>Returns a GDI+ (System.Drawing) compatible engine to render SVG documents to <see cref="T:System.Drawing.Graphics">System.Drawing.Graphics</see>
              objects or Windows HDC handles.</description>
          </item>
        </list>
        <para>For more information, refer to <see cref="T:SVG.Topics.WorkingWithSVG">Working With SVG</see>.</para>
      </remarks>
      <seealso cref="T:SVG.Topics.SVGRendering">SVG Rendering</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Svg.SvgDocument.Render(Leadtools.IRenderingEngine,Leadtools.Svg.SvgRenderOptions)">SvgDocument.Render</see>.</example>
    </member>
    <member name="P:Leadtools.IRenderingEngine.Handle">
      <summary>
            Gets the internal rendering engine handle.
            </summary>
      <value>The internal rendering engine handle</value>
      <remarks>
        <para>This property is used internally by LEADTOOLS.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterBufferResize">
      <summary>
            Provides support for resizing image data buffers.
            </summary>
      <noremarks />
      <example>
            This example will load an image, resizes each line then saves the resized image back to disk.
            <!--RasterBufferResize--></example>
    </member>
    <member name="M:Leadtools.RasterBufferResize.#ctor">
      <summary>
            Initializes a new <see cref="T:Leadtools.RasterBufferResize" /> object.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterBufferResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterBufferResize.Start(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets up information for the <see cref="M:Leadtools.RasterBufferResize.ResizeBuffer(System.Byte[],System.Int32,System.Int32,System.Int32)" /> method.
            </summary>
      <param name="oldWidth">Specifies the original width of the image.</param>
      <param name="oldHeight">Specifies the original height of the image.</param>
      <param name="newWidth">Specifies the new width for the image.</param>
      <param name="newHeight">Specifies the new height for the image.</param>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterBufferResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterBufferResize.ResizeBuffer(System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Resizes a buffer to the new size specified with the <see cref="M:Leadtools.RasterBufferResize.Start(System.Int32,System.Int32,System.Int32,System.Int32)" /> method.
            </summary>
      <param name="buffer">The buffer containing the original scanline to be resized.</param>
      <param name="bufferOffset">Zero-based index into the <paramref name="buffer" />.</param>
      <param name="row">Current row of the original bitmap.</param>
      <param name="bitsPerPixel">Bits per pixel, which is the same for the original and the resized bitmap.</param>
      <remarks>
        <para>
          <paramref name="buffer" /> contains the buffer containing a line from the original image to be resized. Your code must allocate the
            buffer and copy the data into it before calling this method.</para>
        <para>The same buffer holds the data before and after it is resized. Therefore, the buffer must be big enough to hold whichever is
            larger. (The original line is larger when reducing an image; the resulting line is larger when enlarging the image.)</para>
        <para>Before calling this function, you must call the <see cref="M:Leadtools.RasterBufferResize.Start(System.Int32,System.Int32,System.Int32,System.Int32)" /> method.</para>
        <para>When all lines have been processed, you must call the <see cref="M:Leadtools.RasterBufferResize.Stop" /> method.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterBufferResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterBufferResize.ResizeBuffer(System.IntPtr,System.Int32,System.Int32)">
      <summary>
            Resizes an unmanaged buffer to the new size specified with the <see cref="M:Leadtools.RasterBufferResize.Start(System.Int32,System.Int32,System.Int32,System.Int32)" /> method.
            </summary>
      <param name="buffer">The unmanaged buffer containing the original scanline to be resized.</param>
      <param name="row">Current row of the original bitmap.</param>
      <param name="bitsPerPixel">Bits per pixel, which is the same for the original and the resized bitmap.</param>
      <remarks>
        <para>
          <paramref name="buffer" /> contains the buffer containing a line from the original image to be resized. Your code must allocate the
            buffer and copy the data into it before calling this method.</para>
        <para>The same buffer holds the data before and after it is resized. Therefore, the buffer must be big enough to hold whichever is
            larger. (The original line is larger when reducing an image; the resulting line is larger when enlarging the image.)</para>
        <para>Before calling this function, you must call the <see cref="M:Leadtools.RasterBufferResize.Start(System.Int32,System.Int32,System.Int32,System.Int32)" /> method.</para>
        <para>When all lines have been processed, you must call the <see cref="M:Leadtools.RasterBufferResize.Stop" /> method.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterBufferResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterBufferResize.Stop">
      <summary>
            Cleans up all data variables and buffers allocated by the <see cref="M:Leadtools.RasterBufferResize.Start(System.Int32,System.Int32,System.Int32,System.Int32)" /> method. 
            </summary>
      <remarks>
        <para>You must call the <see cref="M:Leadtools.RasterBufferResize.Stop" /> method when all resizing operations is completed.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterBufferResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterBufferResize.LineWidth">
      <summary>
            Holds the resulting line width of the resized image data.
            </summary>
      <value>The resulting line width of the resized image data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterBufferResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterBufferResize.CopyRepetitions">
      <summary>
            Holds the required number of copy repetitions.
            </summary>
      <value>
            The number of times needed to copy the new resized line buffer to the new image.
            </value>
      <remarks>
        <para>When an image is being enlarged, some lines must be copied more than once. When an image is being 
            reduced, some lines must be eliminated (not copied at all).</para>
        <para>For example:
            <list type="bullet"><item><description>A value of 0 means that the line should not be copied.</description></item><item><description>A value of 1 means that the line should be copied once.</description></item><item><description>A value of 2 means that the line should be copied twice.</description></item><item><description>And so on ....</description></item></list></para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterBufferResize" />.</example>
    </member>
    <member name="T:Leadtools.RasterCollectionEventArgs`1">
      <summary>
            Provides information for <see cref="E:Leadtools.RasterCollection`1.ItemAdded">RasterCollection&lt;T&gt;.ItemAdded</see> and
            <see cref="E:Leadtools.RasterCollection`1.ItemRemoved">RasterCollection&lt;T&gt;.ItemRemoved</see> methods.
            </summary>
      <typeparam name="T">A generic <see cref="T:System.Type" /> parameter.</typeparam>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterCollectionEventArgs`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterCollectionEventArgs`1" /> class with default parameters.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterCollectionEventArgs`1.#ctor(`0)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterCollectionEventArgs`1" /> class with the specified parameters.
            </summary>
      <param name="item">The object that has been added or removed.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.RasterCollectionEventArgs`1.Item">
      <summary>
            The object that has been added or removed.
            </summary>
      <value>
            The object that has been added or removed.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.RasterCollection`1">
      <summary>
            Represents a generic collection of objects.
            </summary>
      <typeparam name="T">A generic <see cref="T:System.Type" /> parameter.</typeparam>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterCollection`1" /> class provides a generic collection class that implements the .NET <see cref="T:System.Collections.Generic.IList`1" />,
            <see cref="T:System.Collections.Generic.ICollection`1" /> and <see cref="T:System.Collections.Generic.IEnumerable`1" /> interfaces.</para>
        <para>The class contains the <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> and <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" />
            events.  These events will fire whenever objects are added or removed to/from the collection.</para>
      </remarks>
      <example>
            Sample to test the RasterCollection class.
            <!--RasterCollection--></example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.OnItemAdded(Leadtools.RasterCollectionEventArgs{`0})">
      <summary>
            Raises the <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> event.
            </summary>
      <param name="e">An <see cref="T:Leadtools.RasterCollectionEventArgs`1" /> that contains the event data.</param>
      <remarks>
        <para>Raising an event invokes the event handler through a delegate.</para>
        <para>The <a href="Leadtools~Leadtools.RasterCollection`1~OnItemAdded.html">OnItemAdded</a> method also allows derived classes to handle the event without attaching a delegate.
            This is the preferred technique for handling the event in a derived class.</para>
        <para>
          <strong>Notes to Inheritors:</strong> When overriding <a href="Leadtools~Leadtools.RasterCollection`1~OnItemAdded.html">OnItemAdded</a> in a derived class, be sure to call the base 
            class <a href="Leadtools~Leadtools.RasterCollection`1~OnItemAdded.html">OnItemAdded</a> method so that registered delegates receive the event.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterCollection`1.OnItemRemoved(Leadtools.RasterCollectionEventArgs{`0})">
      <summary>
            Raises the <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" /> event.
            </summary>
      <param name="e">An <see cref="T:Leadtools.RasterCollectionEventArgs`1" /> that contains the event data.</param>
      <remarks>
        <para>Raising an event invokes the event handler through a delegate.</para>
        <para>The <a href="Leadtools~Leadtools.RasterCollection`1~OnItemAdded.html">OnItemAdded</a> method also allows derived classes to handle the event without attaching a delegate.
            This is the preferred technique for handling the event in a derived class.</para>
        <para>
          <strong>Notes to Inheritors:</strong> When overriding <a href="Leadtools~Leadtools.RasterCollection`1~OnItemAdded.html">OnItemAdded</a> in a derived class, be sure to call the base 
            class <a href="Leadtools~Leadtools.RasterCollection`1~OnItemAdded.html">OnItemAdded</a> method so that registered delegates receive the event.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterCollection`1.#ctor">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.RasterCollection`1" /> with default settings.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.DisableEvents">
      <summary>
            Called to disable raising the <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> and <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" /> events.
            </summary>
      <remarks>
        <para>Calling <see cref="M:Leadtools.RasterCollection`1.DisableEvents" /> will increment an internal counter.  When the internal counter is 0,
            <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> or <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" /> event will be raised when items are added or removed
            to/from this <see cref="T:Leadtools.RasterCollection`1" />.</para>
        <para>When the internal counter is not 0, <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> and <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" /> events will not be
            raised.  Therefore, for each call to <see cref="M:Leadtools.RasterCollection`1.DisableEvents" />, there should be a corresponding call to
            <see cref="M:Leadtools.RasterCollection`1.EnableEvents" /> in order to restore the raising of events.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.EnableEvents">
      <summary>
            Called to enable raising the <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> and <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" /> events.
            </summary>
      <remarks>
        <para>Calling <see cref="M:Leadtools.RasterCollection`1.DisableEvents" /> will increment an internal counter.  When the internal counter is 0,
            <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> or <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" /> event will be raised when items are added or removed
            to/from this <see cref="T:Leadtools.RasterCollection`1" />.</para>
        <para>When the internal counter is not 0, <see cref="E:Leadtools.RasterCollection`1.ItemAdded" /> and <see cref="E:Leadtools.RasterCollection`1.ItemRemoved" /> events will not be
            raised.  Therefore, for each call to <see cref="M:Leadtools.RasterCollection`1.DisableEvents" />, there should be a corresponding call to
            <see cref="M:Leadtools.RasterCollection`1.EnableEvents" /> in order to restore the raising of events.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.IndexOf(`0)">
      <summary>
            Returns the index of the specified item if it is found in the collection.
            </summary>
      <param name="item">Object to test.</param>
      <returns>The index of the specified item if it is found in the collection.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.Insert(System.Int32,`0)">
      <summary>
            Inserts the specified item at the specified index.
            </summary>
      <param name="index">Index at which to insert the item.</param>
      <param name="item">Item to insert.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.RemoveAt(System.Int32)">
      <summary>
            Removes the item from the specified index.
            </summary>
      <param name="index">Index of the item to remove.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.Add(`0)">
      <summary>
            Adds the specified item to the end of the collection.
            </summary>
      <param name="item">Object to add.</param>
      <returns>The index of the newly added item.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.Contains(`0)">
      <summary>
            Determines whether or not the specified item is contained in the collection.
            </summary>
      <param name="item">Object to test.</param>
      <returns>true if the item is found in the collection; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copies all the elements of the collection to the specified one-dimensional array starting at the specified destination array index.
            </summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from the current collection. </param>
      <param name="arrayIndex">The index at which copying begins.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.Remove(`0)">
      <summary>
            Removes the specified item.
            </summary>
      <param name="item">Item to remove.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through the <see cref="T:Leadtools.RasterCollection`1" />.
            </summary>
      <returns>An enumerator that can iterate through the <see cref="T:Leadtools.RasterCollection`1" />.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.GetEnumerator">
      <summary>
            Returns a generic enumerator that can iterate through the <see cref="T:Leadtools.RasterCollection`1" />.
            </summary>
      <returns>A generic enumerator that can iterate through the <see cref="T:Leadtools.RasterCollection`1" />.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.AddRange(System.Collections.Generic.ICollection{`0})">
      <summary>
            Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the collection.
            </summary>
      <param name="collection">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the collection.</param>
      <remarks>
            The collection itself cannot be a null reference (<strong>Nothing</strong> in Visual Basic), but it can contain
            elements that are a null reference (<strong>Nothing</strong>).
            </remarks>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.SendToBack(`0,System.Boolean)">
      <summary>
            Sends the specified item back in the collection.
            </summary>
      <param name="item">The item to move.</param>
      <param name="last">true to make the item the last item in the collection; false to move the item back one index.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="M:Leadtools.RasterCollection`1.BringToFront(`0,System.Boolean)">
      <summary>
            Brings the specified item forward in the collection.
            </summary>
      <param name="item">The item to move.</param>
      <param name="first">true to make the item the first item in the collection; false to move the item forward one index.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="E:Leadtools.RasterCollection`1.ItemAdded">
      <summary>
            Occurs when an item is added to the collection.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="E:Leadtools.RasterCollection`1.ItemRemoved">
      <summary>
            Occurs when an item is removed from the collection.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="P:Leadtools.RasterCollection`1.Item(System.Int32)">
      <summary>
            Gets and sets the item at the specified index from within the collection.
            </summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <value>The item at the specified index.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="P:Leadtools.RasterCollection`1.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
      <value>The number of items in the collection.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="P:Leadtools.RasterCollection`1.IsReadOnly">
      <summary>
            Specifies whether or not the collection is Read Only.
            </summary>
      <value>true if the collection is read only; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCollection`1" />.</example>
    </member>
    <member name="T:Leadtools.RasterColorSpaceFormat8">
      <summary>
            Indicates the raster image data 8-bit colorspace format.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Rgb">
      <summary>
            Image data is in the RGB format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Yuv">
      <summary>
            Image data is in the YUV format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Cmyk">
      <summary>
            Image data is in the CMYK format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Hsv">
      <summary>
            Image data is in the HSV format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Hls">
      <summary>
            Image data is in the HLS format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Yiq">
      <summary>
            Image data is in the YIQ format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Cmy">
      <summary>
            Image data is in the CMY format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Lab">
      <summary>
            Image data is in the LAB format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Xyz">
      <summary>
            Image data is in the XYZ format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Ycck">
      <summary>
            Image data is in the YCCK format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Bgr">
      <summary>
            Image data is in the BGR format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Y41p">
      <summary>
            Image data is in the Y41P format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Uyvy">
      <summary>
            Image data is in the UYVY format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Yuy2">
      <summary>
            Image data is in the YUY2 format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Yvu9">
      <summary>
            Image data is in the YVU9 format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat8.Ycc">
      <summary>
            Image data is in the YCC format.
            </summary>
    </member>
    <member name="T:Leadtools.RasterColorSpaceFormat16">
      <summary>
            Indicates the raster image data 16-bit color space format.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Rgb">
      <summary>
            Image data is in the RGB format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Yuv">
      <summary>
            Image data is in the YUV format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Yiq">
      <summary>
            Image data is in the YIQ format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Hsv">
      <summary>
            Image data is in the HSV format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Hls">
      <summary>
            Image data is in the HLS format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Cmy">
      <summary>
            Image data is in the CMY format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Cmyk">
      <summary>
            Image data is in the CMYK format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterColorSpaceFormat16.Ihs">
      <summary>
            Image data is in the IHS format.
            </summary>
    </member>
    <member name="T:Leadtools.RasterColorSpace">
      <summary>
            Provides support for converting buffered image data from one color space to another.
            </summary>
      <noremarks />
      <example>
            This example will load an image, resizes each line then saves the resized image back to disk.
            <!--RasterColorSpace--></example>
    </member>
    <member name="M:Leadtools.RasterColorSpace.Convert8(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.RasterColorSpaceFormat8,Leadtools.RasterColorSpaceFormat8)">
      <summary>
            Converts 8-bit image data from one color space to another.
            </summary>
      <param name="inBuffer">An array of bytes containing the source image data</param>
      <param name="inBufferOffset">Zero-based index into <paramref name="inBuffer" /></param>
      <param name="outBuffer">An array of bytes to be filled with the converted image data</param>
      <param name="outBufferOffset">Zero-based index into <paramref name="outBuffer" /></param>
      <param name="width">Image width, in pixels</param>
      <param name="inFormat">The format of the input data</param>
      <param name="outFormat">The desired format of the converted data</param>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColorSpace" />.
            </example>
    </member>
    <member name="M:Leadtools.RasterColorSpace.Convert16(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.RasterColorSpaceFormat16,Leadtools.RasterColorSpaceFormat16)">
      <summary>
            Converts 16-bit image data from one color space to another.
            </summary>
      <param name="inBuffer">An array of bytes containing the source image data</param>
      <param name="inBufferOffset">Zero-based index into <paramref name="inBuffer" /></param>
      <param name="outBuffer">An array of bytes to be filled with the converted image data</param>
      <param name="outBufferOffset">Zero-based index into <paramref name="outBuffer" /></param>
      <param name="width">Image width, in pixels</param>
      <param name="inFormat">The format of the input data</param>
      <param name="outFormat">The desired format of the converted data</param>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColorSpace" />.
            </example>
    </member>
    <member name="M:Leadtools.RasterColorSpace.Convert8(System.IntPtr,System.IntPtr,System.Int32,Leadtools.RasterColorSpaceFormat8,Leadtools.RasterColorSpaceFormat8)">
      <summary>
            Converts 8-bit unmanaged image data from one color space to another.
            </summary>
      <param name="inBuffer">An unmanaged pointer containing the source image data</param>
      <param name="outBuffer">An array of bytes to be filled with the converted image data</param>
      <param name="width">Image width, in pixels</param>
      <param name="inFormat">The format of the input data</param>
      <param name="outFormat">The desired format of the converted data</param>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColorSpace" />.
            </example>
    </member>
    <member name="M:Leadtools.RasterColorSpace.Convert16(System.IntPtr,System.IntPtr,System.Int32,Leadtools.RasterColorSpaceFormat16,Leadtools.RasterColorSpaceFormat16)">
      <summary>
            Converts 16-bit unmanaged image data from one color space to another.
            </summary>
      <param name="inBuffer">An unmanaged pointer containing the source image data</param>
      <param name="outBuffer">An array of bytes to be filled with the converted image data</param>
      <param name="width">Image width, in pixels</param>
      <param name="inFormat">The format of the input data</param>
      <param name="outFormat">The desired format of the converted data</param>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColorSpace" />.
            </example>
    </member>
    <member name="T:Leadtools.RasterCurveType">
      <summary>
            Indicates the type of curve that is being defined.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterCurveType.Bezier">
      <summary>
            A series of Bezier curves that use the points as control points. In this case, the number of points must be 3n + 1,
            where n &gt;= 1. For example, number of points can be 4, 7, 10, 13, and so on. The first four points define the first Bezier curve,
            and each subsequent group of three points defines the next Bezier curve, using the last point of the previous Bezier curve as the
            starting point.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCurveType.Standard">
      <summary>
            A smooth curve that goes through all of the points. In this case, there must be at least three points.
            </summary>
    </member>
    <member name="T:Leadtools.RasterCurveClose">
      <summary>
            Indicates how to close the curve.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterCurveClose.NoClose">
      <summary>
            For n points, draw (n - 3) segments. For example, for points {P0, P1, P2, P3, P4}, draw segments P1P2 and P2P3
            </summary>
    </member>
    <member name="F:Leadtools.RasterCurveClose.Close">
      <summary>
            For n points draw (n) segments. For example, for points {P0, P1, P2, P3, P4}, draw segments P0P1, P1P2, P2P3, P3P4, P4P0
            </summary>
    </member>
    <member name="F:Leadtools.RasterCurveClose.PartialClose">
      <summary>
            For n points draw (n - 1) segments. For example, for points {P0, P1, P2, P3, P4}, draw segments P0P1, P1P2, P2P3, P3P4 (but not P4P0)
            </summary>
    </member>
    <member name="T:Leadtools.RasterCurve">
      <summary>
             Defines a curve.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterCurve" /> class defines the curve to be used with the <see cref="M:Leadtools.RasterImage.AddCurveToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterCurve,Leadtools.RasterRegionCombineMode)" /> method to 
            draw a curve using an array of <see cref="T:Leadtools.LeadPoint" /> objects. The <see cref="M:Leadtools.RasterCurve.ToBezierPoints" /> method is used to convert a
            curve to a Bezier. The <see cref="T:Leadtools.RasterCurve" /> class can define two types of curves, <see cref="T:Leadtools.RasterCurveType">RasterCurveType.Standard</see> and
            <see cref="T:Leadtools.RasterCurveType">RasterCurveType.Bezier</see>.</para>
      </remarks>
      <example>
            This sample creates a smooth region that goes through five points, and inverts the region.
            <!--RasterCurve--></example>
    </member>
    <member name="M:Leadtools.RasterCurve.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterCurve" /> class.
            </summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterCurve" />.
            </example>
    </member>
    <member name="M:Leadtools.RasterCurve.ToBezierPoints">
      <summary>
            Converts the curve points to an array of Bezier points.
            </summary>
      <returns>An array of <see cref="T:Leadtools.LeadPoint" /> values that contain the Bezier points.</returns>
      <keywords>Bezier curves|Bezier splines</keywords>
      <remarks>
        <para>This method is used to convert a standard curve to an array of Bezier control points. A 
            standard curve (<see cref="T:Leadtools.RasterCurveType">RasterCurveType.Standard</see>)
            is defined by the current <see cref="T:Leadtools.RasterCurve" />. The standard curve passes through all of 
            the points in the <see cref="P:Leadtools.RasterCurve.Points" />
            collection, and is continuous at each point. This method can be used to draw a curve by 
            converting it to an array of Bezier points,
            using <see cref="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">System.Drawing.Graphics.DrawBeziers</see> to draw the equivalent 
            Bezier(s).</para>
      </remarks>
      <example>
            This sample draws a smooth closed curve on a graphics that goes through five points.
            <!--RasterCurve.ToBezierPoints--></example>
    </member>
    <member name="P:Leadtools.RasterCurve.Type">
      <summary>
            Gets or sets a value that indicates the type of curve being defined.
            </summary>
      <value>A <see cref="T:Leadtools.RasterCurveType" /> enumeration value that indicates the type of curve being defined.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterCurve" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterCurve.Points">
      <summary>
            The curve points.
            </summary>
      <value>A collection of <see cref="T:Leadtools.LeadPoint" /> objects that define the curve points.</value>
      <remarks>
            The number of points in the <see cref="P:Leadtools.RasterCurve.Points" /> collection obey the following rules:
            <list type="bullet"><item><description>If <see cref="P:Leadtools.RasterCurve.Type" /> is <see cref="T:Leadtools.RasterCurveType">RasterCurveType.Bezier</see>, the number of points in <see cref="P:Leadtools.RasterCurve.Points" /> must be
            3n + 1, where n &gt;= 1. For example, the number of points can be 4, 7, 10, 13, and so on.</description></item><item><description>If <see cref="P:Leadtools.RasterCurve.Type" /> is <see cref="T:Leadtools.RasterCurveType">RasterCurveType.Standard</see>, the number of points in <see cref="P:Leadtools.RasterCurve.Points" /> must be
            greater than or equal to 3. For example, the number of points can be 3, 4, 5, 6, and so on.</description></item></list></remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterCurve" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterCurve.FillMode">
      <summary>
            Gets or sets a value that indicates how to handle complex crossing lines.
            </summary>
      <value>A <see cref="T:Leadtools.LeadFillMode" /> enumeration value that indicates how to handle complex crossing lines.</value>
      <remarks>
        <para>
          <list type="table">
            <listheader>
              <term>Value</term>
              <description>Meaning</description>
            </listheader>
            <item>
              <term>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Winding</see>
              </term>
              <description>All pixels that are inside the resulting exterior lines are in the region.</description>
            </item>
            <item>
              <term>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </term>
              <description>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</description>
            </item>
          </list>
        </para>
        <para>
          <img src="CurveFillMode.gif" title="Curve Fill Mode" />
        </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterCurve" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterCurve.Tension">
      <summary>
            Gets or sets a value that indicates how straight to make the curves that connect points.
            </summary>
      <value>An <see cref="T:System.Double" /> value that indicates how straight to make the curves that connect points.  Valid
            values are between 0.0 and 1.0.</value>
      <remarks>
        <para>This value is used only when <see cref="P:Leadtools.RasterCurve.Type" /> is <see cref="T:Leadtools.RasterCurveType">RasterCurveType.Standard</see>. Valid values are between 0.0 and 1.0, where 0.0
            indicates straight lines, and 1.0 indicates lines with the highest curvature. A typical value for dTension is 0.5.</para>
        <para>
          <img src="CurveTension.gif" title="Curve Tension" />
        </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterCurve" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterCurve.Close">
      <summary>
            Gets or sets a value that indicates how the curve is closed.
            </summary>
      <value>A <see cref="T:Leadtools.RasterCurveClose" /> enumeration value that indicates how the curve is closed.</value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.RasterCurveClose" /> for more information.</para>
        <para>In the following diagram, the resulting region is shown in gray:</para>
        <para>
          <img src="CurveClose.gif" title="Curve Close" />
        </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterCurve" />.
            </example>
    </member>
    <member name="T:Leadtools.RasterImageResize">
      <summary>
            Provides support for resizing images.
            </summary>
      <remarks>
            This class supports changing the color order, bits per pixel and/or palette, during the resize operation.
            </remarks>
      <example>
            This sample loads an image and uses the RasterImageResize class to resize it to half its size.
            <!--RasterImageResize--></example>
    </member>
    <member name="M:Leadtools.RasterImageResize.#ctor">
      <summary>
            Constructs a new instance of the <see cref="T:Leadtools.RasterImageResize" /> class.
            </summary>
      <noremarks />
      <example>Refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageResize.Start(Leadtools.RasterImage,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterDitheringMethod,Leadtools.RasterSizeFlags,Leadtools.RasterColor[])">
      <summary>
            Sets up information for the <see cref="M:Leadtools.RasterImageResize.ResizeBuffer(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" /> method.
            </summary>
      <param name="image">Image to be resized.</param>
      <param name="width">New width of the image data.</param>
      <param name="height">New height of the image data.</param>
      <param name="bitsPerPixel">Output bits per pixel. Use 0 for 8-bit grayscale. Possible values are: 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24,
            32, 48 and 64.</param>
      <param name="order">Output color order.</param>
      <param name="ditheringMethod">Flags that indicate the type of dithering, if <paramref name="bitsPerPixel" /> is not the same as the source
            image.</param>
      <param name="sizeFlags">Flags that indicate the type of resizing.</param>
      <param name="palette">The palette to dither to if <paramref name="bitsPerPixel" /> is less than or equal to 8. Pass a null reference
            (Nothing in Visual Basic) to dither to the fixed palette or if no palette is required.</param>
      <remarks>
        <para>
          <paramref name="ditheringMethod" /> is used when dithering is needed to produce the output bits per pixel. The 
            interpolation usually requires that the input data be converted to 24-bit or 48-bit and then back to the 
            desired bits per pixel. So some dithering might be required if the output bits/pixel are less than or equal to 8.</para>
        <para>The <see cref="M:Leadtools.RasterImageResize.Start(Leadtools.RasterImage,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterDitheringMethod,Leadtools.RasterSizeFlags,Leadtools.RasterColor[])" /> method starts the resizing process. This will be followed by calls to 
            <see cref="M:Leadtools.RasterImageResize.ResizeBuffer(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" /> to retrieve the resized data and by a call to 
            <see cref="M:Leadtools.RasterImageResize.Stop" />, to end the resize process and clean up any allocated resources.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageResize.ResizeBuffer(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Retrieves resized data, one line at a time.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image <see cref="P:Leadtools.RasterImage.Height" />.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column offset is 1 less than the image <see cref="P:Leadtools.RasterImage.Width" />.</param>
      <param name="buffer">The buffer to hold the image data that this method gets.</param>
      <param name="bufferOffset">The zero-based index into <paramref name="buffer" /> where retrieving should start.</param>
      <param name="bytes">
        <para>The number of bytes to retrieve. Consider the <see cref="P:Leadtools.RasterImage.BitsPerPixel" />, and avoid specifying
            a number that goes  past the end of the row.
            <list type="bullet"><item><description>For a 1-bit image, each byte represents 8 pixels.</description></item><item><description>For a 4-bit image, each byte represents 2 pixels.</description></item><item><description>For an 8-bit image, each byte represents 1 pixel.</description></item><item><description>For a 16-bit image, every 2 bytes represents one pixel.</description></item><item><description>For a 24-bit image, every three bytes represents one pixel.</description></item><item><description>For a 32-bit image, every four bytes represents one pixel.</description></item><item><description>For a 48-bit image, every six bytes represents one pixel.</description></item><item><description>For a 64-bit image, every eight bytes represents one pixel.</description></item></list></para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate 
            the number of bytes needed for a particular number of pixels. For example:</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if ((Image.BitsPerPixel * NumberOfPixels) % 8)
             ++NumberOfBytes; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <remarks>
        <para>By using this low-level method to get any part of a row, you can write a procedure that accesses a single 
            pixel or a rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length (<paramref name="bytes" />) in bytes. 
            Therefore, you must consider the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> of the image when 
            specifying these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>BitsPerPixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0,8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
            <tr>
              <td>48</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 6 (such as 6, 12, or 18), because there are 6 bytes per pixel.</td>
            </tr>
            <tr>
              <td>64</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 8 (such as 8, 16, or 24), because there are 8 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            Do not pass a value in <paramref name="bytes" /> that goes past the end of the row.
            The process is faster when rows are retrieved sequentially, either top-down or bottom-up.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageResize.ResizeBuffer(System.Int32,System.Int32,System.IntPtr,System.Int64)">
      <summary>
            Retrieves resized data in an unmanaged buffer, one line at a time.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image <see cref="P:Leadtools.RasterImage.Height" />.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column offset is 1 less than the image <see cref="P:Leadtools.RasterImage.Width" />.</param>
      <param name="buffer">The unmanaged buffer to hold the image data that this method gets.</param>
      <param name="bytes">
        <para>The number of bytes to retrieve. Consider the <see cref="P:Leadtools.RasterImage.BitsPerPixel" />, and avoid specifying
            a number that goes  past the end of the row.
            <list type="bullet"><item><description>For a 1-bit image, each byte represents 8 pixels.</description></item><item><description>For a 4-bit image, each byte represents 2 pixels.</description></item><item><description>For an 8-bit image, each byte represents 1 pixel.</description></item><item><description>For a 16-bit image, every 2 bytes represents one pixel.</description></item><item><description>For a 24-bit image, every three bytes represents one pixel.</description></item><item><description>For a 32-bit image, every four bytes represents one pixel.</description></item><item><description>For a 48-bit image, every six bytes represents one pixel.</description></item><item><description>For a 64-bit image, every eight bytes represents one pixel.</description></item></list></para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate 
            the number of bytes needed for a particular number of pixels. For example:</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if ((Image.BitsPerPixel * NumberOfPixels) % 8)
             ++NumberOfBytes; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <remarks>
        <para>By using this low-level method to get any part of a row, you can write a procedure that accesses a single 
            pixel or a rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length (<paramref name="bytes" />) in bytes. 
            Therefore, you must consider the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> of the image when 
            specifying these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>BitsPerPixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0,8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
            <tr>
              <td>48</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 6 (such as 6, 12, or 18), because there are 6 bytes per pixel.</td>
            </tr>
            <tr>
              <td>64</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 8 (such as 8, 16, or 24), because there are 8 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            Do not pass a value in <paramref name="bytes" /> that goes past the end of the row.
            The process is faster when rows are retrieved sequentially, either top-down or bottom-up.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageResize.Stop">
      <summary>
            Cleans up all data variables and buffers allocated by <see cref="M:Leadtools.RasterImageResize.Start(Leadtools.RasterImage,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterDitheringMethod,Leadtools.RasterSizeFlags,Leadtools.RasterColor[])" /> and resets all internal variables to their default settings.
            </summary>
      <noremarks />
      <example>Refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="E:Leadtools.RasterImageResize.Resize">
      <summary>
            Occurs during image resize.
            </summary>
      <event>
            The event handler receives an argument of type <see cref="T:Leadtools.RasterImageResizeEventArgs" /> containing data related to this event.
            </event>
      <noremarks />
      <example>Refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="T:Leadtools.RasterImageResizeEventArgs">
      <summary>
            Provides data for the <see cref="E:Leadtools.RasterImageResize.Resize" /> event.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageResizeEventArgs.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterImageResizeEventArgs" /> class.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageResizeEventArgs.Image">
      <summary>
            Gets a reference to the image being resized.
            </summary>
      <value>The <see cref="T:Leadtools.RasterImage" /> being resized.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageResizeEventArgs.Row">
      <summary>
            Gets the number of the resized row.
            </summary>
      <value>The number of the resized row. The first row is 0, and the last row is 1 less than the image <see cref="P:Leadtools.RasterImage.Height" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageResizeEventArgs.Column">
      <summary>
            Gets the column offset within the row being resized.
            </summary>
      <value>The column offset within the row being resized. The first column offset is 0, and the last column offset is 1 less than the image <see cref="P:Leadtools.RasterImage.Width" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageResizeEventArgs.Buffer">
      <summary>
            Gets the unmanaged buffer that holds the resized row.
            </summary>
      <value>The unmanaged buffer that holds the resized row.</value>
      <remarks>
        <para>Use <see cref="P:Leadtools.RasterImageResizeEventArgs.BufferArray" /> to get the buffer as a managed array.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageResizeEventArgs.BufferArray">
      <summary>
            Gets the managed buffer that holds the resized row.
            </summary>
      <value>The managed buffer that holds the resized row.</value>
      <remarks>
        <para>Use <see cref="P:Leadtools.RasterImageResizeEventArgs.Buffer" /> to get the buffer as an managed pointer.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageResizeEventArgs.Bytes">
      <summary>
            Gets the number of bytes in the resized row buffer.
            </summary>
      <value>The number of bytes in the resized row buffer.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageResizeEventArgs.Cancel">
      <summary>
            Gets or sets a value indicating whether to abort the resize operation.
            </summary>
      <value>true to abort the resize operation, false to continue.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageResize" />.</example>
    </member>
    <member name="T:Leadtools.RasterNativeBuffer">
      <summary>
            Holds a native (unmanaged) pointer and its length.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterNativeBuffer.GetData(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Copies data from this <see cref="T:Leadtools.RasterNativeBuffer" /> object to a byte array.
            </summary>
      <param name="offset">Offset into this <see cref="T:Leadtools.RasterNativeBuffer" /> data at which copying begins.</param>
      <param name="buffer">The buffer that receives the data.</param>
      <param name="bufferOffset">Offset into <paramref name="buffer" /> at which storing begins.</param>
      <param name="bytes">Number of bytes to copy.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterNativeBuffer.SetData(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Copies data from a byte array into this <see cref="T:Leadtools.RasterNativeBuffer" /> object.
            </summary>
      <param name="offset">Offset into this <see cref="T:Leadtools.RasterNativeBuffer" /> data at which storing begins.</param>
      <param name="buffer">The buffer that contains the data to copy.</param>
      <param name="bufferOffset">Offset into <paramref name="buffer" /> at which copying begins.</param>
      <param name="bytes">Number of bytes to store.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterNativeBuffer.#ctor(System.IntPtr,System.UInt32)">
      <summary>
            Gets a <see cref="T:Leadtools.RasterNativeBuffer" /> that uses the data from the specified buffer and the specified capacity.
            </summary>
      <param name="buffer">The buffer that contains the data to copy.</param>
      <param name="capacity">Number of bytes to store.</param>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterNativeBuffer.#ctor(System.UInt32)">
      <summary>
            Gets a <see cref="T:Leadtools.RasterNativeBuffer" /> that has the specified capacity.
            </summary>
      <param name="capacity">A <see cref="T:Leadtools.RasterNativeBuffer" /> that has the specified capacity.</param>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterNativeBuffer.Resize(System.UInt32)">
      <summary>
            Resizes the buffer to the specified capacity.
            </summary>
      <param name="capacity">The new capacity for the buffer</param>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterNativeBuffer.SetBuffer(System.IntPtr,System.UInt32)">
      <summary>
            Copies data from a buffer into this <see cref="T:Leadtools.RasterNativeBuffer" /> object.
            </summary>
      <param name="buffer">The buffer that contains the data to copy.</param>
      <param name="capacity">Number of bytes to store.</param>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterNativeBuffer.Dispose">
      <summary>
            Releases all resources used by this <see cref="T:Leadtools.RasterNativeBuffer" />.
            </summary>
      <remarks>For more information, refer to <see cref="T:System.IDisposable" />.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterNativeBuffer" />.</example>
      <winrt />
    </member>
    <member name="P:Leadtools.RasterNativeBuffer.Empty">
      <summary>
            Gets an empty <see cref="T:Leadtools.RasterNativeBuffer" /></summary>
      <value>A <see cref="T:Leadtools.RasterNativeBuffer" /> object that has all the members reset to their default values.</value>
      <remarks>
            The <see cref="T:Leadtools.RasterNativeBuffer" /> object returned from this property will have the <see cref="P:Leadtools.RasterNativeBuffer.Data" /> property set to IntPtr.Zero and
            the <see cref="P:Leadtools.RasterNativeBuffer.Length" /> property set to 0.
            </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.RasterNativeBuffer.Data">
      <summary>
            Gets or sets the native (unmanaged) data.
            </summary>
      <value>An <see cref="T:System.IntPtr" /> that represents the native (unmanaged) data.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.RasterNativeBuffer.Length">
      <summary>
            Gets or sets the native (unmanaged) data length (size in bytes).
            </summary>
      <value>An <see cref="T:System.Int64" /> value that represents the native (unmanaged) data length (size in bytes).</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.RasterNativeBuffer.Capacity">
      <summary>
            Gets or sets the native (unmanaged) data length (size in bytes).
            </summary>
      <value>An <see cref="T:System.UInt32" /> value that represents the native (unmanaged) data length (size in bytes).</value>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterNativeBuffer.Length_WinRT">
      <summary>
            Gets or sets the native (unmanaged) data length (size in bytes).
            </summary>
      <value>An <see cref="T:System.UInt32" /> value that represents the native (unmanaged) data length (size in bytes).</value>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterNativeBuffer.Buffer">
      <summary>
            Gets or sets the native (unmanaged) data.
            </summary>
      <value>An <see cref="T:System.IntPtr" /> that represents the native (unmanaged) data.</value>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="T:Leadtools.RasterPaletteWindowLevelFlags">
      <summary>
            Indicates how the range is used to fill and type of the lookup table and whether it contains signed or unsigned data.
            </summary>
      <remarks>
            These flags have a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.
            <para>You can use a bitwise OR (|) to specify one flag from each group.</para><table><tr><td><b>Group</b></td><td><b>Flags</b></td></tr><tr><td>Flags that indicate how the range is used to fill the LUT</td><td>Inside, Outside</td></tr><tr><td>Flags that indicate the LUT type</td><td>Linear, Exponential, Logarithmic, Sigmoid</td></tr><tr><td>Flags that indicate whether the LUT contains signed or unsigned data</td><td>Signed</td></tr><tr><td>Flag that indicate whether to fill the LUT using only the <b>startColor</b> and <b>endColor</b> color parameters of <see cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)" />, 
                 as used in DICOM
            applications.</td><td>DicomStyle</td></tr></table></remarks>
      <noexample />
      <objectivec>
        <pre>typedef unsigned int LTRasterPaletteWindowLevelFlags;</pre>
      </objectivec>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.None">
      <summary>
            Default
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.Inside">
      <summary>
            Fill the lookup table between Low and High. ( inside the Low...High range )
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.Outside">
      <summary>
            Fill the LUT below the <b>low</b> and above the <b>high</b> parameters of
            <see cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)" /> and everything in between.
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.Linear">
      <summary>
            Lookup table is linear
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.Exponential">
      <summary>
            Lookup table is exponential
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.Logarithmic">
      <summary>
            Lookup table is logarithmic
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.Sigmoid">
      <summary>
            Lookup table is sigmoid
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.Signed">
      <summary>
            The lookup table data is signed
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaletteWindowLevelFlags.DicomStyle">
      <summary>
            Fill using the <b>startColor</b> and <b>endColor</b> parameters of
            <see cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)" /> colors only.
            </summary>
    </member>
    <member name="T:Leadtools.RasterPalette">
      <summary>
            Encapsulates and provides support for managing image palettes.
            </summary>
      <remarks>
        <para>The palette is an array that contains the colors for displaying the image.</para>
        <para>For more details, refer to <see cref="T:Leadtools.Topics.IntroductionPaletteHandling">Introduction: Palette Handling</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" /> and <see cref="M:Leadtools.RasterPalette.Netscape" />.</example>
      <objectivec>
        <pre>@interface LTRasterPalette : NSObject </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterPalette.Fixed(System.Int32)">
      <summary>
            Creates an array of <see cref="T:Leadtools.RasterColor" /> objects that represent the LEAD Fixed palette.
            </summary>
      <param name="count">The number of colors to add to the fixed palette.</param>
      <returns>The LEAD Fixed palette.</returns>
      <remarks>
            The number of colors specified in <paramref name="count" /> controls the type and size of the returned palette:
            <list type="table"><listheader><term>count</term><description>LEAD Fixed palette</description></listheader><item><term>2</term><description>1-bit palette, with 2 colors, black and white.</description></item><item><term>4</term><description>2-bit palette, with 4 colors.</description></item><item><term>8</term><description>3-bit palette, with 8 colors.</description></item><item><term>16</term><description>4-bit palette, with 16 colors.</description></item><item><term>32</term><description>5-bit palette, with 32 colors.</description></item><item><term>64</term><description>6-bit palette, with 64 colors.</description></item><item><term>128</term><description>7-bit palette, with 128 colors.</description></item><item><term>256</term><description>8-bit palette, with 256 colors.</description></item></list></remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" /></example>
      <objectivec>
        <pre>+(NSArray*)fixed:(unsigned int)count;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterPalette.Netscape">
      <summary>
            Creates an array of <see cref="T:Leadtools.RasterColor" /> objects that represent the Netscape Fixed palette.
            </summary>
      <value>The Netscape Fixed palette.</value>
      <noremarks />
      <example>
        <!--RasterPalette.Netscape-->
      </example>
    </member>
    <member name="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)">
      <summary>
            Fills the user-allocated 8-bit LUT with values ranging between the <paramref name="startColor" /> and <paramref name="endColor" />
            colors according to the selected LUT type.
            </summary>
      <param name="lookupTable">
            Pointer to an array to be updated with the 8-bit RGB quad (i.e. lookup table). 
            </param>
      <param name="startColor">Starting color value for the gradient.</param>
      <param name="endColor">Ending color value for the gradient.</param>
      <param name="low">The low value of the window width, in pixels.</param>
      <param name="high">The high value for the window width, in pixels.</param>
      <param name="lowBit">
        <para>Value indicating the low bit used for leveling.</para>
            This is normally 0 and should be less than the <paramref name="highBit" />.
            </param>
      <param name="highBit">
        <para>Value indicating the high bit used for leveling.</para>
            This should be greater than or equal to <paramref name="lowBit" /> and less than 11 for 12-bit grayscale or 15 for 16-bit grayscale.
            </param>
      <param name="minValue">The image minimum value. This value can be obtained using <see cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand" />.</param>
      <param name="maxValue">The image maximum value. This value can be obtained using <see cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand" />.</param>
      <param name="factor">
        <para>Value that indicates the factor to be applied in the method operation specified in the <paramref name="flags" /> parameter.</para>
        <para>This parameter is used only if <paramref name="flags" /> is <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Exponential</see>, 
            <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Logarithmic</see> or <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Sigmoid</see>.</para>
        <para>If <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Exponential</see> or <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Sigmoid</see> is specified,
            its value can be any integer (+/-). If <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Logarithmic</see> is specified, its value should 
            be <c>&gt;&gt;= 0</c>. If <paramref name="factor" /> = 0, the lookup table will be filled linearly.</para>
      </param>
      <param name="flags">Flags that indicate how the range is used to fill and the type of the lookup table and whether it contains
            signed or unsigned data.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Medical Toolkits</see>.</para>
        <para>Use this method to fill in the lookup table, used in <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see>,
            according to the lookup table type flag.</para>
        <para>The lookup table will be filled as follows:</para>
        <para>
          <table>
            <tr>
              <th>Inside/Outside</th>
              <th>MinValue-Low</th>
              <th>Low-High</th>
              <th>High-MaxValue</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Inside</see>
              </td>
              <td>solid black (0,0,0)</td>
              <td>color gradient ranging from <paramref name="startColor" /> to <paramref name="endColor" /></td>
              <td>solid white (255,255,255)</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Outside</see>
              </td>
              <td>solid color (<paramref name="startColor" />)</td>
              <td>grayscale values from solid black (0,0,0) to solid white (255, 255, 255)</td>
              <td>solid color (<paramref name="endColor" />)</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Inside</see> | <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.DicomStyle</see></td>
              <td>None</td>
              <td>color gradient ranging from <paramref name="startColor" /> to <paramref name="endColor" /></td>
              <td>None</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Outside</see> | <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.DicomStyle</see></td>
              <td>solid color (<paramref name="startColor" />)</td>
              <td>color gradient ranging from <paramref name="startColor" /> to <paramref name="endColor" /></td>
              <td>solid color (<paramref name="endColor" />)</td>
            </tr>
          </table>
        </para>
        <para>To fill a 16-bit lookup table use <see cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTableExt(Leadtools.RasterColor16[],Leadtools.RasterColor16,Leadtools.RasterColor16,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)" />.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled.</para>
        <para>Images can be window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> for the <paramref name="flags" /> parameter,
            by using the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling.</para>
        <para>If a window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
        <!--RasterPalette.WindowLevelFillLookupTable-->
      </example>
      <objectivec>
        <pre>
+(BOOL)windowLevelFillLookupTable:(NSArray*)lookupTable
                       startColor:(LTRasterColor*)startColor
                         endColor:(LTRasterColor*)endColor
                              low:(int)low
                             high:(int)high
                           lowBit:(unsigned int)lowBit
                          highBit:(unsigned int)highBit
                         minValue:(int)minValue
                         maxValue:(int)maxValue
                           factor:(int)factor
                            flags:(LTRasterPaletteWindowLevelFlags)flags
                            error:(NSError**)outError;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterPalette.WindowLevelFillLookupTableExt(Leadtools.RasterColor16[],Leadtools.RasterColor16,Leadtools.RasterColor16,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)">
      <summary>
            Fills the user-allocated 16-bit LUT with values ranging between the <paramref name="startColor" /> and <paramref name="endColor" />
            colors according to the selected LUT type.
            </summary>
      <isnew>2/28/2009</isnew>
      <param name="lookupTable">
            Pointer to an array to be updated with the 16-bit RGB quad (i.e. lookup table).
            </param>
      <param name="startColor">Starting color value for the gradient.</param>
      <param name="endColor">Ending color value for the gradient.</param>
      <param name="low">The low value of the window width, in pixels.</param>
      <param name="high">The high value for the window width, in pixels.</param>
      <param name="lowBit">
        <para>Value indicating the low bit used for leveling.</para>
            This is normally 0 and should be less than the <paramref name="highBit" />.
            </param>
      <param name="highBit">
        <para>Value indicating the high bit used for leveling.</para>
            This should be greater than or equal to <paramref name="lowBit" /> and less than 11 for 12-bit grayscale or 15 for 16-bit grayscale.
            </param>
      <param name="minValue">The image minimum value. This value can be obtained using <see cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand" />.</param>
      <param name="maxValue">The image maximum value. This value can be obtained using <see cref="T:Leadtools.ImageProcessing.Core.MinMaxValuesCommand" />.</param>
      <param name="factor">
        <para>Value that indicates the factor to be applied in the method operation specified in the <paramref name="flags" /> parameter.</para>
        <para>This parameter is used only if <paramref name="flags" /> is <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Exponential</see>, 
            <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Logarithmic</see> or <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Sigmoid</see>.</para>
        <para>If <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Exponential</see> or <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Sigmoid</see> is specified,
            its value can be any integer (+/-). If <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Logarithmic</see> is specified, its value should 
            be <c>&gt;&gt;= 0</c>. If <paramref name="factor" /> = 0, the lookup table will be filled linearly.</para>
      </param>
      <param name="flags">Flags that indicate how the range is used to fill and the type of the lookup table and whether it contains
            signed or unsigned data.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Medical Toolkits</see>.</para>
        <para>Use this method to fill in the lookup table, used in <see cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevelExtCommand</see>,
            according to the lookup table type flag.</para>
        <para>The lookup table will be filled as follows:</para>
        <para>
          <table>
            <tr>
              <th>Inside/Outside</th>
              <th>MinValue-Low</th>
              <th>Low-High</th>
              <th>High-MaxValue</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Inside</see>
              </td>
              <td>solid black (0,0,0)</td>
              <td>color gradient ranging from <paramref name="startColor" /> to <paramref name="endColor" /></td>
              <td>solid white (255,255,255)</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Outside</see>
              </td>
              <td>solid color (<paramref name="startColor" />)</td>
              <td>grayscale values from solid black (0,0,0) to solid white (255, 255, 255)</td>
              <td>solid color (<paramref name="endColor" />)</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Inside</see> | <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.DicomStyle</see></td>
              <td>None</td>
              <td>color gradient ranging from <paramref name="startColor" /> to <paramref name="endColor" /></td>
              <td>None</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.Outside</see> | <see cref="T:Leadtools.RasterPaletteWindowLevelFlags">RasterPaletteWindowLevelFlags.DicomStyle</see></td>
              <td>solid color (<paramref name="startColor" />)</td>
              <td>color gradient ranging from <paramref name="startColor" /> to <paramref name="endColor" /></td>
              <td>solid color (<paramref name="endColor" />)</td>
            </tr>
          </table>
        </para>
        <para>To fill an 8-bit lookup table use <see cref="M:Leadtools.RasterPalette.WindowLevelFillLookupTable(Leadtools.RasterColor[],Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterPaletteWindowLevelFlags)" />.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled.</para>
        <para>Images can be window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> for the <paramref name="flags" /> parameter,
            by using the <see cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" /> or by loading an image from a file format that supports Window Leveling.</para>
        <para>If a window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
        <!--RasterPalette.WindowLevelFillLookupTableExt-->
      </example>
      <objectivec>
        <pre>
+(BOOL)windowLevelFillLookupTableExt:(NSArray*)lookupTable
                          startColor:(LTRasterColor16*)startColor
                            endColor:(LTRasterColor16*)endColor
                                 low:(int)low
                                high:(int)high
                              lowBit:(unsigned int)lowBit
                             highBit:(unsigned int)highBit
                            minValue:(int)minValue
                            maxValue:(int)maxValue
                              factor:(int)factor
                               flags:(LTRasterPaletteWindowLevelFlags)flags
                               error:(NSError**)outError;            </pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.RasterRleCompressor">
      <summary>
            Provides support for working with compressed image data buffers.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.CompressRow(System.UInt16[],System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Performs buffer-to-buffer RLE compression of 1-bit image data.
            </summary>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.</param>
      <param name="buffer">The input buffer, which contains the 1-bit image data to be compressed.</param>
      <param name="bufferOffset">Zero-based index into <paramref name="buffer" />.</param>
      <param name="column">Column offset within the row to be processed. The method skips this many pixels before it begins processing.</param>
      <param name="width">The number of pixels to process.</param>
      <remarks>
        <para>Use this method to process all or part of a single line of image data. This method is available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para>
        <para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.CompressRow(System.UInt16[],System.IntPtr,System.Int32,System.Int32)">
      <summary>
            Performs buffer-to-buffer RLE compression of unmanaged 1-bit image data.
            </summary>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.</param>
      <param name="buffer">The unmanaged input buffer, which contains the 1-bit image data to be compressed.</param>
      <param name="column">Column offset within the row to be processed. The method skips this many pixels before it begins processing.</param>
      <param name="width">The number of pixels to process.</param>
      <remarks>
        <para>Use this method to process all or part of a single line of image data. This method is available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para>
        <para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.CompressRows(System.UInt16[],System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Performs buffer-to-buffer RLE compression of 1-bit image data
            </summary>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.</param>
      <param name="buffer">The input buffer, which contains the 1-bit image data to be compressed.</param>
      <param name="bufferOffset">Zero-based index into <paramref name="buffer" />.</param>
      <param name="width">The number of pixels to process.</param>
      <param name="rows">The number of rows to process.</param>
      <remarks>
        <para>Use this method to process multiple lines of image data. This method is available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para>
        <para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.CompressRows(System.UInt16[],System.IntPtr,System.Int32,System.Int32)">
      <summary>
             Performs buffer-to-buffer RLE compression of unmanaged 1-bit image data
             </summary>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.</param>
      <param name="buffer">The unmanaged input buffer, which contains the 1-bit image data to be compressed.</param>
      <param name="width">The number of pixels to process.</param>
      <param name="rows">The number of rows to process.</param>
      <remarks>
            .<para>Use this method to process multiple lines of image data. This method is available in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para><para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
             For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para></remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.ExpandRow(System.UInt16[],System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Performs buffer-to-buffer RLE decompression of 1-bit image data.
            </summary>
      <param name="runBuffer">The input buffer containing 1-bit compressed image data.</param>
      <param name="buffer">The output buffer, which is to be filled with 1-bit image data.</param>
      <param name="bufferOffset">Zero-based index into <paramref name="buffer" />.</param>
      <param name="column">Column offset within the row to be processed. The method skips this many pixels before it begins processing.</param>
      <param name="width">The number of pixels to process.</param>
      <remarks>
        <para>Use this method to process all or part of a single line of image data. This method is available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para>
        <para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.ExpandRow(System.UInt16[],System.IntPtr,System.Int32,System.Int32)">
      <summary>
            Performs buffer-to-buffer RLE decompression of unmanaged 1-bit image data.
            </summary>
      <param name="runBuffer">The input buffer containing 1-bit compressed image data.</param>
      <param name="buffer">The unmanaged output buffer, which is to be filled with 1-bit image data.</param>
      <param name="column">Column offset within the row to be processed. The method skips this many pixels before it begins processing.</param>
      <param name="width">The number of pixels to process.</param>
      <remarks>
        <para>Use this method to process all or part of a single line of image data. This method is available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para>
        <para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.ExpandRows(System.UInt16[],System.Byte[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Performs buffer-to-buffer RLE decompression of 1-bit image data.
            </summary>
      <param name="runBuffer">The input buffer containing 1-bit compressed image data.</param>
      <param name="buffer">The output buffer, which is to be filled with 1-bit image data.</param>
      <param name="bufferOffset">Zero-based index into <paramref name="buffer" />.</param>
      <param name="width">The number of pixels in each row.</param>
      <param name="rows">The number of rows to process.</param>
      <remarks>
        <para>Use this method to process multiple lines of image data. This method is available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para>
        <para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.RasterRleCompressor.ExpandRows(System.UInt16[],System.IntPtr,System.Int32,System.Int32)">
      <summary>
            Performs buffer-to-buffer RLE decompression of unmanaged 1-bit image data.
            </summary>
      <param name="runBuffer">The input buffer containing 1-bit compressed image data.</param>
      <param name="buffer">The unmanaged output buffer, which is to be filled with 1-bit image data.</param>
      <param name="width">The number of pixels in each row.</param>
      <param name="rows">The number of rows to process.</param>
      <remarks>
        <para>Use this method to process multiple lines of image data. This method is available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Toolkits</see>.</para>
        <para>This function is useful for working with 1-bit images that are loaded in their compressed formats for faster loading and display.
            For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)" />.</example>
    </member>
    <member name="T:Leadtools.RasterImageFormat">
      <summary>
            Indicates the image file format.
            </summary>
      <keywords>AFP for IM1|AFP|IM for AFP|IM1|IM</keywords>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterImageFormat.Unknown">
      <summary>
            (0)Unknown (or RAW Data).
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Pcx">
      <summary>
            (1)<see cref="T:L.Topics.FileFormatsPCXFormats">ZSoft PCX</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Gif">
      <summary>
            (2)<see cref="T:L.Topics.FileFormatsGif">GIF</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Tif">
      <summary>
            (3)<see cref="T:L.Topics.FileFormatsTIFF">TIFF (Tagged Image File Format)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Tga">
      <summary>
            (4)<see cref="T:L.Topics.FileFormatsTargaFormat">Truevision TGA (TARGA)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cmp">
      <summary>
            (5)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">LEAD Compressed (CMP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Bmp">
      <summary>
            (6)<see cref="T:L.Topics.FileFormatBMPFormats">Bitmap (BMP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jpeg">
      <summary>
            (10)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG File Interchange Format (JFIF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JpegRgb">
      <summary>
            (182)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG File Interchange Format (JFIF) (RGB)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifJpeg">
      <summary>
            (11)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with JPEG compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Os2">
      <summary>
            (14)<see cref="T:L.Topics.FileFormatBMPFormats">OS/2 Bitmap (OS/2 BMP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Wmf">
      <summary>
            (15)<see cref="T:L.Topics.FileFormatsWindowsMetafileFormats">Windows Metafile (WMF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Eps">
      <summary>
            (16)<see cref="T:L.Topics.FileFormatsEPS">PostScript Raster (Encapsulated PostScript)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifLzw">
      <summary>
            (17)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with LZW Compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jpeg411">
      <summary>
            (21)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG File Interchange Format (4-1-1)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifJpeg411">
      <summary>
            (22)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with JPEG compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jpeg422">
      <summary>
            (23)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG File Interchange Format (4-2-2)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifJpeg422">
      <summary>
            (24)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with JPEG compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Ccitt">
      <summary>
            (25)<see cref="T:L.Topics.FileFormatsFax">TIFF CCITT</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Lead1Bit">
      <summary>
            (26)<see cref="T:L.Topics.FileFormatsLEAD1BitFormat">LEAD 1-bit lossless format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.CcittGroup31Dim">
      <summary>
            (27)<see cref="T:L.Topics.FileFormatsFax">TIFF CCITT Group 3 (1 Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.CcittGroup32Dim">
      <summary>
            (28)<see cref="T:L.Topics.FileFormatsFax">TIFF CCITT Group3 two dimensions</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.CcittGroup4">
      <summary>
            (29)<see cref="T:L.Topics.FileFormatsFax">TIFF CCITT Group4 two dimensions 4</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Abc">
      <summary>
            (32)<see cref="T:L.Topics.FileFormatsABC">LEAD Advanced Bitonal Compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cals">
      <summary>
            (50)<see cref="T:L.Topics.FileFormatsFax">CALS Raster (Type 1)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Mac">
      <summary>
            (51)<see cref="T:L.Topics.Miscellaneous1BitFormats">MacPaint (MAC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Img">
      <summary>
            (52)<see cref="T:L.Topics.Miscellaneous1BitFormats">GEM Image (IMG)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Msp">
      <summary>
            (53)<see cref="T:L.Topics.Miscellaneous1BitFormats">Microsoft Paint (MSP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Wpg">
      <summary>
            (54)<see cref="T:L.Topics.FileFormatsWPG">WordPerfect (WPG)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Ras">
      <summary>
            (55)<see cref="T:L.Topics.FileFormatsSun">SUN Raster Format (RAS)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Fli">
      <summary>
            (61)<see cref="T:L.Topics.FileFormatsFLC">Flic Animation (FLI)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.EpsTiff">
      <summary>
            (63)<see cref="T:L.Topics.FileFormatsEPS">PostScript Raster TIFF (Encapsulated PostScript TIFF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.EpsWmf">
      <summary>
            (64)<see cref="T:L.Topics.FileFormatsEPS">PostScript Raster WMF(Encapsulated PostScript WMF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.FaxG31Dim">
      <summary>
            (66)<see cref="T:L.Topics.FileFormatsFax">FAX Group 3 (1 Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.FaxG32Dim">
      <summary>
            (67)<see cref="T:L.Topics.FileFormatsFax">FAX Group 3 (2 Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.FaxG4">
      <summary>
            (68)<see cref="T:L.Topics.FileFormatsFax">FAX Group 4</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.WfxG31Dim">
      <summary>
            (69)<see cref="T:L.Topics.FileFormatsFax">WinFax Group 3 (1 Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.WfxG4">
      <summary>
            (70)<see cref="T:L.Topics.FileFormatsFax">WinFax Group 4</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaG31Dim">
      <summary>
            (71)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (1 Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaG32Dim">
      <summary>
            (72)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (2 Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaG4">
      <summary>
            (73)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (Group 4)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Os22">
      <summary>
            (74)<see cref="T:L.Topics.FileFormatBMPFormats">OS/2 Bitmap (OS/2 BMP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Png">
      <summary>
            (75)<see cref="T:L.Topics.FileFormatsPNGFormat">PNG (Portable Network Graphics)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawIcaG31Dim">
      <summary>
            (77)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (Group 3 1Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawIcaG32Dim">
      <summary>
            (78)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (Group 3 2Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawIcaG4">
      <summary>
            (79)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (Group 4)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.BmpRle">
      <summary>
            (84)<see cref="T:L.Topics.FileFormatBMPFormats">Bitmap (BMP) (With RLE)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifCmyk">
      <summary>
            (85)<see cref="T:L.Topics.FileFormatsTIFF">TIFF CMYK (With CMYK colorspace)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifLzwCmyk">
      <summary>
            (86)<see cref="T:L.Topics.FileFormatsTIFF">TIFF LZW (CMYK)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifPackBits">
      <summary>
            (87)<see cref="T:L.Topics.FileFormatsTIFF">TIFF Packbits</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifPackBitsCmyk">
      <summary>
            (88)<see cref="T:L.Topics.FileFormatsTIFF">TIFF Packbits (CMYK)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifDxf">
      <summary>
            (140)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with embedded DXF</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.WinIco">
      <summary>
            (91)<see cref="T:L.Topics.FileFormatsIconsAndCursors">Windows Icon (ICO)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.WinCur">
      <summary>
            (92)<see cref="T:L.Topics.FileFormatsIconsAndCursors">Windows Cursor (CUR)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifYcc">
      <summary>
            (93)<see cref="T:L.Topics.FileFormatsTIFF">TIFF YCC</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifLzwYcc">
      <summary>
            (94)<see cref="T:L.Topics.FileFormatsTIFF">TIFF LZW YCC</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifPackbitsYcc">
      <summary>
            (95)<see cref="T:L.Topics.FileFormatsTIFF">TIFF Packbits (YCC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Exif">
      <summary>
            (96)<see cref="T:L.Topics.FileFormatsExifFormats">Exif</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.ExifYcc">
      <summary>
            (97)<see cref="T:L.Topics.FileFormatsExifFormats">Exif (YCC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.ExifJpeg422">
      <summary>
            (98)<see cref="T:L.Topics.FileFormatsExifFormats">Exif (JPEG 4-2-2)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.ExifJpeg">
      <summary>
            (98)<see cref="T:L.Topics.FileFormatsExifFormats">Exif (JPEG 4-2-2)</see> This is the same as <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.ExifJpeg422</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.ExifJpeg411">
      <summary>
            (101)<see cref="T:L.Topics.FileFormatsExifFormats">Exif (JPEG 4-1-1)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PbmAscii">
      <summary>
            (102)<see cref="T:L.Topics.FileFormatsPortableBitmapUtilities">PBM Ascii</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PbmBinary">
      <summary>
            (103)<see cref="T:L.Topics.FileFormatsPortableBitmapUtilities">PBM Binary</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PgmAscii">
      <summary>
            (104)<see cref="T:L.Topics.FileFormatsPortableBitmapUtilities">PGM Ascii</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PgmBinary">
      <summary>
            (105)<see cref="T:L.Topics.FileFormatsPortableBitmapUtilities">PPGM Binary</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PpmAscii">
      <summary>
            (106)<see cref="T:L.Topics.FileFormatsPortableBitmapUtilities">PPM ASCII</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PpmBinary">
      <summary>
            (107)<see cref="T:L.Topics.FileFormatsPortableBitmapUtilities">PPM Binary</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cut">
      <summary>
            (108)<see cref="T:L.Topics.FileFormatsCUT">Dr. Halo</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xpm">
      <summary>
            (109)<see cref="T:L.Topics.FileFormatsXPicMapFormat">XPM Window PixMap</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xbm">
      <summary>
            (110)<see cref="T:L.Topics.FileFormatsXBitMap">XWindows BitMap (XBM)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IffIlbm">
      <summary>
            (111)<see cref="T:L.Topics.FileFormatsIFF">IFF (Amiga Interchange) (ILBM)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IffCat">
      <summary>
            (112)<see cref="T:L.Topics.FileFormatsIFF">IFF (Amiga Interchange) (CAT)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xwd">
      <summary>
            (113)<see cref="T:L.Topics.FileFormatsXWD">X Window Dump (XWD)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Clp">
      <summary>
            (114)<see cref="T:L.Topics.FileFormatsCLP">Microsoft Windows Clipboard (CLP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jbig">
      <summary>
            (115)<see cref="T:L.Topics.FileFormatsJBIGFormat">JBIG (JBG)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Emf">
      <summary>
            (116)<see cref="T:L.Topics.FileFormatsWindowsMetafileFormats">Windows Enhanced Metafile (EMF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaIbmMmr">
      <summary>
            (117)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (MMR Compressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawIcaIbmMmr">
      <summary>
            (118)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (Raw MMR Compressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Ani">
      <summary>
            (119)<see cref="T:L.Topics.FileFormatsWindowsAnimatedCursorFormat">Windows Animated Cursor (ANI)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.LaserData">
      <summary>
            (121)<see cref="T:L.Topics.FileFormatsFax">LaserView LaserData</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IntergraphRle">
      <summary>
            (122)<see cref="T:L.Topics.FileFormatsITG">IntergraphRLE (ITG) (RLE compressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cals4">
      <summary>
            (129)<see cref="T:L.Topics.FileFormatsFax">CALS Raster (Type 4)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cals2">
      <summary>
            (130)<see cref="T:L.Topics.FileFormatsFax">CALS Raster (Type 2)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cals3">
      <summary>
            (131)<see cref="T:L.Topics.FileFormatsFax">CALS Raster (Type 3)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xwd10">
      <summary>
            (132)<see cref="T:L.Topics.FileFormatsXWD">X Window Dump (XWD 10)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xwd11">
      <summary>
            (133)<see cref="T:L.Topics.FileFormatsXWD">X Window Dump (XWD 11)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Flc">
      <summary>
            (134)<see cref="T:L.Topics.FileFormatsFLC">Flic Animation (FLC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifCmp">
      <summary>
            (138)<see cref="T:L.Topics.FileFormatsTIFF">TIFF (with LEAD CMP compression)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifJbig">
      <summary>
            (139)<see cref="T:L.Topics.FileFormatsTIFF">TIFF (with JBIG compression)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifUnknown">
      <summary>
            (141)<see cref="T:L.Topics.FileFormatsTIFF">TIFF (Unknown image data)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Sgi">
      <summary>
            (142)<see cref="T:L.Topics.FileFormatsSGI">Silicon Graphics Image Format (SGI)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.SgiRle">
      <summary>
            (143)<see cref="T:L.Topics.FileFormatsSGI">Silicon Graphics Image Format (SGI) (RLE)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdf">
      <summary>
            (146)<see cref="T:L.Topics.FileFormatsPDF">Adobe Portable Document Format (PDF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfG31Dim">
      <summary>
            (147)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (Group 3 1-Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfG32Dim">
      <summary>
            (148)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (Group 3 2-Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfG4">
      <summary>
            (149)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (Group 4)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfJpeg">
      <summary>
            (150)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (JPEG)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfJpeg422">
      <summary>
            (151)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (JPEG 4-2-2)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfJpeg411">
      <summary>
            (152)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (JPEG 4-1-1)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfLzw">
      <summary>
            (179)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (LZW Compression)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfJbig2">
      <summary>
            (188)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (JBIG2 Compression)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfCmyk">
      <summary>
            (333)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (CMYK data)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfLzwCmyk">
      <summary>
            (334)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (CMYK data - LZW Compression)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Raw">
      <summary>
            (153)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> LEADTOOLS can load and save raw compressed or uncompressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifCustom">
      <summary>
            (155)Unsupported.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawRgb">
      <summary>
            (156)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> LEADTOOLS can load and save raw compressed or uncompressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawRle4">
      <summary>
            (157)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> (RLE 4-bit). LEADTOOLS can load and save raw compressed or uncompressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawRle8">
      <summary>
            (158)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> (RLE 8-bit).LEADTOOLS can load and save raw compressed or uncompressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawBitfields">
      <summary>
            (159)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> (BitField compressed). LEADTOOLS can load and save raw compressed or uncompressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawPackBits">
      <summary>
            (160)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> (Packbits compressed). LEADTOOLS can load and save raw compressed or uncompressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawJpeg">
      <summary>
            (161)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> (JPEG compressed).
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.FaxG31DimNoEol">
      <summary>
            (162)<see cref="T:L.Topics.FileFormatsFax">FAX Group 3 (1 Dimensional) - with no EOL</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawCcitt">
      <summary>
            (162)<see cref="T:L.Topics.FileFormatsRAW">Raw Image Data</see> (CCITT compressed). LEADTOOLS can load and save raw compressed or uncompressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jp2">
      <summary>
            (163)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JP2 - Lossy or Lossless</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.J2k">
      <summary>
            (164)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">J2K - Lossy or Lossless</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cmw">
      <summary>
            (165)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">LEAD CMW</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifJ2k">
      <summary>
            (166)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with JPEG 2000 compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifCmw">
      <summary>
            (167)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with LEAD Wavelet CMW compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Mrc">
      <summary>
            (168)<see cref="T:L.Topics.MrcT44Fmt">Standard MRC T44 format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.LeadMrc">
      <summary>
            (314)<see cref="T:L.Topics.LeadMrcFmt">LEADTOOLS MRC format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifMrc">
      <summary>
            (177)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with standard MRC compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifLeadMrc">
      <summary>
            (315)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with LEAD MRC compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Wbmp">
      <summary>
            (170)<see cref="T:L.Topics.FileFormatsWBMP">Wireless Bitmap Format (WBMP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JpegLab">
      <summary>
            (171)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG File Interchange Format (JFIF) (LAB)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JpegLab411">
      <summary>
            (172)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG File Interchange Format (JFIF) (LAB 4-1-1)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JpegLab422">
      <summary>
            (173)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG File Interchange Format (JFIF) (LAB 4-2-2)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.GeoTiff">
      <summary>
            (174)<see cref="T:L.Topics.FileFormatsTIFF">TIFF (GeoTIFF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifLead1Bit">
      <summary>
            (175)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with LEAD 1-bit compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifAbc">
      <summary>
            (180)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with LEAD ABC 1-bit compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Postscript">
      <summary>
            (222)<see cref="T:L.Topics.FileFormatsPostScriptDoc">PostScript Document Format (PS)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Ptoca">
      <summary>
            (249)<see cref="T:L.Topics.FileFormatsPTOCA">PTOCA Format (PTOCA)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Sct">
      <summary>
            (250)<see cref="T:L.Topics.FileFormatsSCT">Scitex Continuous Tone Format (SCT)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Afp">
      <summary>
            (252)<see cref="T:L.Topics.FileFormatsAFP">AFP Format (AFP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaUncompressed">
      <summary>
            (253)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (uncompressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawIcaUncompressed">
      <summary>
            (254)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA (ICA) (raw uncompressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Smp">
      <summary>
            (256)<see cref="T:L.Topics.FileFormatsSMP">SMP Format (SMP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.SmpG31Dim">
      <summary>
            (257)<see cref="T:L.Topics.FileFormatsSMP">SMP Format (SMP) (Group 3 1-Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.SmpG32Dim">
      <summary>
            (258)<see cref="T:L.Topics.FileFormatsSMP">SMP Format (SMP) (Group 3 2-Dimensional)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.SmpG4">
      <summary>
            (259)<see cref="T:L.Topics.FileFormatsSMP">SMP Format (SMP) (Group 4)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TgaRle">
      <summary>
            (262)<see cref="T:L.Topics.FileFormatsTargaFormat">Truevision TGA (TARGA) (RLE)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasRle">
      <summary>
            (288)<see cref="T:L.Topics.FileFormatsSun">SUN Raster Format (RAS) (RLE)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.ClpRle">
      <summary>
            (291)<see cref="T:L.Topics.FileFormatsCLP">Microsoft Windows Clipboard (CLP)(RLE compressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Fit">
      <summary>
            (295)<see cref="T:L.Topics.FileFormatsFIT">FITS Format (FIT)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cin">
      <summary>
            (298)<see cref="T:L.Topics.FileFormatsKODAKCineon">Cineon Format (CIN)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.EpsPostscript">
      <summary>
            (300)<see cref="T:L.Topics.FileFormatsEPS">PostScript Raster (Encapsulated PostScript)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IntergraphCcittG4">
      <summary>
            (301)<see cref="T:L.Topics.FileFormatsITG">IntergraphRLE (ITG) (CCITT Group 4 compressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Sff">
      <summary>
            (302)<see cref="T:L.Topics.FileFormatsSFF">Structured Fax File Format (SFF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IffIlbmUncompressed">
      <summary>
            (303)<see cref="T:L.Topics.FileFormatsIFF">IFF (Amiga Interchange) (ILBM uncompressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IffCatUncompressed">
      <summary>
            (304)<see cref="T:L.Topics.FileFormatsIFF">IFF (Amiga Interchange) (CAT uncompressed)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.AfpIcaG31Dim">
      <summary>
            (309)<see cref="T:L.Topics.FileFormatsAFP">AFP Format (AFP) IOCA Group3 1 Dimensional</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.AfpIcaG32Dim">
      <summary>
            (310)<see cref="T:L.Topics.FileFormatsAFP">AFP Format (AFP) IOCA Group3 2 Dimensional</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.AfpIcaG4">
      <summary>
            (311)<see cref="T:L.Topics.FileFormatsAFP">AFP Format (AFP) IOCA Group4</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.AfpIcaUncompressed">
      <summary>
            (312)<see cref="T:L.Topics.FileFormatsAFP">AFP Format (AFP) IOCA Uncompressed</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.AfpIcaIbmMmr">
      <summary>
            (313)<see cref="T:L.Topics.FileFormatsAFP">AFP Format (AFP) IOCA MMR Compressed</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.AfpIm1">
      <summary>
            (340)<see cref="T:L.Topics.FileFormatsAFP">AFP Format (AFP) IOCA MMR Compressed</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Psd">
      <summary>
            (76)<see cref="T:L.Topics.FileFormatsPSDFormat">Photoshop 3.0 (PSD)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jbig2">
      <summary>
            (183)<see cref="T:L.Topics.FileFormatsJBIG2Format">JBIG2 (JB2)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Crw">
      <summary>
            (296)<see cref="T:L.Topics.FileFormatsCRW">AFP Format (AFP) IOCA MMR Compressed</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfArw">
      <summary>
            (359)<see cref="T:L.Topics.FileFormatsDCF">Sony Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfRaf">
      <summary>
            (360)<see cref="T:L.Topics.FileFormatsDCF">Fujifilm Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfOrf">
      <summary>
            (361)<see cref="T:L.Topics.FileFormatsDCF">Olympus Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfCr2">
      <summary>
            (362)<see cref="T:L.Topics.FileFormatsDCF">Canon Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfNef">
      <summary>
            (363)<see cref="T:L.Topics.FileFormatsDCF">Nikon Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfRw2">
      <summary>
            (364)<see cref="T:L.Topics.FileFormatsDCF">Panasonic Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfCasio">
      <summary>
            (365)<see cref="T:L.Topics.FileFormatsDCF">Casio Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfPentax">
      <summary>
            (366)<see cref="T:L.Topics.FileFormatsDCF">Pentax Digital Camera Format (DCF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dcr">
      <summary>
            (292)<see cref="T:L.Topics.FileFormatsDCR">Kodak Professional Digital Camera System Format (DCR)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dcs">
      <summary>
            (266)<see cref="T:L.Topics.FileFormatsDCS">Kodak Professional Digital Camera System Format (DCS)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Ecw">
      <summary>
            (277)<see cref="T:L.Topics.FileFormatsECW">Enhanced Compressed Wavelet Format (ECW)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Kdc">
      <summary>
            (135)<see cref="T:L.Topics.FileFormatsKDC">Kodak Digital Camera Format (KDC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Pcd">
      <summary>
            (57)<see cref="T:L.Topics.FileFormatsFPX">PhotoCD (PCD)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Kdc120">
      <summary>
            (263)<see cref="T:L.Topics.FileFormatsKDC">Kodak Digital Camera Format (KDC) (120)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Kdc40">
      <summary>
            (264)<see cref="T:L.Topics.FileFormatsKDC">Kodak Digital Camera Format (KDC) (40)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Kdc50">
      <summary>
            (265)<see cref="T:L.Topics.FileFormatsKDC">Kodak Digital Camera Format (KDC) (50)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RtfRaster">
      <summary>
            (305)<see cref="T:L.Topics.FileFormatsRTF">Rich Text Format (RTF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Awd">
      <summary>
            (99)<see cref="T:L.Topics.FileFormatsFax">Microsoft Fax (AWD)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Abic">
      <summary>
            (185)<see cref="T:L.Topics.FileFormatsABIC">Raw ABIC Format (ABIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaAbic">
      <summary>
            (190)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA with ABIC compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifAbic">
      <summary>
            (186)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with ABIC compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifJbig2">
      <summary>
            (187)<see cref="T:L.Topics.FileFormatsTIFF">TIFF with JBIG2 compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawLzw">
      <summary>
            (178)<see cref="T:L.Topics.FileFormatsRAW">LZW Image Data</see> LEADTOOLS can save raw LZW compressed data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PdfLeadMrc">
      <summary>
            (317)<see cref="T:L.Topics.FileFormatsPdfLeadMrc">PDF format with image segmentation using MRC</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Txt">
      <summary>
            (316)<see cref="T:L.Topics.FileFormatsTXT">Text Format</see> LEADTOOLS can load ASCII and Unicode text files 
            as raster images. Refer to <see cref="T:Leadtools.Codecs.CodecsTxtLoadOptions" />.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Fpx">
      <summary>
            (80)<see cref="T:L.Topics.FileFormatsFPX">Kodak Formats (PCD and FPX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.FpxSingleColor">
      <summary>
            (81)<see cref="T:L.Topics.FileFormatsFPX">Kodak Formats (PCD and FPX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.FpxJpeg">
      <summary>
            (82)<see cref="T:L.Topics.FileFormatsFPX">Kodak Formats (PCD and FPX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.FpxJpegQFactor">
      <summary>
            (83)<see cref="T:L.Topics.FileFormatsFPX">Kodak Formats (PCD and FPX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomGray">
      <summary>
            (89)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomColor">
      <summary>
            (90)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomRleGray">
      <summary>
            (125)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomRleColor">
      <summary>
            (126)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJpegGray">
      <summary>
            (127)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJpegColor">
      <summary>
            (128)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJlsGray">
      <summary>
            (383)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJlsColor">
      <summary>
            (384)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJ2kGray">
      <summary>
            (293)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJ2kColor">
      <summary>
            (294)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJpxGray">
      <summary>
            (389)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DicomJpxColor">
      <summary>
            (390)<see cref="T:L.Topics.FileFormatsDICOM">DICOM Format (DIC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Wmz">
      <summary>
            (307)<see cref="T:L.Topics.FileFormatsWMZ">Compressed Windows Metafile Format (WMZ)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Pct">
      <summary>
            (56)<see cref="T:L.Topics.FileFormatsPCT">Macintosh PICT Format (PCT)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxJbig">
      <summary>
            (269)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxJbigT43">
      <summary>
            (270)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxJbigT43ItuLab">
      <summary>
            (271)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxJbigT43Gs">
      <summary>
            (272)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxFaxG4">
      <summary>
            (273)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxFaxG31D">
      <summary>
            (274)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxFaxG32D">
      <summary>
            (275)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifxJpeg">
      <summary>
            (276)<see cref="T:L.Topics.FileFormatsFax">Xerox Internet Fax File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Hdp">
      <summary>
            (318)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.HdpGray">
      <summary>
            (319)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.HdpCmyk">
      <summary>
            (320)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PngIco">
      <summary>
            (321)<see cref="T:L.Topics.FileFormatsIconsAndCursors">Windows Icon (ICO), PNG Compressed (VISTA)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TifZip">
      <summary>
            (189)<see cref="T:L.Topics.FileFormatsTIFF">TIFF (with ZIP compression)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xps">
      <summary>
            (322)<see cref="T:L.Topics.FileFormatsXPSFormat">Microsoft XML Paper Specification (XPS)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jpx">
      <summary>
            (323)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">Jpeg 2000 extension part 2 (JPX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.XpsJpeg">
      <summary>
            (324)<see cref="T:L.Topics.FileFormatsXPSFormat">XML Paper Specification (XPS) - with JPEG (4-4-4) Compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.XpsJpeg422">
      <summary>
            (325)<see cref="T:L.Topics.FileFormatsXPSFormat">XML Paper Specification (XPS) - with JPEG (4-2-2) Compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.XpsJpeg411">
      <summary>
            (326)<see cref="T:L.Topics.FileFormatsXPSFormat">XML Paper Specification (XPS) - with JPEG (4-1-1) Compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Mng">
      <summary>
            (327)<see cref="T:L.Topics.FileFormatsMNG">Multiple Network Graphics (MNG)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.MngGray">
      <summary>
            (329)<see cref="T:L.Topics.FileFormatsMNG">Multiple Network Graphics (MNG) - Gray</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.MngJng">
      <summary>
            (330)<see cref="T:L.Topics.FileFormatsMNG">Multiple Network Graphics (MNG) - YUV 4-4-4</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.MngJng411">
      <summary>
            (331)<see cref="T:L.Topics.FileFormatsMNG">Multiple Network Graphics (MNG) - YUV 4-1-1</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.MngJng422">
      <summary>
            (332)<see cref="T:L.Topics.FileFormatsMNG">Multiple Network Graphics (MNG) - YUV 4-2-2</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Tdb">
      <summary>
            (337)<see cref="T:L.Topics.FileFormatsTDB">Windows XP Thumbnail Cache</see></summary>
      <isnew>2/28/2009</isnew>
    </member>
    <member name="F:Leadtools.RasterImageFormat.TdbVista">
      <summary>
            (338)<see cref="T:L.Topics.FileFormatsTDB">Windows Vista Thumbnail Cache</see></summary>
      <isnew>2/28/2009</isnew>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Snp">
      <summary>
            (339)<see cref="T:L.Topics.FileFormatsSNP">MS Access Report Snapshots Format</see></summary>
      <isnew>2/28/2009</isnew>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xls">
      <summary>
            (341)<see cref="T:L.Topics.FileFormatsXLS">Microsoft Excel 2003 file format (XLS)</see></summary>
      <isnew>10/26/2009</isnew>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Doc">
      <summary>
            (342)<see cref="T:L.Topics.FileFormatsDOC">Microsoft Word 2003 file format (DOC)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Anz">
      <summary>
            (343)<see cref="T:L.Topics.FileFormatsANZ">Analyze file format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Ppt">
      <summary>
            (344)<see cref="T:L.Topics.FileFormatsPPT">Microsoft Power Point 2003 file format (PPT)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PptJpeg">
      <summary>
            (345)<see cref="T:L.Topics.FileFormatsPPT">Microsoft Power Point 2003 file format</see> with JPEG compression
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PptPng">
      <summary>
            (346)<see cref="T:L.Topics.FileFormatsPPT">Microsoft Power Point 2003 file format</see> with PNG compression
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jpm">
      <summary>
            (347)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG 2000 JPM file format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Vff">
      <summary>
            (348)<see cref="T:L.Topics.FileFormatsVff">Sun TAAC Bitmap file format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Docx">
      <summary>
            (350)<see cref="T:L.Topics.FileFormatsDOC">Microsoft Office 2007/2010 Word file format (DOCX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Xlsx">
      <summary>
            (351)<see cref="T:L.Topics.FileFormatsXLS">Microsoft Office 2007/2010 Excel file format (XLSX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Pptx">
      <summary>
            (352)<see cref="T:L.Topics.FileFormatsPPT">Microsoft Office 2007/2010 PowerPoint file format (PPTX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jxr">
      <summary>
            (353)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JxrGray">
      <summary>
            (354)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format - Grayscale</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JxrCmyk">
      <summary>
            (355)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format - CMYK</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jls">
      <summary>
            (356)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG LS file format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jxr422">
      <summary>
            (357)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format - YUV 4:2:2</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Jxr420">
      <summary>
            (358)<see cref="T:L.Topics.FileFormatsHDP">JPEG XR / Microsoft HD Photo File Format - YUV 4:2:0</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JlsLine">
      <summary>
            (367)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG LS Line interleaved file format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.JlsSample">
      <summary>
            (368)<see cref="T:L.Topics.FileFormatsJPEGAndLEADCompressed">JPEG LS Sample interleaved file format</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Htm">
      <summary>
            (369)<see cref="T:L.Topics.FileFormatsHTM">HyperText Markup Language</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Mob">
      <summary>
            (370)<see cref="T:L.Topics.FileFormatsMOBI">MOBI format for e-book readers such as the Kindle</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Pub">
      <summary>
            (371)<see cref="T:L.Topics.FileFormatsEPUB">ePub format for files to be displayed on different devices</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Ing">
      <summary>
            (372)<see cref="T:L.Topics.FileFormatsITG">COT, Uncompressed (color or gray)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IngRle">
      <summary>
            (373)<see cref="T:L.Topics.FileFormatsITG">RLE, RLE compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IngAdaptiveRle">
      <summary>
            (374)<see cref="T:L.Topics.FileFormatsITG">T27, Uncompressed (color or gray)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IngG4">
      <summary>
            (375)<see cref="T:L.Topics.FileFormatsITG">CIT, CCITT G4 compression</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaJpeg">
      <summary>
            (377)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA, compressed using JPEG, with MO:DCA wrapper (multipage)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaJpeg411">
      <summary>
            (378)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA, compressed using JPEG 4:1:1, with MO:DCA wrapper (multipage)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IcaJpeg422">
      <summary>
            (379)<see cref="T:L.Topics.FileFormatsIOCAFormat">IOCA, compressed using JPEG 4:2:2, with MO:DCA wrapper (multipage). </see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Shp">
      <summary>
            (255)<see cref="T:L.Topics.FileFormatsSHP">ESRI Shape Format (SHP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dwg">
      <summary>
            (124)<see cref="T:L.Topics.FileFormatsDWG">DWG Format (DWG)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Nap">
      <summary>
            (181)<see cref="T:L.Topics.FileFormatsNAP">NAPLPS Format (NAP)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DwfTextAsPolyline">
      <summary>
            (297)<see cref="T:L.Topics.FileFormatsDWF">DWF Format (DWF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Drw">
      <summary>
            (136)<see cref="T:L.Topics.FileFormatsDRW">DRaWing (DRW)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.PclXl">
      <summary>
            (349)<see cref="T:L.Topics.FileFormatsPCL">PCL6 vector format (PCLXL)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Plt">
      <summary>
            (137)<see cref="T:L.Topics.FileFormatsPCL">HPGL plotter file vector graphics PCL</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Gerber">
      <summary>
            (169)<see cref="T:L.Topics.FileFormatsGBR">Gerber Format (GBR)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Mif">
      <summary>
            (335)<see cref="T:L.Topics.FileFormatsMIF">MapInfo Interchange File Format (MIF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Svg">
      <summary>
            (247)<see cref="T:L.Topics.FileFormatsSVG">Scalable Vector Graphics Format (SVG)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cgm">
      <summary>
            (62)<see cref="T:L.Topics.FileFormatsCGM">Computer Graphics Metafile (CGM)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dwfx">
      <summary>
            (376)<see cref="T:L.Topics.FileFormatsDWF">DWF XPS Document (DWFX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Pcl">
      <summary>
            (251)<see cref="T:L.Topics.FileFormatsPCL">Printer Command Language Format (PCL)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.IntergraphVector">
      <summary>
            (123)<see cref="T:L.Topics.FileFormatsDGN">Intergraph Vector DGN (DGN)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dwf">
      <summary>
            (145)<see cref="T:L.Topics.FileFormatsDWF">DWF Format (DWF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dxf">
      <summary>
            (58)<see cref="T:L.Topics.FileFormatsDXF">Drawing Interchange Format (DXF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dxf12">
      <summary>
            (58)<see cref="T:L.Topics.FileFormatsDXF">Drawing Interchange Format (DXF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Dxf13">
      <summary>
            (290)<see cref="T:L.Topics.FileFormatsDXF">Drawing Interchange Format (DXF)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Cmx">
      <summary>
            (261)<see cref="T:L.Topics.FileFormatsCMX">Corel Presentation Exchange Format (CMX)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.E00">
      <summary>
            (336)<see cref="T:L.Topics.FileFormatsE00">ArcInfo Interchange File Format (E00)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.DcfDng">
      <summary>
            (380)<see cref="T:L.Topics.FileFormatsDCF">File Formats: Digital File Format(DCF, ARW, SR2, SRF, DNG, CR2, RAF, NEF, NRW, ORF, RW2, RAW)</see></summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawFlate">
      <summary>
            (381)Flate-compressed raw Image Data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RawRle">
      <summary>
            (383)RLE-compressed raw Image Data.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Pst">
      <summary>
            (385)Outlook PST Format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Msg">
      <summary>
            (386)Outlook MSG Format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.Eml">
      <summary>
            (387)Outlook EML Format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageFormat.RasPdfJpx">
      <summary>
            (388)<see cref="T:L.Topics.FileFormatsPDF">Portable Document Format (PDF) (JPX)</see></summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand">
      <summary>
            Rotates and flips the image data as necessary to achieve the desired view perspective.
            </summary>
      <keywords>View perspective|Rotating|Flipping|Images|Image coordinates|Display coordinates</keywords>
      <remarks>
        <para>The <see cref="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.ViewPerspective" /> is the arrangement of pixels in the image. 
            This command references image coordinates, which are often different 
            from the display coordinates of an image. </para>
        <para>Use this command to change the data and the <see cref="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.ViewPerspective" /> to simplify
            calculations that involve image coordinates. 
            This method does not affect the image display. 
            For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <example>
            This example will load an image and then change its view perspective.
            <!--ChangeViewPerspectiveCommand--></example>
      <objectivec>
        <pre>@interface LTChangeViewPerspectiveCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ChangeViewPerspectiveCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.RasterCommand">
      <summary>
            The <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> class implements <see cref="T:Leadtools.ImageProcessing.IRasterCommand" /> and is the base class for all LEADTOOLS
            image processing commands.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> class is the base class for all LEADTOOLS image processing commands.</para>
        <para>This class contains functionality for dealing with running an image processing command, including progress status
            of the command.</para>
      </remarks>
      <example>
            This example runs two image processing commands on an image showing the progress percentage.
            <!--RasterCommand--></example>
      <objectivec>
        <pre>@interface LTRasterCommand : NSObject</pre>
      </objectivec>
      <java>
        <pre>public abstract class RasterCommand implements IRasterCommand</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.IRasterCommand">
      <summary>
            Allows an inheriting class to implement a <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> class which, provides functionality for
            performing an image processing command on an image.
            </summary>
      <remarks>
            The <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> class is the main image processing class, and implements the
            <see cref="T:Leadtools.ImageProcessing.IRasterCommand" /> interface.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.IRasterCommand.Run(Leadtools.RasterImage)">
      <summary>
            Runs the image processing command.
            </summary>
      <param name="image">The image on which the image processing command should be performed.</param>
      <returns>
        <see cref="T:Leadtools.RasterImageChangedFlags" /> flags which indicate the changes made to the specified
            image.</returns>
      <remarks>
        <para>Call this method to start the image processing command.</para>
        <para>Each derived class must override this method to provide the actual image processing algorithm.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
      <java>
        <pre>int run(RasterImage image);</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.IRasterCommand.OnProgress(Leadtools.ImageProcessing.RasterCommandProgressEventArgs)">
      <summary>
            Raises the <see cref="E:Leadtools.ImageProcessing.IRasterCommand.Progress" /> event.
            </summary>
      <param name="e">A <see cref="T:Leadtools.ImageProcessing.RasterCommandProgressEventArgs" /> that contains the event data. </param>
      <remarks>
        <para>Raising an event invokes the event handler through a delegate.</para>
        <para>The <see cref="M:Leadtools.ImageProcessing.IRasterCommand.OnProgress(Leadtools.ImageProcessing.RasterCommandProgressEventArgs)" /> method also allows derived classes to handle the event without attaching
            a delegate. This is the preferred technique for handling the event in a derived class.</para>
        <para>Notes to Inheritors: When overriding <see cref="M:Leadtools.ImageProcessing.IRasterCommand.OnProgress(Leadtools.ImageProcessing.RasterCommandProgressEventArgs)" /> in a derived class, be sure to call the base
            class <see cref="M:Leadtools.ImageProcessing.IRasterCommand.OnProgress(Leadtools.ImageProcessing.RasterCommandProgressEventArgs)" /> method so that registered delegates receive the event.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
      <java>
        <pre>void onProgress(leadtools.imageprocessing.RasterCommandProgressEvent event);</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.IRasterCommand.RunCommand_WinRT(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.IRasterCommand.Run_WinRT(Leadtools.RasterImage)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.IRasterCommand.FireProgress_WinRT(System.Object,Leadtools.ImageProcessing.RasterCommandProgressEventArgs)">
      <exclude />
      <winrt />
    </member>
    <member name="E:Leadtools.ImageProcessing.IRasterCommand.Progress">
      <summary>
            Occurs during the image processing command, to provide status on the progress of the command.
            </summary>
      <event>
            The event handler receives an argument of type <see cref="T:Leadtools.ImageProcessing.RasterCommandProgressEventArgs" /> containing
            data related to this event.
            </event>
      <remarks>You can use this event to get progress status, or to cancel the process.</remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.IRasterCommand.HasProgress_WinRT">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> class.
            </summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.OnProgress(Leadtools.ImageProcessing.RasterCommandProgressEventArgs)">
      <summary>
            Implements <see cref="M:Leadtools.ImageProcessing.IRasterCommand.OnProgress(Leadtools.ImageProcessing.RasterCommandProgressEventArgs)" />.
            </summary>
      <param name="e">A <see cref="T:Leadtools.ImageProcessing.RasterCommandProgressEventArgs" /> that contains the event data. </param>
      <remarks>
            This method is used internally by the LEADTOOLS image processing infrastructure.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)">
      <summary>
            Implements <see cref="M:Leadtools.ImageProcessing.IRasterCommand.Run(Leadtools.RasterImage)" />.
            </summary>
      <param name="image">The image on which the image processing command should be performed.</param>
      <returns>
        <see cref="T:Leadtools.RasterImageChangedFlags" /> flags which indicate the changes made to the specified
            image.</returns>
      <remarks>
        <para>Call this method to start the image processing command.</para>
        <para>Each derived class must override this method to provide the actual image processing algorithm.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
      <objectivec>
        <pre>-(BOOL)run:(LTRasterImage*)image error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public int run(RasterImage image)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.RunCommand_WinRT(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.Run_WinRT(Leadtools.RasterImage)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.FireProgress_WinRT(System.Object,Leadtools.ImageProcessing.RasterCommandProgressEventArgs)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommand.#ctor(Leadtools.ImageProcessing.IRasterCommand,System.Boolean)">
      <exclude />
      <winrt />
    </member>
    <member name="E:Leadtools.ImageProcessing.RasterCommand.Progress">
      <summary>
            Implements <see cref="E:Leadtools.ImageProcessing.IRasterCommand.Progress" />.
            </summary>
      <remarks>
            The <see cref="E:Leadtools.ImageProcessing.RasterCommand.Progress" /> event is fired when the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method. <see cref="T:Leadtools.ImageProcessing.RasterCommandProgressEventArgs" /> provides data
            on the current progress of the image processing command.  You can use this data to provide visual feedback to the user.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) id &lt;LTRasterCommandProgressDelegate&gt; progressDelegate;</pre>
      </objectivec>
      <java>
        <pre>
public void addProgressListener(RasterImageProgressListener listener)
public void removeProgressListener(RasterImageProgressListener listener)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommand.HasProgress">
      <summary>
            Determines if the command object has a progress event handler set.
            </summary>
      <value>true if the command object has a progress event handler set; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" />.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasProgress;</pre>
      </objectivec>
      <java>
        <pre>public final boolean hasProgress()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommand.HasProgress_WinRT">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public ChangeViewPerspectiveCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.#ctor(System.Boolean,Leadtools.RasterViewPerspective)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" /> class with explicit parameters.
            </summary>
      <param name="inPlace">true to convert the source image in place (no copy will be made). false, to
            leave the source image unchanged and place the result in the <see cref="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.DestinationImage" /> property.</param>
      <param name="viewPerspective">The desired view perspective.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" />.</example>
      <objectivec>
        <pre>
-(id)initWithInPlace:(BOOL)inPlace 
     viewPerspective:(LTRasterViewPerspective)viewPerspective;            </pre>
      </objectivec>
      <java>
        <pre>
public ChangeViewPerspectiveCommand(
  boolean inPlace, 
  RasterViewPerspective viewPerspective
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.DestinationImage">
      <summary>
            Gets the resulting image, if <see cref="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.InPlace" /> is set to true.
            </summary>
      <value>
            The resulting image, if <see cref="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.InPlace" /> is set to true.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getDestinationImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.InPlace">
      <summary>
            Determines whether or not the source image is converted in place (or a new image is created).
            </summary>
      <value>true to convert the source image in place (no copy will be made). false, to leave the source image unchanged
            and place the result in the <see cref="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.DestinationImage" /> property.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL inPlace;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getInPlace()
public void setInPlace(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand.ViewPerspective">
      <summary>
            The desired view perspective.
            </summary>
      <value>
            The desired view perspective.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterViewPerspective viewPerspective;</pre>
      </objectivec>
      <java>
        <pre>
public RasterViewPerspective getViewPerspective()
public void setViewPerspective(RasterViewPerspective value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.ClearCommand">
      <summary>
            Sets all bits to 0 in the specified image, making it a black image.
            </summary>
      <keywords>Black|Clearing|Setting all bits to 0</keywords>
      <remarks>
        <para>Sets all bits to 0, in the specified image.  If the image has a palette, all pixels will be the color of the first palette entry.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example will clear an image before saving it back to disk.
            <!--ClearCommand--></example>
      <objectivec>
        <pre>@interface LTClearCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ClearCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ClearCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ClearCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public ClearCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand">
      <summary>
            Sets all pixels with negative color values to 0.
            </summary>
      <keywords>Signed images|Colors|Negative values</keywords>
      <remarks>
        <para>If <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Signed">CodecsLoadOptions.Signed</see> is true when a file is loaded, the
            image may contain negative pixel values and LEADTOOLS will paint/process the image incorrectly.  In order to use this image correctly, 
            you must user <see cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand" />.  If the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Signed">CodecsLoadOptions.Signed</see>
            property is false, all negative pixels are cleared internally, during the load process.</para>
        <para>Since some TIFF files are saved with negative values for pixel colors, you should use <see cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand" /> if,
            after loading an image, <see cref="P:Leadtools.RasterImage.Signed">RasterImage.Signed</see> is true. <see cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand" /> does
            nothing if <see cref="P:Leadtools.RasterImage.Signed">RasterImage.IsSigned</see> is false.</para>
        <para>Programming tip: use <see cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand" /> right after loading the image from file.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example sets the Signed flag in the load options, loads a tif file and clears the negative pixels.
            <!--ClearNegativePixelsCommand--></example>
      <objectivec>
        <pre>@interface LTClearNegativePixelsCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ClearNegativePixelsCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearNegativePixelsCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public ClearNegativePixelsCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearNegativePixelsCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearNegativePixelsCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ClearNegativePixelsCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.ImageProcessing.CloneCommand">
      <summary>
            Creates a copy of a a <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <keywords>Copying|Cloning</keywords>
      <remarks>
        <para>After the command is run, a copy of the current page of the source image will be in the <see cref="P:Leadtools.ImageProcessing.CloneCommand.DestinationImage">CloneCommand.DestinationImage</see> property. This property will
            hold a copy of the image, so the user is responsible for freeing this image after using it.</para>
        <para>If a region is defined for the image, the region is also copied.</para>
        <para>If the source image has more than one page, then you can use the <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages">CloneCommand.AllPages</see> property
            to control whether to clone all the pages in the image or only the current page.</para>
        <para>You can use the <see cref="M:Leadtools.RasterImage.Clone">RasterImage.Clone</see> method instead of this command to create a clone of an image. If
            you need to clone a multi-page <see cref="T:Leadtools.RasterImage" /> object, then use the <see cref="M:Leadtools.RasterImage.CloneAll">RasterImage.CloneAll</see> method.
            These methods will also clone any metadata (tags, comments and markers) located in the source image however, you lose the benefit of using a progress monitor.</para>
      </remarks>
      <example>
        <para>This example will load an image and then clone it before saving it back to disk. For an example on how to clone a multi-page image and
            show the overall progress monitor, refer to the <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages">CloneCommand.AllPages</see> property.</para>
        <!--CloneCommand-->
      </example>
      <objectivec>
        <pre>@interface LTCloneCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class CloneCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CloneCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CloneCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public CloneCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CloneCommand.#ctor(Leadtools.RasterMemoryFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CloneCommand" /> class with explicit parameters.
            </summary>
      <param name="createFlags">Flags that control memory allocation for the destination image.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</example>
      <objectivec>
        <pre>- (id)initWithFlags:(LTRasterMemoryFlags)createFlags;</pre>
      </objectivec>
      <java>
        <pre>public CloneCommand(int createFlags)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CloneCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.CloneCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.CloneCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.CloneCommand.DestinationImage">
      <summary>
            Gets the resulting image of this command
            </summary>
      <value>The resulting <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
            After the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method is executed, the resulting cloned image is located in the <see cref="P:Leadtools.ImageProcessing.CloneCommand.DestinationImage" />
            property.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CloneCommand" /> (or <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages" /> for an example on cloning a multi-page image).</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getDestinationImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CloneCommand.CreateFlags">
      <summary>
            Gets or sets the flags that control memory allocation for the destination image.
            </summary>
      <value>
        <see cref="T:Leadtools.RasterMemoryFlags" /> flags that control memory allocation for the destination image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterMemoryFlags createFlags;</pre>
      </objectivec>
      <java>
        <pre>
public int getCreateFlags()
public void setCreateFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CloneCommand.AllPages">
      <summary>
            Gets or sets a value that indicates whether to clone all the pages if the source image is multi-page.
            </summary>
      <value>
        <strong>true</strong> to clone all the pages if the source image is multi-page; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>If the source image (the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)">RasterCommand.Run</see> method) contains multiple pages, then you can use the <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages" />
            property to control whether the <see cref="T:Leadtools.ImageProcessing.CloneCommand" /> will create a copy of the current active page or all the pages in the image.</para>
        <para>Note that when the source image has multiple pages and the value of <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages" /> was set to <strong>true</strong>, then the <see cref="E:Leadtools.ImageProcessing.RasterCommand.Progress">RasterCommand.Progress</see>
            event will fire from 0 to 100 for each page processed. If an overall progress percentage is desired, then you can inspect the
            <see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see> and <see cref="P:Leadtools.RasterImage.PageCount">RasterImage.PageCount</see> properties of the
            <see cref="P:Leadtools.ImageProcessing.CloneCommand.SourceImage" /> property to calculate this value as shown in the example below.</para>
        <para>The default value of this property is <strong>false</strong> to clone only the current page.</para>
      </remarks>
      <example>
        <para>This example will clone a multi-page image and shows the over-all progress value.</para>
        <!--CloneCommand.AllPages-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL allPages;</pre>
      </objectivec>
      <java>
        <pre>
public final boolean getAllPages()
public final void setAllPages(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CloneCommand.SourceImage">
      <summary>
            Gets the source image used in this <see cref="T:Leadtools.ImageProcessing.CloneCommand" /></summary>
      <value>A <see cref="T:Leadtools.RasterImage" /> object that references the source image used in this command (the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)">RasterCommand.Run</see> method).</value>
      <remarks>
        <para>If the source image (the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)">RasterCommand.Run</see> method) contains multiple pages, then you can use the <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages" />
            property to control whether the <see cref="T:Leadtools.ImageProcessing.CloneCommand" /> will create a copy of the current active page or all the pages in the image.</para>
        <para>Note that when the source image has multiple pages and the value of <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages" /> was set to <strong>true</strong>, then the <see cref="E:Leadtools.ImageProcessing.RasterCommand.Progress">RasterCommand.Progress</see>
            event will fire from 0 to 100 for each page processed. If an overall progress percentage is desired, then you can inspect the
            <see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see> and <see cref="P:Leadtools.RasterImage.PageCount">RasterImage.PageCount</see> properties of the
            <see cref="P:Leadtools.ImageProcessing.CloneCommand.SourceImage" /> property to calculate this value as shown in the <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages" /> example.</para>
        <para>The default value of this property is <strong>false</strong>.</para>
      </remarks>
      <example>
        <para>For an example, refer to <see cref="P:Leadtools.ImageProcessing.CloneCommand.AllPages" />.</para>
      </example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* sourceImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getSourceImage()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.ColorResolutionCommandMode">
      <summary>
            Options for the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.Mode">ColorResolutionCommand.Mode</see> property.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandMode.InPlace">
      <summary>
            (0)Convert the source image in place (no copy is made).
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandMode.CreateDestinationImage">
      <summary>
            (1)Create a new image, leaving the source image unchanged.
            The <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.DestinationImage">ColorResolutionCommand.DestinationImage</see> will hold the converted
            <see cref="T:Leadtools.RasterImage" />.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandMode.OnlyData">
      <summary>
            (2)<para>Only provide the converted data in the <see cref="E:Leadtools.ImageProcessing.ColorResolutionCommand.Data">ColorResolutionCommand.Data</see> event.</para><para>The source image is unchanged and no new, destination image will be created.</para></summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandMode.AllPages">
      <summary>
            (3)Process all pages in the source image.
            </summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.ColorResolutionCommand">
      <summary>
            Converts an image from any bits-per-pixel to any bits-per-pixel.
            </summary>
      <keywords>Binarize | Color reduction | Down sampling | Color resolution | Intensity detection | Bitonal images | Dithering | Palettes | Bits per pixel | Color space | Color order|Resolution|Bit-depth|Grayscale</keywords>
      <remarks>
        <para>This class provides flexibility in specifying the output destination and in specifying the palette to use.</para>
        <para>For general information about dithering, refer to <see cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Color Resolution and Dithering</see> 
            and <see cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</see>.</para>
        <para>You can convert the image in place or create a new converted image.</para>
        <para>In specifying a palette, you can use simple palette options, or you can specify a palette that is tailored to your needs. The tailored
            palette can be any size that you specify. It can include specific colors, reserved blank entries, and open entries that this method fills with
            optimized colors.</para>
        <para>If you use the same tailored palette more than once, you can improve performance by creating a table, using
            <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</para>
        <para>NOTE: Using this class to change the color order of a 24-bit or 32-bit image (i.e. RGB to BGR) will have no effect on the image when 
            painting or saving (to a file). If you want to change the visual appearance, you can simply swap the color order using the <see cref="P:Leadtools.RasterImage.Order">RasterImage.Order</see> property.</para>
        <para>When converting to 32 and 64-bit images, you can control whether to initialize the alpha channel values to all 0's or 1's through the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.InitAlpha" /> property.</para>
        <para>This class does not support signed data images. An exception will be thrown if a signed data image is passed to this class.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.IntroductionPaletteHandling">Introduction - Palette Handling</see>.</para>
      </remarks>
      <example>
            This example will run the ColorResolutionCommand on an image to convert it to 8 and 4 bits/pixel.
            <!--ColorResolutionCommand--></example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">Codecs.CodecsThumbnailOptions.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.DitheringMethod">ImageProcessing.ColorResolutionCommand.DitheringMethod property</seealso>
      <seealso cref="T:Leadtools.RasterDitheringMethod">RasterDitheringMethod enumeration</seealso>
      <seealso cref="P:Leadtools.RasterDefaults.DitheringMethod">RasterDefaults.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod property</seealso>
      <seealso cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)">RasterImage.DitherLine method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)">RasterImage.StartDithering method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StopDithering">RasterImage.StopDithering method</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">Convert</seealso>
      <objectivec>
        <pre>@interface LTColorResolutionCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ColorResolutionCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public ColorResolutionCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.#ctor(Leadtools.ImageProcessing.ColorResolutionCommandMode,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterDitheringMethod,Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags,Leadtools.RasterColor[])">
      <summary>
             Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> class with explicit parameters.
             </summary>
      <param name="mode">Flags which control the behavior of the command.</param>
      <param name="bitsPerPixel">The number of bits per pixel to for the conversion.
             Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48 and 64.</param>
      <param name="order">The desired color order for the conversion.</param>
      <param name="ditheringMethod">
             Dithering options, useful only when the resulting image requires a palette (when it is 8 bits per pixel or less).</param>
      <param name="paletteFlags">
             Palette options, useful only when the resulting image requires a palette (when it is 8 bits per pixel or less).</param>
      <param name="palette">The palette used when converting the image if <paramref name="paletteFlags" /> includes the 
             <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.UsePalette</see> flag.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>
-(id)initWithMode:(LTColorResolutionCommandMode)mode
 bitsPerPixel:(unsigned int)bitsPerPixel
        order:(LTRasterByteOrder)order
theringMethod:(LTRasterDitheringMethod)ditheringMethod
 paletteFlags:(LTColorResolutionCommandPaletteFlags)paletteFlags
      palette:(NSArray*)palette;             </pre>
      </objectivec>
      <java>
        <pre>
public ColorResolutionCommand(
  ColorResolutionCommandMode mode, 
  int bitsPerPixel, 
  RasterByteOrder order, 
  RasterDitheringMethod ditheringMethod, 
  int paletteFlags, 
  RasterColor[] palette
)             </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.GetPalette">
      <summary>
            Gets the custom palette to use when converting the image.
            </summary>
      <returns>The custom palette to use when converting the image.</returns>
      <remarks>
        <para>Use the <see cref="M:Leadtools.ImageProcessing.ColorResolutionCommand.SetPalette(Leadtools.RasterColor[])" /> method to set the palette to use.</para>
        <para>The custom palette to use. Specify this parameter as follows:
            <list><item><description>
            If you want to use the fixed palette or a fully optimized palette, pass a null reference (Nothing in Visual Basic) in this property.
            </description></item><item><description>
            If you want to supply the entire palette, specify <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.UsePalette</see>
            in the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags" /> property and set this property. <see cref="T:Leadtools.Topics.ColorResolutionCommandPaletteUsePalette">Click here</see>
            to see how to fill in the palette.
            </description></item><item><description>
            If you want the command to fill part of your palette with optimized colors, specify <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.Optimized</see> in 
            the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags" /> property and set this property. <see cref="T:Leadtools.Topics.ColorResolutionCommandPaletteOptimized">Click here</see>
            to see how to fill in the palette.
            </description></item></list></para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>-(NSArray*)getPalette;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor[] getPalette()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.SetPalette(Leadtools.RasterColor[])">
      <summary>
            Sets the custom palette to use when converting the image.
            </summary>
      <param name="value">The palette to use.</param>
      <remarks>
        <para>Use the <see cref="M:Leadtools.ImageProcessing.ColorResolutionCommand.GetPalette" /> method to get the palette to use.</para>
        <para>The custom palette to use. Specify this parameter as follows:
            <list><item><description>
            If you want to use the fixed palette or a fully optimized palette, pass a null reference (Nothing in Visual Basic) in this property.
            </description></item><item><description>
            If you want to supply the entire palette, specify <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.UsePalette</see>
            in the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags" /> property and set this property. <see cref="T:Leadtools.Topics.ColorResolutionCommandPaletteUsePalette">Click here</see>
            to see how to fill in the palette.
            </description></item><item><description>
            If you want the command to fill part of your palette with optimized colors, specify <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.Optimized</see> in 
            the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags" /> property and set this property. <see cref="T:Leadtools.Topics.ColorResolutionCommandPaletteOptimized">Click here</see>
            to see how to fill in the palette.
            </description></item></list></para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>-(void)setPalette:(NSArray*)value;</pre>
      </objectivec>
      <java>
        <pre>public void setPalette(RasterColor[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.Run(Leadtools.RasterImage)">
      <summary>
            Overrides <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" />.
            </summary>
      <param name="image">The image on which the image processing command should be performed.</param>
      <returns>
        <see cref="T:Leadtools.RasterImageChangedFlags" /> flags which indicate the changes made to the specified
            image.</returns>
      <remarks>
        <para>Call this method to start the color resolution image processing command. For more information, refer to <see cref="M:Leadtools.ImageProcessing.IRasterCommand.Run(Leadtools.RasterImage)">IRasterCommand.Run</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ColorResolutionCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="E:Leadtools.ImageProcessing.ColorResolutionCommand.Data">
      <summary>
            Occurs during the <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" />, to provide the converted data.
            </summary>
      <event>
            The event handler receives an argument of type <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs" /> containing data related to this event.
            </event>
      <remarks>
            You can use this event to handle the converted image data that the <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> has written to a buffer.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) id &lt;LTColorResolutionCommandDataDelegate&gt; dataDelegate;</pre>
      </objectivec>
      <java>
        <pre>
synchronized public void addColorResolutionCommandDataListener(ColorResolutionCommandDataListener listener)
synchronized public void removeColorResolutionCommandDataListener(ColorResolutionCommandDataListener listener)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.DestinationImage">
      <summary>
            Gets the resulting image.
            </summary>
      <value>The resulting <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>If the value of the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.Mode" /> property is set to
            <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandMode">ColorResolutionCommandMode.CreateDestinationImage</see>, then this property
            will contain the resulting converted image.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getDestinationImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.Mode">
      <summary>
            Gets or sets the behavior of the command.
            </summary>
      <value>
        <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandMode" /> enumeration value that control the behavior of the command.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> can convert an image in place, can create a new image for the conversion or can be used to
            get the converted data only.  The <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.Mode" /> property controls what happens when the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method is executed.</para>
        <para>For more information, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandMode" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTColorResolutionCommandMode mode;</pre>
      </objectivec>
      <java>
        <pre>
public ColorResolutionCommandMode getMode()
public void setMode(ColorResolutionCommandMode value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.BitsPerPixel">
      <summary>
            Gets or sets the number of bits per pixel for the conversion.
            </summary>
      <value>The number of bits per pixel for the conversion. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48 and 64.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsPerPixel()
public void setBitsPerPixel(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.Order">
      <summary>
            Gets or sets the desired color order for the conversion.
            </summary>
      <value>The desired color order for the conversion.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterByteOrder order;</pre>
      </objectivec>
      <java>
        <pre>
public RasterByteOrder getOrder()
public void setOrder(RasterByteOrder value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.DitheringMethod">
      <summary>
            Gets or sets the dithering options used when converted the image.
            </summary>
      <value>The dithering option used when converted the image.</value>
      <remarks>
            The dithering method is useful only when the resulting image requires a palette (when it is 8 bits per pixel or less).
            </remarks>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">Codecs.CodecsThumbnailOptions.DitheringMethod property</seealso>
      <seealso cref="T:Leadtools.RasterDitheringMethod">RasterDitheringMethod enumeration</seealso>
      <seealso cref="P:Leadtools.RasterDefaults.DitheringMethod">RasterDefaults.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod property</seealso>
      <seealso cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)">RasterImage.DitherLine method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)">RasterImage.StartDithering method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StopDithering">RasterImage.StopDithering method</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterDitheringMethod ditheringMethod;</pre>
      </objectivec>
      <java>
        <pre>
public RasterDitheringMethod getDitheringMethod()
public void setDitheringMethod(RasterDitheringMethod value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags">
      <summary>
            Gets or sets the Palette options used when converted the image.
            </summary>
      <value>The palette options used when converted the image.</value>
      <remarks>
        <para>The palette options are useful only when the resulting image requires a palette (when it is 8 bits per pixel or less).</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.IntroductionPaletteHandling">Introduction: Palette Handling</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTColorResolutionCommandPaletteFlags paletteFlags;</pre>
      </objectivec>
      <java>
        <pre>
public int getPaletteFlags()
public void setPaletteFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.Colors">
      <summary>
            Gets or sets the number of colors to use in the palette
            </summary>
      <value>
            An integer value that indicates the number of colors to use in the palette.
            </value>
      <remarks>
        <para>If you specify a palette in the <see cref="M:Leadtools.ImageProcessing.ColorResolutionCommand.SetPalette(Leadtools.RasterColor[])" /> method, pass the number of entries in your palette (including reserved entries). The value of the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.Colors" /> property is not used.</para>
        <para>If you pass nullptr to the <see cref="M:Leadtools.ImageProcessing.ColorResolutionCommand.SetPalette(Leadtools.RasterColor[])" /> method or leave it uninitialized and you specify <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.Optimized</see>
            in the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags" /> property, you can use the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.Colors" /> property to limit the number of colors that the command maps in the optimized palette.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int colors;</pre>
      </objectivec>
      <java>
        <pre>
public int getColors()
public void setColors(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommand.InitAlpha">
      <summary>
            Indicates whether to initialize the alpha channel values when converting to 32 or 64-bit images.
            </summary>
      <value>
        <strong>true</strong> to initialize the alpha channel values to all 1's (0xFF for 32-bit and OxFFFF for 64-bit) when conversting to 32 or
            64-bit images, or <strong>false</strong> to leave the alpha channel values uninitialized to all 0's. Default value is <strong>true</strong>.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL initAlpha;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getInitAlpha()
public void setInitAlpha(boolean value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">
      <summary>
            Palette options, for the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags">ColorResolutionCommand.PaletteFlags</see> property.
            </summary>
      <remarks>
        <para>The palette options are useful only when the resulting image requires a palette (when it is 8 bits per pixel or less).</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.IntroductionPaletteHandling">Introduction: Palette Handling</see>.</para>
      </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.None">
      <summary>
            (0)Default.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.Fixed">
      <summary>
            (1)Use the LEAD Fixed palette.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.Optimized">
      <summary>
            (2)Create an optimized palette, or if you supply a palette in <see cref="M:Leadtools.ImageProcessing.ColorResolutionCommand.SetPalette(Leadtools.RasterColor[])">ColorResolutionCommand.SetPalette</see>, supply optimized
            colors for specified entries in the palette.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.Identity">
      <summary>
            (8)Insert the Windows system palette.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.UsePalette">
      <summary>
            (16)Use the palette specified in <see cref="M:Leadtools.ImageProcessing.ColorResolutionCommand.SetPalette(Leadtools.RasterColor[])">ColorResolutionCommand.SetPalette</see>, without supplying optimized colors.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.FastMatch">
      <summary>
            (32)Use a predefined table to speed conversion using your own palette. Refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.Netscape">
      <summary>
            (64)Use the fixed palette that is employed by Netscape Navigator and by Microsoft Internet Explorer.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.SlowMatch">
      <summary>
            (512)Use with <strong>Optimized</strong> to use a slower but more accurate matching process.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags.FavorPureColors">
      <summary>
            (1024)Give colors that occur frequently in the image palette entries of their own in the optimized palette.
            </summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs">
      <summary>
            Provides data for the <see cref="E:Leadtools.ImageProcessing.ColorResolutionCommand.Data">ColorResolutionCommand.Data</see> event.
            </summary>
      <noremarks />
      <example>
            This example will convert an image from 24 to 1 bits/pixel saving the data into an external image manually
            <!--ColorResolutionCommandDataEventArgs--></example>
      <objectivec>
        <pre>@interface LTColorResolutionCommandDataEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class ColorResolutionCommandDataEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.Image">
      <summary>
            Gets the source image being converted.
            </summary>
      <value>The source <see cref="T:Leadtools.RasterImage" />being converted.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.Lines">
      <summary>
            Gets the number of lines in the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.Data" /> or <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.DataArray" />buffers.
            </summary>
      <value>
            The number of lines in the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.Data" /> or <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.DataArray" />buffers.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int lines;</pre>
      </objectivec>
      <java>
        <pre>public int getLines()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.Data">
      <summary>
            Gets the unmanaged buffer containing one or more lines of output image data that the command has already converted.
            </summary>
      <value>
            The buffer containing one or more lines of output image data that the command has already converted.
            </value>
      <remarks>
        <para>This property returns the data in an unmanaged buffer.  You can use the <see cref="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">Marshal.Copy</see> method to copy this
            data to a managed buffer.</para>
        <para>To get the data in a managed array, use the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.DataArray" /> property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned char* data;</pre>
      </objectivec>
      <java>
        <pre>public byte[] getData()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.DataArray">
      <summary>
            Gets the managed buffer containing one or more lines of output image data that the command has already converted.
            </summary>
      <value>
            The buffer containing one or more lines of output image data that the command has already converted.
            </value>
      <remarks>
        <para>This property returns the data in a managed buffer. To get the data in an unmanaged buffer, use the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.Data" /> property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs" /></example>
      <java>
        <pre>public byte[] getDataArray()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs.Cancel">
      <summary>
            Gets or sets a value indicating whether to abort the color resolution command.
            </summary>
      <value>true to abort the color resolution command, false to continue.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandDataEventArgs" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL cancel;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getCancel()
public void setCancel(boolean value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.CombineFastCommandFlags">
      <summary>
            Flags for the <see cref="P:Leadtools.ImageProcessing.CombineFastCommand.Flags">CombineFastCommand.Flags</see>.
            </summary>
      <remarks>
        <para>These flags are divided into four groupings: source (SRC) flags, destination
                (DST) flags, operation (OP) flags, and resulting image (RES) flags. The flags apply
                only to the defined rectangles (not necessarily the whole image). The flags are
                applied in the following order:</para>
        <list type="number">
          <item>Operations on the source and destination rectangles are applied. These
                    are implemented at the same time.</item>
          <item>Combining operations are performed.</item>
          <item>Operations on the resulting rectangle are applied.</item>
        </list>
        <para>
                    You can use a bitwise OR (|) to specify one flag from each group. 
                    <list type="table"><item><term><b>Group</b></term><description><b>Flags</b></description></item><item><term>Flags that define treatment of the source rectangle</term><description>None, SourceNot, Source0, Source1</description></item><item><term>Flags that define treatment of the destination rectangle</term><description>DestinationNot, Destination0, Destination1</description></item><item><term>Flags that define the operation to use when combining the
                            data</term><description>OperationOr, OperationXor, OperationAdd,
                            OperationSubtractSource, OperationSubtractDestination,
                            OperationMultiply, OperationDivideSource, OperationDivideDestination,
                            OperationAverage, OperationMinimum, OperationMaximum</description></item><item><term>Flags that define treatment of the resulting image
                            rectangle</term><description>ResultNot, Result0, Result1, SourceCopy</description></item></list></para>
        <para>
                    For more options use <see cref="T:Leadtools.ImageProcessing.Effects.CombineCommand" />.
                </para>
      </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.None">
      <summary>
            (0)No change.
            Part of the group of flags that define treatment of the source rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.SourceNot">
      <summary>
            (1)Invert the color, resulting in its complement.
            Part of the group of flags that define treatment of the source rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.Source0">
      <summary>
            (2)Change all bits to 0.
            Part of the group of flags that define treatment of the source rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.Source1">
      <summary>
            (3)Change all bits to 1.
            Part of the group of flags that define treatment of the source rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.DestinationNot">
      <summary>
            (16)Invert the color, resulting in its complement.
            Part of the group of flags that define treatment of the destination rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.Destination0">
      <summary>
            (32)Change all bits to 0.
            Part of the group of flags that define treatment of the destination rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.Destination1">
      <summary>
            (48)Change all bits to 1.
            Part of the group of flags that define treatment of the destination rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationOr">
      <summary>
            (256)Combine each set of bytes using a bitwise OR ( | ).
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationXor">
      <summary>
            (512)Combine each set of bytes using a bitwise exclusive OR (^).
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationAdd">
      <summary>
            (768)Add the byte values, allowing a maximum of 255.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationSubtractSource">
      <summary>
            (1024)Subtract the source from the destination, allowing a minimum of 0.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationSubtractDestination">
      <summary>
            (1280)Subtract the destination from the source, allowing a minimum of 0.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationMultiply">
      <summary>
            (1536)Multiply the byte values, allowing a maximum of 255. The result is calculated as follows: <c>result = (source * dest) / 255</c>.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationDivideSource">
      <summary>
            (1792)Divide the destination by the source. If source &gt; 0, then the result is calculated as follows: <c>result = min( (dest / source) * 255, 255 )</c>. Otherwise, if <c>source = 0</c>, then <c>result = 255</c>.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationDivideDestination">
      <summary>
            (2048)Divide the source by the destination. If dest &gt; 0, then the result is calculated as follows: <c>result = min( (source / dest) * 255, 255 )</c>.
            Otherwise, if <c>dest = 0</c>, then <c>result = 255</c>.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationAverage">
      <summary>
            (2304)Use the average of the two values.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationMinimum">
      <summary>
            (2560)Use the lesser of the two values.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.OperationMaximum">
      <summary>
            (2816)Use the greater of the two values.
            Part of the group of flags that define the operation to use when combining the data.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.ResultNot">
      <summary>
            (4096)Invert the color, resulting in its complement.
            Part of the group of flags that define treatment of the resulting image rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.Result0">
      <summary>
            (8192)Change all bits to 0.
            Part of the group of flags that define treatment of the resulting image rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.Result1">
      <summary>
            (12288)Change all bits to 1.
            Part of the group of flags that define treatment of the resulting image rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineFastCommandFlags.SourceCopy">
      <summary>
            (32 | 256)Copies the source image to the destination image.
            </summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.CombineFastCommand">
      <summary>
            Combines image data from two images (source and destination), letting you specify
            the areas to be combined and the operations to be performed when combining the
            data.
            </summary>
      <keywords>Combining images|Color planes</keywords>
      <remarks>
        <para>
                    As an example, suppose you use <see cref="T:Leadtools.ImageProcessing.Effects.SpatialFilterCommand" /> class to
                    apply an edge detection filter. You can then use this class to combine the
                    resulting image with the original one to produce an image with hard edges.
                </para>
        <para>
                    The CombineFastCommand class works by combining the image in the
                    <see cref="P:Leadtools.ImageProcessing.CombineFastCommand.DestinationImage" /> property with the image passed to the
                    <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method. The
                    <see cref="P:Leadtools.ImageProcessing.CombineFastCommand.DestinationImage" /> will then hold the result of the combine
                    operation.
                </para>
        <para>The CombineFastCommand flags are divided into four groupings: source (SRC)
                flags, destination (DST) flags, operation (OP) flags, and resulting image (RES)
                flags. The flags apply only to the defined rectangles (not necessarily the whole
                image). The flags are applied in the following order:</para>
        <list type="number">
          <item>Operations on the source and destination rectangles are applied. These
                    are implemented at the same time.</item>
          <item>Combining operations are performed.</item>
          <item>Operations on the resulting rectangle are applied.</item>
        </list>
        <para>
                    You can use a bitwise OR (|) to specify one flag from each group. 
                    <list type="table"><item><term><b>Group</b></term><description><b>Flags</b></description></item><item><term>Flags that define treatment of the source rectangle</term><description>None, SourceNot, Source0, Source1</description></item><item><term>Flags that define treatment of the destination rectangle</term><description>DestinationNot, Destination0, Destination1</description></item><item><term>Flags that define the operation to use when combining the
                            data</term><description>OperationOr, OperationXor, OperationAdd,
                            OperationSubtractSource, OperationSubtractDestination,
                            OperationMultiply, OperationDivideSource, OperationDivideDestination,
                            OperationAverage, OperationMinimum, OperationMaximum</description></item><item><term>Flags that define treatment of the resulting image
                            rectangle</term><description>ResultNot, Result0, Result1, SourceCopy</description></item></list></para>
        <para>Certain flags when combined have no meaning:</para>
        <list type="bullet">
          <item>Setting the flag (RES flags) to either CB_RES_0 or CB_RES_1 will render
                    the rest of the flags useless.</item>
          <item>Setting the SRC and DST flags to CB_SRC_0 and CB_DST_0 respectively, then
                    the OP flags (the operation flags) will be useless.</item>
          <item>Setting the SRC and DST flags to CB_SRC_1 and CB_DST_1 respectively, then
                    the OP flags (the operation flags) will be useless.</item>
          <item>Setting the flag (OP Flags) to CB_OP_ADD or CB_OP_OR or CB_OP_MAX, while
                    setting the (SRC flags) to CB_SRC_1 will make the (DST flags) useless.</item>
          <item>Setting the flag (OP Flags) to CB_OP_ADD or CB_OP_OR or CB_OP_MAX, while
                    setting the (DST flags) to CB_SRC_1 will make the (SRC flags) useless.</item>
          <item>Setting the flag (OP Flags) to CB_OP_AND or CB_OP_SUBDST or CB_OP_MIN,
                    while setting the (SRC flags) to CB_SRC_0 will make the (DST flags)
                    useless.</item>
          <item>Setting the flag (OP Flags) to CB_OP_AND or CB_OP_SUBSRC or CB_OP_MIN,
                    while setting the (DST flags) to CB_SRC_0 will make the (SRC flags)
                    useless.</item>
        </list>
        <para>
                    For more options, like specifying the color plane, use
                    <see cref="T:Leadtools.ImageProcessing.Effects.CombineCommand" />.
                </para>
        <para>
                    For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Processing an
                    Image</see>.
                </para>
      </remarks>
      <example>
            The following example loads two images and combines them using an "AND"
            operation.
            <!--CombineFastCommand--></example>
      <objectivec>
        <pre>@interface LTCombineFastCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class CombineFastCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineFastCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /> class with default parameters.
            </summary>
      <remarks>
        <para>Default values are as follows:</para>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <para>
            <span lang="EN">Flags: SourceCopy</span>
          </para>
          <para>
            <span lang="EN">SourcePoint: {X=0,Y=0}</span>
          </para>
          <para>
            <span lang="EN">DestinationRectangle:
                    {X=0,Y=0,Width=0,Height=0}</span>
          </para>
          <para>
            <span lang="EN">DestinationImage: null</span>
          </para>
          <para>
            <span lang="EN">HasProgress: False</span>
          </para>
        </blockquote>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /></example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public CombineFastCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineFastCommand.#ctor(Leadtools.RasterImage,Leadtools.LeadRect,Leadtools.LeadPoint,Leadtools.ImageProcessing.CombineFastCommandFlags)">
      <summary>
             Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /> class with explicit parameters.
             </summary>
      <remarks>
        <paramref name="destinationImage" /> will hold the result of combining this image with the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.
             </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /></example>
      <param name="destinationImage">The destination image for the command.</param>
      <param name="destinationRectangle">The rectangle for the destination image.</param>
      <param name="sourcePoint">The origin point for the source rectangle.</param>
      <param name="flags">Flags which control the combine command.</param>
      <objectivec>
        <pre>
- (id)initWithDestinationImage:(LTRasterImage*)destinationImage
          destinationRectangle:(LeadRect)destinationRectangle
                   sourcePoint:(LeadPoint)sourcePoint
                         flags:(LTCombineFastCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public CombineFastCommand(
  RasterImage destinationImage, 
  LeadRect destinationRectangle, 
  LeadPoint sourcePoint, 
  int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineFastCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineFastCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineFastCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.CombineFastCommand.DestinationImage">
      <summary>Gets or sets the destination image.</summary>
      <value>The destination <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /> works by combining the image in the <see cref="P:Leadtools.ImageProcessing.CombineFastCommand.DestinationImage" /> property with the image passed to the
            <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.  The <see cref="P:Leadtools.ImageProcessing.CombineFastCommand.DestinationImage" /> will then the result of the combine operation..</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>
public final RasterImage getDestinationImage()
public final void setDestinationImage(RasterImage value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CombineFastCommand.DestinationRectangle">
      <summary>
            Gets or sets the rectangle in the destination image.
            </summary>
      <value>The rectangle in the destination image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect destinationRectangle;</pre>
      </objectivec>
      <java>
        <pre>
public final LeadRect getDestinationRectangle()
public final void setDestinationRectangle(LeadRect value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CombineFastCommand.SourcePoint">
      <summary>
            Gets or sets the origin of the source rectangle.
            </summary>
      <value>The origin of the source rectangle.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadPoint sourcePoint;</pre>
      </objectivec>
      <java>
        <pre>
public final LeadPoint getSourcePoint()
public final void setSourcePoint(LeadPoint value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CombineFastCommand.Flags">
      <summary>
            Gets or sets the flags which control the combine command.
            </summary>
      <value>The flags which control the combine command.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCombineFastCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public final int getFlags()            public final void setFlags(int value)</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.CombineWarpCommandFlags">
      <summary>
            Flags for the <see cref="P:Leadtools.ImageProcessing.CombineWarpCommand.Flags">CombineWarpCommand.Flags</see> property.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.None">
      <summary>
            (0)Default (No interpolation).
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Bilinear">
      <summary>
            (1)Bilinear interpolation. This value is only valid if the bits per pixel of the image is 1-bit, 
            8-bit grayscale, 12-bit without a lookup table, 16-bit without a lookup table, 24, 32, 48, or 64.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved1">
      <summary>
            (2)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved2">
      <summary>
            (4)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved3">
      <summary>
            (8)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved4">
      <summary>
            (16)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved5">
      <summary>
            (32)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved6">
      <summary>
            (64)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved7">
      <summary>
            (128)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved8">
      <summary>
            (256)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.CombineWarpCommandFlags.Reserved9">
      <summary>
            (512)Reserved.
            </summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.CombineWarpCommand">
      <summary>
            Combines image data from the source image (the slave) and the destination image (the master), using a perspective warp.
            </summary>
      <keywords>Combining images|Warping</keywords>
      <remarks>
        <para>You can warp the entire source image, or a portion of the source image. To warp a portion of the source 
            image, set <see cref="P:Leadtools.ImageProcessing.CombineWarpCommand.SourceRectangle" /> accordingly. To warp the entire source image, set the following:</para>
        <para>
          <code>
            CombineWarp.Command.SourceRectangle = new LeadRect(0, 0, RasterImage.Width, RasterImage.Height);
            </code>
        </para>
        <para>The warp area in the destination image is specified in <see cref="M:Leadtools.ImageProcessing.CombineWarpCommand.SetDestinationPoints(Leadtools.LeadPoint[])" />.
            The polygon specified in <see cref="M:Leadtools.ImageProcessing.CombineWarpCommand.SetDestinationPoints(Leadtools.LeadPoint[])" /> must:</para>
        <para>
          <list>
            <item>
              <description>Be concave</description>
            </item>
            <item>
              <description>Fit entirely on the destination bitmap</description>
            </item>
          </list>
        </para>
        <para>If either of these conditions is false, this class will throw an exception.</para>
        <para>The ordering of the points in <see cref="M:Leadtools.ImageProcessing.CombineWarpCommand.SetDestinationPoints(Leadtools.LeadPoint[])" /> can affect the resulting warp. For example, if the 
            source image is the following:</para>
        <para>
          <img src="WarpEx1.gif" title="Warp" />
        </para>
        <para>then ordering the points in <see cref="M:Leadtools.ImageProcessing.CombineWarpCommand.SetDestinationPoints(Leadtools.LeadPoint[])" /> as shown below results in the following warp:</para>
        <para>
          <img src="WarpEx2.gif" title="Warp" />
        </para>
        <para>while ordering the points in <see cref="M:Leadtools.ImageProcessing.CombineWarpCommand.SetDestinationPoints(Leadtools.LeadPoint[])" /> as shown below, results in the following warp:</para>
        <para>
          <img src="WarpEx3.gif" title="Warp" />
        </para>
        <para>The <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" /> works by combining the image in the <see cref="P:Leadtools.ImageProcessing.CombineWarpCommand.DestinationImage" /> property with the image
            passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.  The <see cref="P:Leadtools.ImageProcessing.CombineWarpCommand.DestinationImage" /> will then hold the result of the combine operation..</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>This command does not support signed data images.</para>
      </remarks>
      <example>
            This example will warp combines two images.
            <!--CombineWarpCommand--></example>
      <objectivec>
        <pre>@interface LTCombineWarpCommand : LTRasterCommand</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineWarpCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>CombineWarpCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineWarpCommand.#ctor(Leadtools.RasterImage,Leadtools.LeadPoint[],Leadtools.LeadRect,Leadtools.ImageProcessing.CombineWarpCommandFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CombineFastCommand" /> with explicit parameters.
            </summary>
      <param name="destinationImage">The destination image for the command.</param>
      <param name="destinationPoints">An array that contains the four points that define the warp area in the destination image.</param>
      <param name="sourceRectangle">Defines the area of the source image to be warped.</param>
      <param name="flags">Flags that indicate the type of interpolation to use, if interpolation is used.</param>
      <remarks>
        <paramref name="destinationImage" /> will hold the result of combing this image with the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" />.</example>
      <objectivec>
        <pre>
-(id)initWithDestinationImage:(LTRasterImage*)destinationImage
            destinationPoints:(LeadPoint[4])destinationPoints
              sourceRectangle:(LeadRect)sourceRectangle  
                        flags:(LTCombineWarpCommandFlags)flags;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineWarpCommand.GetDestinationPoints">
      <summary>
            Gets an array that contains the four points that define the warp area in the destination image.
            </summary>
      <returns>An array that contains the four points that define the warp area in the destination image.</returns>
      <remarks>
            Use the <see cref="M:Leadtools.ImageProcessing.CombineWarpCommand.SetDestinationPoints(Leadtools.LeadPoint[])" /> method to set the array of points.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" />.</example>
      <objectivec>
        <pre>-(LeadPoint*) getDestinationPoints;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineWarpCommand.SetDestinationPoints(Leadtools.LeadPoint[])">
      <summary>
            Sets an array that contains the four points that define the warp area in the destination image.
            </summary>
      <param name="value">An array that contains the four points that define the warp area in the destination image.</param>
      <remarks>Use the <see cref="M:Leadtools.ImageProcessing.CombineWarpCommand.GetDestinationPoints" /> method to get the array of points.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" />.</example>
      <objectivec>
        <pre>-(void)setDestinationPoints:(LeadPoint[4])value;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineWarpCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineWarpCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.CombineWarpCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.CombineWarpCommand.DestinationImage">
      <summary>
            Gets or sets the destination image
            </summary>
      <value>The destination <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" /> works by combining the image in the <see cref="P:Leadtools.ImageProcessing.CombineWarpCommand.DestinationImage" /> property with
            the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.  The <see cref="P:Leadtools.ImageProcessing.CombineWarpCommand.DestinationImage" /> will then the result of the combine operation..</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* destinationImage;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.CombineWarpCommand.SourceRectangle">
      <summary>
            Gets or sets the area of the source image to be warped.
            </summary>
      <value>A <see cref="T:Leadtools.LeadRect" /> which defines the area of the source image to be warped.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect sourceRectangle;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.ImageProcessing.CombineWarpCommand.Flags">
      <summary>
            Gets or sets the flags that indicate the type of interpolation to use, if interpolation is used.
            </summary>
      <value>Flags that indicate the type of interpolation to use, if interpolation is used.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CombineWarpCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCombineWarpCommandFlags flags;</pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand">
      <summary>
            Converts a 1-, 4-, 8-, 16-, 24-, or 32-bit <see cref="T:Leadtools.RasterImage" /> to an 8-bit, 12-bit, or 16-bit grayscale image.
            </summary>
      <keywords>Grayscale images|Lookup tables|LUTs|RGB</keywords>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" /> command works by creating a new image in the <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.DestinationImage" />
            property from the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.</para>
        <para>The destination image will have either 8, 12, or 16 bits/pixel grayscale values.</para>
        <para>When converting to 12-bit or 16-bit grayscale, a Lookup table (LUT) is not used. When converting to 8-bit grayscale, a
            LUT is used to get the RGB for each input pixel. The grayscale value corresponding to that RGB triple is used in the
            destination image</para>
        <para>
          <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.LowBit" /> and <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.HighBit" /> are used when
            converting to 12-bit or 16-bit grayscale, So the appropriate values must set before calling the
            <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.</para>
        <para>This command does not support 32-bit grayscale images.</para>
        <para>This command does not support signed images.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</seealso>
      <example>
            This example loads an image and changes it to 16-bit grayscale.
            <!--CreateGrayscaleImageCommand--></example>
      <seealso cref="T:Leadtools.Drawing.RasterPaintCallbacks" />
      <seealso cref="T:Leadtools.Topics.ImplementingCustomPaint">Implementing custom paint</seealso>
      <objectivec>
        <pre>@interface LTCreateGrayScaleImageCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class CreateGrayscaleImageCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public CreateGrayscaleImageCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" /> class with explicit parameters.
            </summary>
      <param name="bitsPerPixel">Value that indicates the number of bits for the destination image. Valid values are 8, 12, or 16.</param>
      <param name="lowBit">Value that indicates the low bit used for window leveling when the <paramref name="bitsPerPixel" />
            is 12 or 16.</param>
      <param name="highBit">Value that indicates the high bit used for window leveling when the <paramref name="bitsPerPixel" />
            is 12 or 16.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithBitsPerPixel:(unsigned int)bitsPerPixel lowBit:(int)lowBit highBit:(int)highBit;</pre>
      </objectivec>
      <java>
        <pre>public CreateGrayscaleImageCommand(int bitsPerPixel, int lowBit, int highBit)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.BitsPerPixel">
      <summary>
            Gets or sets the number of bits for the destination image.
            </summary>
      <value>The number of bits for the destination image. Valid values are 8, 12, or 16.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsPerPixel()
public void setBitsPerPixel(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.LowBit">
      <summary>
            Gets or sets the low bit used for window leveling when the <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.BitsPerPixel" /> is 12 or 16.
            </summary>
      <value>The low bit used for window leveling when the <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.BitsPerPixel" /> is 12 or 16.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int lowBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getLowBit()
public void setLowBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.HighBit">
      <summary>
            Gets or sets the high bit used for window leveling when the <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.BitsPerPixel" /> is 12 or 16.
            </summary>
      <value>The high bit used for window leveling when the <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.BitsPerPixel" /> is 12 or 16.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int highBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getHighBit()
public void setHighBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.DestinationImage">
      <summary>
            Gets the resulting image.
            </summary>
      <value>The resulting <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" /> command works by creating a new image in the <see cref="P:Leadtools.ImageProcessing.CreateGrayscaleImageCommand.DestinationImage" /> property from
            the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CreateGrayscaleImageCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getDestinationImage()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.CopyDataCommand">
      <summary>
            Copies image data from one image to another.
            </summary>
      <keywords>Combining images|Copying</keywords>
      <remarks>
        <para>The destination image must accurately identify the copied data. Therefore, the following properties must specify the same values for 
            both the source and destination images:</para>
        <para>
          <list>
            <item>
              <description>
                <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.RasterImage.Width">RasterImage.Width</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.RasterImage.Height">RasterImage.Height</see>
              </description>
            </item>
          </list>
        </para>
        <para>The <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" /> works by copying the image data from the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method to the image
            passed in the <see cref="P:Leadtools.ImageProcessing.CopyDataCommand.DestinationImage" /> property.</para>
      </remarks>
      <example>
            This example will use the CopyDataCommand to copy the image data from a source image to an existing image
            <!--CopyDataCommand--></example>
      <objectivec>
        <pre>@interface LTCopyDataCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class CopyDataCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyDataCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" /> with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public CopyDataCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyDataCommand.#ctor(Leadtools.RasterImage)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" /> with explicit parameters.
            </summary>
      <param name="destinationImage">The destination image for the copy.</param>
      <remarks>
        <paramref name="destinationImage" /> will hold the result of copying the image data from the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithDestinationImage:(LTRasterImage*)destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public CopyDataCommand(RasterImage destinationImage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyDataCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyDataCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyDataCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.CopyDataCommand.DestinationImage">
      <summary>
            Gets or sets the destination image
            </summary>
      <value>The destination <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The source image data (the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method) will be copied into this image.</para>
        <para>The destination image must accurately identify the copied data. Therefore, the following properties must specify the same values for 
            both the source and destination images:</para>
        <para>
          <list>
            <item>
              <description>
                <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.RasterImage.Width">RasterImage.Width</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.RasterImage.Height">RasterImage.Height</see>
              </description>
            </item>
          </list>
        </para>
        <para>The <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" /> works by copying the image data from the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method to the image
            passed in the <see cref="P:Leadtools.ImageProcessing.CopyDataCommand.DestinationImage" /> property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getDestinationImage()
public void setDestinationImage(RasterImage value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.CopyRectangleCommand">
      <summary>
            Copies a portion of an image to create another image that is the size of the rectangle that you specify.
            </summary>
      <keywords>Copying images|Palettes|Image coordinates|View perspective</keywords>
      <remarks>
        <para>This command duplicates the original image palette, if one is required in the new image.</para>
        <para>This command uses image coordinates to specify the area to be copied. Therefore, you must account for the 
            <see cref="P:Leadtools.RasterImage.ViewPerspective">RasterImage.ViewPerspective</see> of the image. For information about image coordinates, 
            refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>If a region is defined for the source image, the region is also copied, and the region is clipped if necessary.</para>
        <para>The <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" /> command works by creating a new image in the <see cref="P:Leadtools.ImageProcessing.CopyRectangleCommand.DestinationImage" /> property from
            the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.</para>
      </remarks>
      <example>
            This example will create a new image from the top left portion of an existing image.
            <!--CopyRectangleCommand--></example>
      <objectivec>
        <pre>@interface LTCopyRectangleCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class CopyRectangleCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyRectangleCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public CopyRectangleCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyRectangleCommand.#ctor(Leadtools.LeadRect,Leadtools.RasterMemoryFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" /> class with explicit parameters.
            </summary>
      <param name="rc">The rectangle to copy (in pixels).</param>
      <param name="createFlags">Flags that control memory allocation for the destination image.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithRectangle:(LeadRect)rect andFlags:(LTRasterMemoryFlags)createFlags;</pre>
      </objectivec>
      <java>
        <pre>public CopyRectangleCommand(LeadRect rc, int createFlags)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyRectangleCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyRectangleCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.CopyRectangleCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.CopyRectangleCommand.DestinationImage">
      <summary>
            Gets the resulting image.
            </summary>
      <value>The resulting <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" /> command works by creating a new image in the <see cref="P:Leadtools.ImageProcessing.CopyRectangleCommand.DestinationImage" /> property from
            the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getDestinationImage()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CopyRectangleCommand.Rectangle">
      <summary>
            Gets or sets the rectangle area to copy (in pixels).
            </summary>
      <value>The rectangle area to copy (in pixels).</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect rectangle;</pre>
      </objectivec>
      <java>
        <pre>
public LeadRect getRectangle()
public void setRectangle(LeadRect value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.CopyRectangleCommand.CreateFlags">
      <summary>
            Gets or sets the flags that control memory allocation for the destination image.
            </summary>
      <value>Flags that control memory allocation for the destination image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyRectangleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterMemoryFlags createFlags;</pre>
      </objectivec>
      <java>
        <pre>
public int getCreateFlags()
public void setCreateFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.CropCommand">
      <summary>
            Crops the image, resulting in an image that is the size of the specified rectangle.
            </summary>
      <keywords>Trim|Crop|Cropping</keywords>
      <remarks>
        <para>If a region is defined for the image, the region is also cropped if necessary.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example trims 100 pixels off of each side of an image.
            <!--CropCommand--></example>
      <objectivec>
        <pre>@interface LTCropCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class CropCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CropCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CropCommand" /> class with default parameters.
            </summary>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CropCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public CropCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CropCommand.#ctor(Leadtools.LeadRect)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" /> class with explicit parameters.
            </summary>
      <param name="rc">The rectangle area to which the image will be cropped.</param>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CropCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithRectangle:(LeadRect)rectangle;</pre>
      </objectivec>
      <java>
        <pre>public CropCommand(LeadRect rc)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.CropCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.CropCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.CropCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.CropCommand.Rectangle">
      <summary>
            Gets or sets the rectangle area to which the image will be cropped.
            </summary>
      <value>The rectangle area to which the image will be cropped.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CropCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect rectangle;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getRectangle()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.DetectAlphaCommand">
      <summary>
            Determines if the image has meaningful alpha channel values.
            </summary>
      <keywords>Alpha Channel</keywords>
      <noremarks />
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <noexample />
      <objectivec>
        <pre>@interface LTDetectAlphaCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class DetectAlphaCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.DetectAlphaCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.DetectAlphaCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public DetectAlphaCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.DetectAlphaCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.DetectAlphaCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.DetectAlphaCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.DetectAlphaCommand.HasMeaningfulAlpha">
      <summary>
            Specifies whether or not the image contains meaningful alpha channel values.
            </summary>
      <value>true if at least one alpha channel value is not equal to 0xFF, false if all alpha channel values are equal to 0xFF.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasMeaningfulAlpha;</pre>
      </objectivec>
      <java>
        <pre>public boolean hasMeaningfulAlpha()</pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.FillCommand">
      <summary>
            Fills the specified image with the specified color.
            </summary>
      <keywords>Filling|Fills|Colors</keywords>
      <remarks>
        <para>This command supports signed/unsigned data images.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example will load an image then fill it with blue color
            <!--FillCommand--></example>
      <objectivec>
        <pre>@interface LTFillCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class FillCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.FillCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.FillCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.FillCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public FillCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.FillCommand.#ctor(Leadtools.RasterColor)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.FillCommand" /> class with explicit parameters.
            </summary>
      <param name="color">The fill color.</param>
      <remarks>
        <para>The FillCommand function can use the Extended Grayscale mask. 
            For more information, refer to 
            <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a></para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.FillCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithColor:(LTRasterColor*)color;</pre>
      </objectivec>
      <java>
        <pre>public FillCommand(RasterColor color)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.FillCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.FillCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.FillCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.FillCommand.Color">
      <summary>
            Gets or sets the fill color.
            </summary>
      <value>The fill color.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.FillCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* color;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getColor()
public void setColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.GrayscaleCommand">
      <summary>
            Converts a 1-, 4-, 8-, 16-, 24-, or 32-bit image to an 8-bit, 12-bit, or 16-bit grayscale image.
            </summary>
      <keywords>Converting|Grayscale images|Lookup tables|LUTs|RGB</keywords>
      <remarks>
        <para>Support for 12 and 16-bit grayscale images is available only in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>The resulting image can be an 8-bit, 12-bit, or 16-bit grayscale image. Once the function is complete, the 
            <see cref="P:Leadtools.RasterImage.GrayscaleMode">RasterImage.GrayscaleMode</see> property will indicate the type of grayscale image.</para>
        <para>When converting to 12-bit or 16-bit grayscale, the <see cref="M:Leadtools.RasterImage.GetLookupTable">RasterImage.GetLookupTable</see> is not used.
            When converting to 8-bit grayscale, the <see cref="M:Leadtools.RasterImage.GetLookupTable">RasterImage.GetLookupTable</see> is used to get the RGB for each
            input pixel.  The grayscale value corresponding to that RGB triple is used in the destination image.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
            This example will load a 24-bit image then convert it to a grayscale image with 8, 12 and 16 bits/pixel
            <!--GrayscaleCommand--></example>
      <seealso cref="T:Leadtools.Drawing.RasterPaintCallbacks" />
      <seealso cref="T:Leadtools.Topics.ImplementingCustomPaint">Implementing custom paint</seealso>
      <objectivec>
        <pre>@interface LTGrayscaleCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class GrayscaleCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.GrayscaleCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public GrayscaleCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.GrayscaleCommand.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" /> class with explicit parameters.
            </summary>
      <param name="bitsPerPixel">Value indicating the number of bits in the destination image.  Valid values are 8, 12, or 16.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithBitsPerPixel:(unsigned int)bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>public GrayscaleCommand(int bitsPerPixel)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.GrayscaleCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.GrayscaleCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.GrayscaleCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.GrayscaleCommand.BitsPerPixel">
      <summary>
            Gets or sets a value indicating the number of bits in the destination image.  Valid values are 8, 12, or 16.
            </summary>
      <value>A value indicating the number of bits in the destination image.  Valid values are 8, 12, or 16.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsPerPixel()
public void setBitsPerPixel(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand">
      <summary>
            Converts the image data to or from premultiplied alpha values.
            </summary>
      <keywords>Alpha|Transparency|Premultiplied Alpha</keywords>
      <remarks>
            This command only works with images that are 32 or 64-bit bits per pixel.
            </remarks>
      <example>
            This example will load a 32-bit PNG image, and then convert the data to premultiplied alpha values.
            <!--PremultiplyAlphaValuesCommand--></example>
      <objectivec>
        <pre>@interface LTPremultiplyAlphaValuesCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class PremultiplyAlphaValuesCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public PremultiplyAlphaValuesCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand" /> class with explicit parameters.
            </summary>
      <param name="convertToPremultipliedValues">true to convert to premultiplied alpha values; false to convert from premultiplied alpha values.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithConvertToPremultipliedValues:(BOOL)convertToPremultipliedValues;</pre>
      </objectivec>
      <java>
        <pre>public PremultiplyAlphaValuesCommand(boolean convertToPremultipliedValues)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand.ConvertToPremultipliedValues">
      <summary>
            Indicates whether to convert to or from premultiplied alpha values.
            </summary>
      <value>true to convert to premultiplied alpha values; false to convert from premultiplied alpha values.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.PremultiplyAlphaValuesCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL convertToPremultipliedValues;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getConvertToPremultipliedValues()
public void setConvertToPremultipliedValues(boolean value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.ResizeCommand">
      <summary>
            Resizes the image from an existing image, and puts the resized image into a destination image, leaving the original image intact.
            </summary>
      <keywords>Resizing</keywords>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.ResizeCommand" /> command works by resizing the image data passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method into the image
            passed to the <see cref="P:Leadtools.ImageProcessing.ResizeCommand.DestinationImage" /> property.</para>
        <para>The destination image must be initialized with the correct <see cref="P:Leadtools.RasterImage.Width">RasterImage.Width</see> and
            <see cref="P:Leadtools.RasterImage.Height">RasterImage.Height</see> of the new, resized image.</para>
        <para>This command does not change the source image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method. If you want to resize an image without creating
            a new version, use the <see cref="T:Leadtools.ImageProcessing.SizeCommand" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example will load an image then resize into an existing smaller image
            <!--ResizeCommand--></example>
      <objectivec>
        <pre>@interface LTResizeCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ResizeCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ResizeCommand.#ctor">
      <summary>
            Initializes a instance of the <see cref="T:Leadtools.ImageProcessing.ResizeCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ResizeCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public ResizeCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ResizeCommand.#ctor(Leadtools.RasterImage,Leadtools.RasterSizeFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ResizeCommand" /> class with explicit parameters.
            </summary>
      <param name="destinationImage">The destination image for the resize.</param>
      <param name="flags">Flags that determine resizing options.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.ResizeCommand" /> command works by resizing the image data passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method into the image
            passed to <paramref name="destinationImage" />.</para>
        <para>The destination image must be initialized with the correct <see cref="P:Leadtools.RasterImage.Width">RasterImage.Width</see> and
            <see cref="P:Leadtools.RasterImage.Height">RasterImage.Height</see> of the new, resized image.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ResizeCommand" />.</example>
      <objectivec>
        <pre>
- (id)initWithDestinationImage:(LTRasterImage*)destinationImage 
                         flags:(LTRasterSizeFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public ResizeCommand(
  RasterImage destinationImage, 
  RasterSizeFlags flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ResizeCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.ResizeCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ResizeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.ResizeCommand.DestinationImage">
      <summary>
            Gets or sets the destination image for the resize.
            </summary>
      <value>The destination image for the resize.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.ImageProcessing.ResizeCommand" /> command works by resizing the image data passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method into the image
            passed to <see cref="P:Leadtools.ImageProcessing.ResizeCommand.DestinationImage" /> property.</para>
        <para>The destination image must be initialized with the correct <see cref="P:Leadtools.RasterImage.Width">RasterImage.Width</see> and
            <see cref="P:Leadtools.RasterImage.Height">RasterImage.Height</see> of the new, resized image.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ResizeCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* destinationImage;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getDestinationImage()
public void setDestinationImage(RasterImage value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ResizeCommand.Flags">
      <summary>
            Flags that determine resizing options.
            </summary>
      <value>Flags that determine resizing options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ResizeCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterSizeFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public RasterSizeFlags getFlags()
public void setFlags(RasterSizeFlags value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.RotateCommandFlags">
      <summary>
            Flags for the <see cref="P:Leadtools.ImageProcessing.RotateCommand.Flags">RotateCommand.Flags</see> property.
            </summary>
      <remarks>
        <para>
          <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resample</see> and <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags..Bicubic</see> can be combined
            with <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see>, but they can not be combined with each other. Therefore, you can pass
            <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resample</see> Or <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see>,
            but not <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resample</see> | <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags..Bicubic</see>.</para>
        <para>If <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see> is set, then the image is resized. Otherwise, the image is cropped.</para>
      </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.RotateCommandFlags.None">
      <summary>
            (0)Default, do not resize the image, crop it.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RotateCommandFlags.Resize">
      <summary>
            (1)Size resulting image as needed.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RotateCommandFlags.Resample">
      <summary>
             (2)Perform bilinear interpolation when rotating.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RotateCommandFlags.Bicubic">
      <summary>
            (4)Perform bicubic interpolation when rotating.
            </summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.RotateCommand">
      <summary>
            Rotates an image by the number of degrees specified.
            </summary>
      <keywords>Rotating</keywords>
      <remarks>
        <para>This command has the following features:</para>
        <list type="bullet">
          <item>
            <description>It uses the center of the image as the center of
                        rotation.</description>
          </item>
          <item>
            <description>It can rotate the image clockwise or counterclockwise up to
                        360 degrees in 100th-degree increments.</description>
          </item>
          <item>
            <description>It can resize the image to accommodate the rotated height and
                        width, or it can retain the original height and width, cropping the image
                        as necessary.</description>
          </item>
          <item>
            <description>
                            It uses <see cref="P:Leadtools.ImageProcessing.RotateCommand.FillColor" /> as the background
                            color to fill any new area created by the rotation.
                        </description>
          </item>
        </list>
        <para>
          <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resample</see> and
                    <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Bicubic</see> can be combined
                    with <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see>, but they
                    can not be combined with each other.
                </para>
        <para>
                    If <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see> is set, then
                    the image is resized. Otherwise, the image is cropped.
                </para>
        <para>
                    Interpolation can be done while rotating certain images. This produces superior
                    output, eliminating the jaggedness occurring when rotating images at angles
                    that are not multiples of 90. (ie when
                    <see cref="P:Leadtools.ImageProcessing.RotateCommand.Angle">RotateCommand.Angle</see> is not a multiple of
                    9000).
                </para>
        <para>The only images that are interpolated are:</para>
        <list type="bullet">
          <item>
            <description>
                            8-bit grayscale images (for best results, all gray values should be in
                            the image palette). If the rotation does not give the expected
                            results, you can use <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" /> with
                            <see cref="P:Leadtools.ImageProcessing.GrayscaleCommand.BitsPerPixel">GrayscaleCommand.BitsPerPixel</see>
                            = 8 to change the image into a proper grayscale image.
                        </description>
          </item>
          <item>
            <description>
                            12-bit and 16-bit grayscale images that do not have a palette.
                            Grayscale image can have a palette if they have been loaded from
                            certain DICOM images or if the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />
                            has been used. Use <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" /> with
                            <see cref="P:Leadtools.ImageProcessing.GrayscaleCommand.BitsPerPixel">GrayscaleCommand.BitsPerPixel</see>
                            = 12 or <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" /> with
                            <see cref="P:Leadtools.ImageProcessing.GrayscaleCommand.BitsPerPixel">GrayscaleCommand.BitsPerPixel</see>
                            = 16 if <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> does not seem to do any
                            interpolation during the rotation.
                        </description>
          </item>
          <item>
            <description>16-bit color images</description>
          </item>
          <item>
            <description>24-bit, 32-bit, 48-bit and 64-bit color images</description>
          </item>
        </list>
        <para>
                    For all other images, <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> ignores the resampling
                    flags and the rotate is performed without interpolation.
                </para>
        <para>
                    For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Processing an
                    Image</see>.
                </para>
      </remarks>
      <example>
            This example will load an image, rotate it by 45 degrees and then save it back to disk
            <!--RotateCommand--></example>
      <objectivec>
        <pre>@interface LTRotateCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class RotateCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.RotateCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RotateCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public RotateCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.RotateCommand.#ctor(System.Int32,Leadtools.ImageProcessing.RotateCommandFlags,Leadtools.RasterColor)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> class with explicit parameters.
            </summary>
      <param name="angle">Hundredths of degrees to rotate (+/-). This can be a number from 1 to 36,000. 
            A positive value will rotate the image in a clockwise rotation, while a negative value will rotate 
            the image in a counter-clockwise rotation.</param>
      <param name="flags">Flag to keep the resulting image the same size as the original image or to resize 
            according to the rotation direction specified.</param>
      <param name="fillColor">The background fill color.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RotateCommand" />.</example>
      <objectivec>
        <pre>
-(id)initWithAngle:(int)angle 
             flags:(LTRotateCommandFlags)flags 
         fillColor:(LTRasterColor*)fillColor;            </pre>
      </objectivec>
      <java>
        <pre>
public RotateCommand(
  int angle, 
  int flags, 
  RasterColor fillColor
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.RotateCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.RotateCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.RotateCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.RotateCommand.Angle">
      <summary>
            Gets or sets the rotation angle
            </summary>
      <value>Hundredths of degrees to rotate (+/-). This can be a number from 1 to 36,000. 
            A positive value will rotate the image in a clockwise rotation, while a negative value will rotate 
            the image in a counter-clockwise rotation.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RotateCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int angle;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngle()
public void setAngle(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.RotateCommand.Flags">
      <summary>
            Gets or sets the flag to keep the resulting image the same size as the original image or to resize 
            according to the rotation direction specified.
            </summary>
      <value>Flag to keep the resulting image the same size as the original image or to resize 
            according to the rotation direction specified.</value>
      <remarks>
        <para>
          <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resample</see> and <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags..Bicubic</see> can be combined
            with <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see>, but they can not be combined with each other. Therefore, you can pass
            <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resample</see> Or <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see>,
            but not <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resample</see> | <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags..Bicubic</see>.</para>
        <para>If <see cref="T:Leadtools.ImageProcessing.RotateCommandFlags">RotateCommandFlags.Resize</see> is set, then the image is resized. Otherwise, the image is cropped.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RotateCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRotateCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.RotateCommand.FillColor">
      <summary>
            Gets or sets the background fill color.
            </summary>
      <value>The background fill color.</value>
      <remarks>Used to fill any new area created by the rotation.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RotateCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* fillColor;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getFillColor()
public void setFillColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.ScrambleCommandFlags">
      <summary>
            Flags for the <see cref="P:Leadtools.ImageProcessing.ScrambleCommand.Flags">ScrambleCommand.Flags</see> property.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.None">
      <summary>
            (0)Default.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Encrypt">
      <summary>
            (1)Encrypts the area (the reverse of a decrypt).
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Decrypt">
      <summary>
            (2)Decrypts the area (the reverse of an encrypt).
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Intersect">
      <summary>
            (4)Restricts the encrypt/decrypt to the intersection of the area and the 'image' dimensions.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Reserved3">
      <summary>
            (8)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Reserved4">
      <summary>
            (16)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Reserved5">
      <summary>
            (32)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Reserved6">
      <summary>
            (64)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Reserved7">
      <summary>
            (128)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Reserved8">
      <summary>
            (256)Reserved.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.ScrambleCommandFlags.Reserved9">
      <summary>
            (512)Reserved.
            </summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.ScrambleCommand">
      <summary>
            Scrambles all or a portion of an image.
            </summary>
      <keywords>Scrambling|Encrypting</keywords>
      <remarks>
        <para>This command is available in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions toolkits.</para>
        <para>Scrambling a rectangular area means that the pixels in that area are shuffled around into a pseudo-random 
            location within the area.</para>
        <para>
          <list>
            <item>
              <description>No colors are introduced</description>
            </item>
            <item>
              <description>Color counts remain unchanged</description>
            </item>
          </list>
        </para>
        <para>Given the same encrypt area (defined by <see cref="P:Leadtools.ImageProcessing.ScrambleCommand.Rectangle">ScrambleCommand.Rectangle</see>) 
            and the same <see cref="P:Leadtools.ImageProcessing.ScrambleCommand.Key">ScrambleCommand.Key</see>, setting (
            <see cref="P:Leadtools.ImageProcessing.ScrambleCommand.Flags">ScrambleCommand.Flags</see> = <see cref="T:Leadtools.ImageProcessing.ScrambleCommandFlags">ScrambleCommandFlags.Encrypt</see>) 
            is the inverse of (<see cref="P:Leadtools.ImageProcessing.ScrambleCommand.Flags">ScrambleCommand.Flags</see> = <see cref="T:Leadtools.ImageProcessing.ScrambleCommandFlags">ScrambleCommandFlags.Decrypt</see>).</para>
      </remarks>
      <example>
            This example will scramble the upper-left quadrant of an image using the key 123 and then save the image to disk. 
            It will then unscramble it and saves it disk for comparison.
            <!--ScrambleCommand--></example>
      <objectivec>
        <pre>@interface LTScrambleCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ScrambleCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ScrambleCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ScrambleCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ScrambleCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public ScrambleCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ScrambleCommand.#ctor(Leadtools.LeadRect,System.Int32,Leadtools.ImageProcessing.ScrambleCommandFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ScrambleCommand" /> class with explicit parameters.
            </summary>
      <param name="rc">Rectangle which describes the area to scramble.</param>
      <param name="key">Key that determines the scramble.</param>
      <param name="flags">Flag that determines whether to encrypt or decrypt the area.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ScrambleCommand" />.</example>
      <objectivec>
        <pre>
-(id)initWithRectangle:(LeadRect)rectangle 
                   key:(unsigned int)key 
                 flags:(LTScrambleCommandFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public ScrambleCommand(
  LeadRect rc, 
  int key, 
  int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ScrambleCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.ScrambleCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ScrambleCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.ScrambleCommand.Rectangle">
      <summary>
            Gets or sets the rectangle which describes the area to scramble.
            </summary>
      <value>The rectangle which describes the area to scramble.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ScrambleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect rectangle;</pre>
      </objectivec>
      <java>
        <pre>
public LeadRect getRectangle()
public void setRectangle(LeadRect value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ScrambleCommand.Key">
      <summary>
            Gets or sets the key that determines the scramble.
            </summary>
      <value>Key that determines the scramble.</value>
      <remarks>
            This is an unsigned integer with a minimum value of 0 and a maximum value of 4294967295 (0xffffffff).
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ScrambleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int key;</pre>
      </objectivec>
      <java>
        <pre>
public int getKey()
public void setKey(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ScrambleCommand.Flags">
      <summary>
            Gets or sets the flag that determines whether to encrypt or decrypt the area.
            </summary>
      <value>Flag that determines whether to encrypt or decrypt the area.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ScrambleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTScrambleCommandFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public int getFlags()
public void setFlags(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.SetAlphaValuesCommand">
      <summary>
            Fills the image alpha values, while preserving the other image components.
            </summary>
      <keywords>Alpha|Transparency</keywords>
      <remarks>
            This command only works with images that are 32 or 64-bit bits per pixel.
            </remarks>
      <example>
            This example will load an image, convert it to 32-bit/pixel and then set the alpha values to half the maximum allowed
            <!--SetAlphaValuesCommand--></example>
      <objectivec>
        <pre>@interface LTSetAlphaValuesCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class SetAlphaValuesCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.SetAlphaValuesCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.SetAlphaValuesCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SetAlphaValuesCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public SetAlphaValuesCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.SetAlphaValuesCommand.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.SetAlphaValuesCommand" /> class with explicit parameters.
            </summary>
      <param name="alpha">Alpha value to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SetAlphaValuesCommand" />.</example>
      <objectivec>
        <pre>-(id)initWithAlpha:(unsigned int)alpha;</pre>
      </objectivec>
      <java>
        <pre>public SetAlphaValuesCommand(int alpha)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.SetAlphaValuesCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.SetAlphaValuesCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.SetAlphaValuesCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.SetAlphaValuesCommand.Alpha">
      <summary>
            Gets or sets the alpha component value.
            </summary>
      <value>The alpha component value</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SetAlphaValuesCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int alpha;</pre>
      </objectivec>
      <java>
        <pre>
public int getAlpha()
public void setAlpha(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.ShearCommand">
      <summary>
            Moves the corners of an image in the fashion of a parallelogram.
            </summary>
      <keywords>Shearing</keywords>
      <remarks>
        <para>You specify an angle of slant, horizontal or vertical shear, and the fill color for the created space. 
            The following is a horizontal example:</para>
        <para>
          <img src="Shear.gif" title="Horizontal Shear" />
        </para>
        <para>The angle is expressed in hundredths of degrees, with a limit of 4500 (45 degrees).</para>
        <para>This command supports signed/unsigned data images.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example shears the image 15 degrees vertically, filling extra space with blue.
            <!--ShearCommand--></example>
      <objectivec>
        <pre>@interface LTShearCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class ShearCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ShearCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ShearCommand" /> class with default parameters.
            </summary>
      <remarks>
        <para>This command does not support 32-bit grayscale images.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ShearCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public ShearCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ShearCommand.#ctor(System.Int32,System.Boolean,Leadtools.RasterColor)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.ShearCommand" /> class with explicit parameters.
            </summary>
      <param name="angle">The angle of slant in hundredths of degrees.</param>
      <param name="horizontal">The direction of the slant.</param>
      <param name="fillColor">The fill color.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ShearCommand" />.</example>
      <objectivec>
        <pre>
-(id)initWithAngle:(int)angle 
        horizontal:(BOOL)horizontal 
         fillColor:(LTRasterColor*)fillColor;            </pre>
      </objectivec>
      <java>
        <pre>
public ShearCommand(
  int angle, 
  boolean horizontal, 
  RasterColor fillColor
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.ShearCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.ShearCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.ShearCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.ShearCommand.Angle">
      <summary>
            Gets or sets the angle of slant.
            </summary>
      <value>The angle of slant.</value>
      <remarks>
            Positive values are for clockwise angles; negative values are for counterclockwise angles. The angle is expressed in hundredths of
            degrees, with a limit of 4500 (45 degrees).
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ShearCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int angle;</pre>
      </objectivec>
      <java>
        <pre>
public int getAngle()
public void setAngle(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ShearCommand.Horizontal">
      <summary>
            Gets or sets the direction of the slant.
            </summary>
      <value>true for horizontal shear, or false for vertical shear.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ShearCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL horizontal;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getHorizontal()
public void setHorizontal(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.ShearCommand.FillColor">
      <summary>
            Gets or sets the background fill color.
            </summary>
      <value>The background fill color.</value>
      <remarks>Used to fill any new area created by the shear.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ShearCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* fillColor;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getFillColor()
public void setFillColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.SizeCommand">
      <summary>
            Resizes an image to a new width and height.
            </summary>
      <keywords>Resizing</keywords>
      <remarks>
        <para>This command resizes the image passed to the <see cref="M:Leadtools.ImageProcessing.RasterCommand.Run(Leadtools.RasterImage)" /> method. If you want to keep the original-size image and create a new 
            resized version, use <see cref="T:Leadtools.ImageProcessing.ResizeCommand" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example will convert an image to a thumbnail size before saving it to disk.
            <!--SizeCommand--></example>
      <objectivec>
        <pre>@interface LTSizeCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class SizeCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.SizeCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.SizeCommand" /> class with default parameters.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SizeCommand" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public SizeCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.SizeCommand.#ctor(System.Int32,System.Int32,Leadtools.RasterSizeFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.SizeCommand" /> class with explicit parameters.
            </summary>
      <param name="width">New image width in pixels.</param>
      <param name="height">New image height in pixels.</param>
      <param name="flags">Flags that control the behavior when resizing the image.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SizeCommand" />.</example>
      <objectivec>
        <pre>
-(id)initWithWidth:(unsigned int)width 
            height:(unsigned int)height 
             flags:(LTRasterSizeFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public SizeCommand(
  int width, 
  int height, 
  RasterSizeFlags flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.SizeCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.SizeCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.SizeCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.SizeCommand.Width">
      <summary>
            Gets or sets the new image width in pixels.
            </summary>
      <value>New image width in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SizeCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.SizeCommand.Height">
      <summary>
            Gets or sets the new image height in pixels.
            </summary>
      <value>New image height in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SizeCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.SizeCommand.Flags">
      <summary>
            Gets or sets the flags that control the behavior when resizing the image.
            </summary>
      <value>Flags that control the behavior when resizing the image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.SizeCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterSizeFlags flags;</pre>
      </objectivec>
      <java>
        <pre>
public RasterSizeFlags getFlags()
public void setFlags(RasterSizeFlags value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.RasterCommandProcessor">
      <summary>
            Batch processes a collection of <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> object on a collection of <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <remarks>
            Use the <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" /> class to perform "batch" image processing, where one or more commands are
            executed on one or more images.
            </remarks>
      <example>
            This example will load multiple images from disk and executes multiple image processing commands on them before 
            saving the result into a single multi-page tif file.
            <!--RasterCommandProcessor--></example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommandProcessor.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" /> class with default values.
            </summary>
      <remarks>
            The new object will have empty and initializes <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands" /> and <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images" /> collections.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommandProcessor.Run">
      <summary>
            Runs the image processing commands on the images.
            </summary>
      <remarks>
            Each <see cref="T:Leadtools.RasterImage" /> object in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images" /> collection will be processed using each <see cref="T:Leadtools.ImageProcessing.RasterCommand" />
            (image processing command) in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands" /> collection.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="E:Leadtools.ImageProcessing.RasterCommandProcessor.Progress">
      <summary>
            Occurs during the processing of the image processing commands.
            </summary>
      <event>
            The event handler receives an argument of type <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs" /> containing data
            related to this event.
            </event>
      <remarks>You can use this event to get progress status, or to cancel the process.</remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands">
      <summary>
            The collection of <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> objects to be run on the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images" /> objects.
            </summary>
      <value>
            The collection of <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> objects to be run on the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images" /> objects.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images">
      <summary>
            The collection of <see cref="T:Leadtools.RasterImage" /> objects to run the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands" /> on.
            </summary>
      <value>
            The collection of <see cref="T:Leadtools.RasterImage" /> objects to run the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands" /> on.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="T:Leadtools.ImageProcessing.RasterCommandProcessorCancel">
      <summary>
            Indicates whether or not to continue with the image processing command.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterCommandProcessorCancel.None">
      <summary>
            (0)Default, continue normally.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterCommandProcessorCancel.Command">
      <summary>
            (1)Stop the current command, but continue with the next command in the collection.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterCommandProcessorCancel.Image">
      <summary>
            (2)Stop the current command, but only for the current image.  Continue with the current command on the next image in
            the collection.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterCommandProcessorCancel.All">
      <summary>
            (3)Stop the process completely, aborting all commands on all images.
            </summary>
    </member>
    <member name="T:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs">
      <summary>
            Provides data for the <see cref="E:Leadtools.ImageProcessing.RasterCommandProcessor.Progress" /> event.
            </summary>
      <remarks>
            The <see cref="E:Leadtools.ImageProcessing.RasterCommandProcessor.Progress" /> event occurs when a control is redrawn. A <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs" />
            specifies information on which image and command is being currently processed.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.#ctor(System.Int32,Leadtools.ImageProcessing.IRasterCommand,System.Int32,System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs" /> class.
            </summary>
      <param name="percent">The percentage completion of the current command.</param>
      <param name="command">The <see cref="T:Leadtools.ImageProcessing.IRasterCommand" /> object currently being executed.</param>
      <param name="commandNumber">The index of the current <b>RasterCommand</b> in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands" /> collection.</param>
      <param name="totalCommands">The total number of commands to be executed.</param>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object being processed.</param>
      <param name="imageNumber">The index of the current <b>RasterImage</b> in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images" /> collection.</param>
      <param name="totalImages">The total number of images to be processed.</param>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.Cancel">
      <summary>
            Determine how to process or cancel the current command.
            </summary>
      <value>Value which indicates whether to continue with the image processing command or to cancel it.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.Percent">
      <summary>
            Gets the percentage completion of the current command.
            </summary>
      <value>The percentage completion of the command.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.Command">
      <summary>
            Gets the <see cref="T:Leadtools.ImageProcessing.IRasterCommand" /> object currently being executed.
            </summary>
      <value>The <see cref="T:Leadtools.ImageProcessing.IRasterCommand" /> object currently being executed.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.CommandNumber">
      <summary>
            Gets the index of the current <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands" /> collection.
            </summary>
      <value>The index of the current <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Commands" /> collection.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.TotalCommands">
      <summary>
            Gets the total number of commands to be executed.
            </summary>
      <value>The total number of commands to be executed.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.Image">
      <summary>
            Gets the <see cref="T:Leadtools.RasterImage" /> object being processed.
            </summary>
      <value>The <see cref="T:Leadtools.RasterImage" /> object being processed.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.ImageNumber">
      <summary>
            Gets the index of the current <see cref="T:Leadtools.RasterImage" /> in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images" /> collection.
            </summary>
      <value>The index of the current <see cref="T:Leadtools.RasterImage" /> in the <see cref="P:Leadtools.ImageProcessing.RasterCommandProcessor.Images" /> collection.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProcessorProgressEventArgs.TotalImages">
      <summary>
            Gets the total number of images to be processed.
            </summary>
      <value>The total number of images to be processed.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommandProcessor" />.
            </example>
    </member>
    <member name="T:Leadtools.ImageProcessing.RasterCommandProgressEventArgs">
      <summary>
            Provides data for the <see cref="E:Leadtools.ImageProcessing.RasterCommand.Progress" /> event.
            </summary>
      <remarks>
            All classes derived from <see cref="T:Leadtools.ImageProcessing.RasterCommand" /> has a <see cref="E:Leadtools.ImageProcessing.RasterCommand.Progress" /> event that will provide
            feedback on the percentage of the command processing.  You can use this event to update a user interface progress bar
            for example.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" /></example>
      <objectivec>
        <pre>@interface LTRasterCommandProgressEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class RasterCommandProgressEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterCommandProgressEventArgs.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.RasterCommandProgressEventArgs" /> class with specific values.
            </summary>
      <param name="percent">The percentage completion of the command.</param>
      <remarks>The value of <see cref="P:Leadtools.ImageProcessing.RasterCommandProgressEventArgs.Cancel" /> is initialized to false by default.</remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" /></example>
      <objectivec>
        <pre>(id)initWithPercent:(int)percent;</pre>
      </objectivec>
      <java>
        <pre>
public RasterCommandProgressEvent(
  Object source, 
  int percent
)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProgressEventArgs.Percent">
      <summary>
            Gets the percentage completion of the command.
            </summary>
      <value>The percentage completion of the command.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int percent;</pre>
      </objectivec>
      <java>
        <pre>public int getPercent()</pre>
      </java>
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterCommandProgressEventArgs.Cancel">
      <summary>
            Gets or sets a value indicating whether the image processing command should be canceled.
            </summary>
      <value>true if the image processing command should be canceled; false to continue normally.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL cancel;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getCancel()
public void setCancel(boolean value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.RasterUserMatchTable">
      <summary>
            Maintains a predefined table to speed conversion with a user palette when using <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" />.
            </summary>
      <remarks>
        <para>Use the <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" /> class to create a predefined table to speed conversion with a user palette when using <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" />.</para>
        <para>You should use the following sequence:
            <list type="number"><item><description>Create a new instance of the <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" /> class</description></item><item><description>Call the <see cref="M:Leadtools.ImageProcessing.RasterUserMatchTable.Create(Leadtools.RasterColor[])">RasterUserMatchTable.Create</see> method to create the table.</description></item><item><description>Call the <see cref="M:Leadtools.ImageProcessing.RasterUserMatchTable.Use">RasterUserMatchTable.Use</see> method to make this the current table. (Having this as a separate method allows you
            to save tables in files and get the one you need, without creating it again.)</description></item><item><description>Run <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> with <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.UsePalette</see> or <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommandPaletteFlags">ColorResolutionCommandPaletteFlags.FastMatch</see> set
            in the <see cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.PaletteFlags">ColorResolutionCommand.PaletteFlags</see> property.</description></item><item><description>Call the <see cref="M:Leadtools.ImageProcessing.RasterUserMatchTable.Unuse" /> method when the table is no longer needed.</description></item></list></para>
        <para>The completed table is a 32K array of integers. On a 32-bit system, it occupies 128K bytes of memory. Creation of the table is a slow,
            memory-intensive process that is useful only if you are using your own palette more than once. For example, you may want to create the table
            once, save it to a file, and ship that file with your application.</para>
      </remarks>
      <example>
            This example changes the color resolution of a bitmap, using a user-defined palette and a match table for fast color matching.
            <!--RasterUserMatchTable--></example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterUserMatchTable.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" /> class.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterUserMatchTable.Create(Leadtools.RasterColor[])">
      <summary>
            Creates a table that speeds color conversion when using a palette that you create.
            </summary>
      <param name="palette">An array of <see cref="T:Leadtools.RasterColor" /> that is your palette.</param>
      <remarks>
        <para>The table is referenced by <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterUserMatchTable.Use">
      <summary>
            Selects a table that speeds conversion when using a palette that you create
            </summary>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterUserMatchTable.Unuse">
      <summary>
            Frees the table that is used to speed conversion when using a palette that you create.
            </summary>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</example>
    </member>
    <member name="M:Leadtools.ImageProcessing.RasterUserMatchTable.Dispose">
      <summary>
            Releases all resources used by this <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.
            </summary>
      <remarks>For more information, refer to <see cref="T:System.IDisposable" />.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</example>
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.RasterUserMatchTable.Buffer">
      <summary>
            Gets the user match table data.
            </summary>
      <value>A <see cref="T:Leadtools.RasterNativeBuffer" /> object that contains the internal user match table.</value>
      <remarks>
        <para>When you call the <see cref="M:Leadtools.ImageProcessing.RasterUserMatchTable.Create(Leadtools.RasterColor[])" /> method, this property will return a pointer to the internal created match table.</para>
        <para>The completed table is a 32K array of integers. On a 32-bit system, it occupies 128K bytes of memory. Creation of the table is
            a slow, memory-intensive process that is useful only if you are using your own palette more than once. For example, you may want to
            create the table once, save it to a file, and ship that file with your application.</para>
        <para>For more information, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.RasterUserMatchTable" />.</example>
    </member>
    <member name="T:Leadtools.LeadEventsDispatchMode">
      <summary>
            Specifies the mode used to dispatch LEADTOOLS events.
            </summary>
      <remarks>
        <para>
            Some LEADTOOLS classes have asynchronous methods that fire events.
            The class that owns the event will have a <strong>DispatchMode</strong> property that is used to control how the events are dispatched.
            In JavaScript, the events must be fired using LeadEventsDispatchMode.<see cref="F:Leadtools.LeadEventsDispatchMode.UseCoreDispatcher" />.
            </para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="F:Leadtools.LeadEventsDispatchMode.Direct">
      <summary>
            (0)Indicates the class can fire events caused by asynchronous methods directly. This provides the best performance.
            </summary>
    </member>
    <member name="F:Leadtools.LeadEventsDispatchMode.UseCoreDispatcher">
      <summary>
            (1)Indicates the class must fire events caused by asynchronous methods using the <strong>Core Dispatcher</strong>. 
            This reduces performance, but ensures events work in JavaScript applications.
            </summary>
    </member>
    <member name="T:Leadtools.LeadInternalAttribute">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.RasterImageAllocateData">
      <summary>
            Provides data for the <see cref="T:Leadtools.RasterImageAllocateCallback" /> callback.
            </summary>
      <remarks>
        <para>For information on when to use <see cref="T:Leadtools.RasterImageAllocateData" /> and <see cref="T:Leadtools.RasterImageAllocateCallback" />, refer to
            <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</para>
        <para>All members of this class is read-only except for <see cref="P:Leadtools.RasterImageAllocateData.MemoryFlags" />. In other words, you cannot change the
            width, height, bits/pixel, order or size of the <see cref="T:Leadtools.RasterImage" /> object being created. You can however inspect
            and change the memory model (conventional, disk, tiled, etc.).</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="P:Leadtools.RasterImageAllocateData.MemoryFlags">
      <summary>
            Gets or sets the memory model flags being used to create the <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <value>One or more <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members that represent the memory model to use when creating the
            <see cref="T:Leadtools.RasterImage" /> object.</value>
      <remarks>
        <para>You can inspect and change the memory model (conventional, disk, tiled, etc.) used when creating the <see cref="T:Leadtools.RasterImage" />
            object by using this property. Refer to the example of the
            <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="P:Leadtools.RasterImageAllocateData.Width">
      <summary>
            Gets the width of the <see cref="T:Leadtools.RasterImage" /> object being created in pixels.
            </summary>
      <value>The width of the <see cref="T:Leadtools.RasterImage" /> object being created in pixels.</value>
      <remarks>
        <para>You cannot change the width, height, bits/pixel, order or size of the <see cref="T:Leadtools.RasterImage" /> object being created. You can however inspect
            and change the memory model (conventional, disk, tiled, etc.).</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="P:Leadtools.RasterImageAllocateData.Height">
      <summary>
            Gets the height of the <see cref="T:Leadtools.RasterImage" /> object being created in pixels.
            </summary>
      <value>The height of the <see cref="T:Leadtools.RasterImage" /> object being created in pixels.</value>
      <remarks>
        <para>You cannot change the width, height, bits/pixel, order or size of the <see cref="T:Leadtools.RasterImage" /> object being created. You can however inspect
            and change the memory model (conventional, disk, tiled, etc.).</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="P:Leadtools.RasterImageAllocateData.BitsPerPixel">
      <summary>
            Gets the bits per pixel of the <see cref="T:Leadtools.RasterImage" /> object being created.
            </summary>
      <value>The bits per pixel of the <see cref="T:Leadtools.RasterImage" /> object being created. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48 or 64.</value>
      <remarks>
        <para>You cannot change the width, height, bits/pixel, order or size of the <see cref="T:Leadtools.RasterImage" /> object being created. You can however inspect
            and change the memory model (conventional, disk, tiled, etc.).</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="P:Leadtools.RasterImageAllocateData.Order">
      <summary>
            Gets the byte order of the <see cref="T:Leadtools.RasterImage" /> object being created.
            </summary>
      <value>An <see cref="T:Leadtools.RasterByteOrder" /> enumeration member that specifies the byte order of the <see cref="T:Leadtools.RasterImage" /> object being created.</value>
      <remarks>
        <para>You cannot change the width, height, bits/pixel, order or size of the <see cref="T:Leadtools.RasterImage" /> object being created. You can however inspect
            and change the memory model (conventional, disk, tiled, etc.).</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="P:Leadtools.RasterImageAllocateData.Size">
      <summary>
            Gets the size of the data required by the <see cref="T:Leadtools.RasterImage" /> object being created in bytes.
            </summary>
      <value>The size of the data required by the <see cref="T:Leadtools.RasterImage" /> object being created in bytes.</value>
      <remarks>
        <para>You cannot change the width, height, bits/pixel, order or size of the <see cref="T:Leadtools.RasterImage" /> object being created. You can however inspect
            and change the memory model (conventional, disk, tiled, etc.).</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="T:Leadtools.RasterImageAllocateCallback">
      <summary>
            Callback to use when new <see cref="T:Leadtools.RasterImage" /> objects are crated by LEADTOOLS.
            </summary>
      <param name="data">Parameters used when creating the <see cref="T:Leadtools.RasterImage" /> object.</param>
      <returns>
        <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.Success</see> to continue creating the <see cref="T:Leadtools.RasterImage" /> object,
            any other value will cause the toolkit to throw <see cref="T:Leadtools.RasterException" /> with code equals to this <see cref="T:Leadtools.RasterExceptionCode" />.</returns>
      <remarks>
        <para>For more information, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see> and
            <see cref="T:Leadtools.RasterImageAllocateData" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">RasterDefaults.SetRasterImageAllocateCallback</see>.</example>
    </member>
    <member name="T:Leadtools.RasterDefaults">
      <summary>
            Specifies the default extra values used when creating <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <remarks>
        <para>
            You can use the <see cref="T:Leadtools.RasterDefaults" /> class to specify extra attributes used when creating a <see cref="T:Leadtools.RasterImage" /> object.
            </para>
        <para>
            For example, you can use <see cref="P:Leadtools.RasterDefaults.XResolution" /> and <see cref="P:Leadtools.RasterDefaults.YResolution" /> to set the
            physical resolution (DPI) of all the <see cref="T:Leadtools.RasterImage" /> objects created afterwards.
            </para>
        <para>
        </para>
        <para>
            You can use <see cref="P:Leadtools.RasterDefaults.DitheringMethod" /> to specify the default dithering method to use when converting an
            image from 64, 48, 32, 24, or 16 bits per pixel to 8 bits per pixel or fewer.</para>
        <para>
          <see cref="P:Leadtools.RasterDefaults.MemoryFlags" /> and <see cref="P:Leadtools.RasterDefaults.MemoryThreshold" /> controls how newly created images
            use the system memory.  The <see cref="P:Leadtools.RasterDefaults.TemporaryDirectory" /> controls where disk-based images are stored.
            </para>
      </remarks>
      <example>
        <!--RasterDefaults-->
      </example>
      <objectivec>
        <pre>@interface LTRasterDefaults : NSObject</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)">
      <summary>
            Sets a global callback to be called whenever the toolkit is creating a new <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <param name="callback">Method to be called whenever the toolkit is creating a new <see cref="T:Leadtools.RasterImage" /> object. You
            can pass null (Nothing in Visual Basic) to stop the toolkit from calling any callback.</param>
      <returns>The previous global callback set, or null (Nothing in Visual Basic) if no callback was set before (default).</returns>
      <remarks>
        <para>This method allows you to inspect (and change the memory model being used) whenever the toolkit is creating a new
            <see cref="T:Leadtools.RasterImage" /> object. Generally, you can use the <see cref="T:Leadtools.RasterMemoryFlags" /> argument to the 
            <see cref="T:Leadtools.RasterImage" /> constructor when creating new objects, however, in some instances, the toolkit will create images
            internally and you have no control on the memory model being passed. The callback set is global to all LEADTOOLS used in current process.</para>
        <para>This can be useful for debugging purposes or to control the memory model of an image being creating internally
            in LEADTOOLS, for example, as a result of an image processing operation as described in the example.</para>
        <para>The return value is the old callback set previously by the user, if no callback was set previously, this method
            will return null (Nothing in Visual Basic), this allow you to cascade callbacks together.</para>
        <para>By default, the toolkit does not set a callback, and calling this method the first time will always
            return null (Nothing in Visual Basic).</para>
        <para>When you are done when the callback, you can call this method with a null (Nothing in Visual Basic) reference to
            stop the toolkit from calling any methods when creating <see cref="T:Leadtools.RasterImage" /> objects.</para>
      </remarks>
      <example>
        <para>The following example will show how to use the <see cref="M:Leadtools.RasterDefaults.SetRasterImageAllocateCallback(Leadtools.RasterImageAllocateCallback)" /> method to 
            stop LEADTOOLS from creating any disk images whatever. The <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> used in the example will
            internally create a new <see cref="T:Leadtools.RasterImage" /> object. By default, the user has no control on the memory
            model for this image, however, by using this callback, the user can control (and change) the memory model used.</para>
        <!--RasterDefaults.SetRasterImageAllocateCallback-->
      </example>
    </member>
    <member name="P:Leadtools.RasterDefaults.MaximumThreadCount">
      <summary>
            Gets or sets the maximum number of threads used during processing.
            </summary>
      <value>An <see cref="T:System.Int32" /> value that represents the maximum number of threads used during processing. Must be a value greater than or equals to 0. Default
            value is the number of CPUs/Cores in the current machine (<see cref="P:System.Environment.ProcessorCount">System.Environment.ProcessorCount</see>).</value>
      <remarks>
        <para>
          <strong>Note:</strong> this property is currently supported by LEADTOOLS for Silverlight only.</para>
        <para>Using two threads with a dual core machine or two CPUs will increase the processing speed significantly if the processing supports parallel
            processing. Currently only the LEADTOOLS JPEG2000 Encoder and Decoder are using this property. More LEADTOOLS encoders/decoders may use this
            property in the future.</para>
        <para>Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>0</term>
            <description>
              <para>The toolkit will pick the proper number of running threads based on the number of CPUs/Cores of the current machines. Note:
            the toolkit will calculate this value internally and set it. Getting the value of this property will never return 0.</para>
            </description>
          </item>
          <item>
            <term>1</term>
            <description>Use one thread only. In this case, the toolkit will not create extra threads for the processing, instead, all operations
            will be performed in the main thread.</description>
          </item>
          <item>
            <term>2</term>
            <description>Use two threads. The toolkit will create a maximum of two threads for processing if needed.</description>
          </item>
          <item>
            <term>N</term>
            <description>Use N threads. The toolkit will create a maximum of N threads for processing if needed.</description>
          </item>
        </list>
        <para>Values less than zero will be rejected. Large values, more than the number of CPU/Cores, will not increase performance and might cause
            resource usage overload which could lead to processing failure.</para>
        <para>The <see cref="P:Leadtools.RasterDefaults.MaximumThreadCount" /> property is a global resource used by all LEADTOOLS and is not thread-safe. Make sure to
            use property thread synchronization if required.</para>
      </remarks>
      <example>
        <!--RasterDefaults.MaximumThreadCount-->
      </example>
    </member>
    <member name="P:Leadtools.RasterDefaults.XResolution">
      <summary>
            Gets or sets the horizontal resolution used when creating new <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <value>
            An integer value that specifies the horizontal resolution used when creating new <see cref="T:Leadtools.RasterImage" /> objects.
            This value must be an integer value greater than zero.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
      <objectivec>
        <pre>
+(unsigned int)xResolution;
+(void)xResolution:(unsigned int)value;            </pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterDefaults.YResolution">
      <summary>
            Gets or sets the vertical resolution used when creating new <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <value>
            An integer value that specifies the vertical resolution used when creating new <see cref="T:Leadtools.RasterImage" /> objects.
            This value must be an integer value greater than zero.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
      <objectivec>
        <pre>
+(unsigned int)yResolution;
+(void)yResolution:(unsigned int)value;            </pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterDefaults.DitheringMethod">
      <summary>
            Gets or sets a value that specifies the default dithering method to use when converting an image from 64, 48, 32, 24, or
            16 bits per pixel to 8 bits per pixel or fewer.
            </summary>
      <value>
            A <see cref="T:Leadtools.RasterDitheringMethod" /> enumeration value that specifies the default dithering method to use when converting an image from 64, 48, 32, 24, or
            16 bits per pixel to 8 bits per pixel or fewer.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
      <objectivec>
        <pre>
+(LTRasterDitheringMethod)ditheringMethod;
+(void)ditheringMethod:(LTRasterDitheringMethod)value;            </pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterDefaults.MemoryFlags">
      <summary>
            Gets or sets a value that specifies the type of memory to use when creating new <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <value>
            A <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration value that specifies the type of memory to use when creating new
            <see cref="T:Leadtools.RasterImage" /> objects. 
            </value>
      <remarks>
            MemoryFlags can only be set to RasterMemoryFlags.Conventional or RasterMemoryFlags.Disk when setting defaults. Other values throw exceptions.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterDefaults.MemoryThreshold">
      <summary>
            Gets or sets a value that specifies the memory restrictions for allocating new <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <value>
            A <see cref="T:Leadtools.RasterMemoryThreshold" /> object that specifies the memory restrictions for allocating new
            <see cref="T:Leadtools.RasterImage" /> objects.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterDefaults.TemporaryDirectory">
      <summary>
            Gets or sets a value that specifies the directory in which LEADTOOLS will create temporary files when creating
            disk-based <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <value>
            A value that specifies the directory in which LEADTOOLS will create temporary files when creating
            disk-based <see cref="T:Leadtools.RasterImage" /> objects.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterDefaults.CompressOnSerialize">
      <summary>
            Gets or sets a value that indicate whether to use compression when serializing a <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <value>
        <strong>true</strong> to use compression when serializing a <see cref="T:Leadtools.RasterImage" /> object, otherwise; <strong>false</strong>. Default value is <strong>true</strong>.</value>
      <remarks>
        <para>When the value of this property is <strong>true</strong>, the framework will use lossless compression when serializing a <see cref="T:Leadtools.RasterImage" />
            object. This compression is very fast with very little overhead to the serialize and de-serialize speed and it decreases the size of the
            compressed data dramatically result in faster overall speed.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterImageAnimatorState">
      <summary>
            The <see cref="T:Leadtools.RasterImageAnimator" /> state.
            </summary>
      <remarks>
            This enumeration is used as the state of the <see cref="T:Leadtools.RasterImageAnimator" />. It is used as the value of the
            <see cref="P:Leadtools.RasterImageAnimator.State">RasterImageAnimator.State</see> property and the return value of the
            <see cref="M:Leadtools.RasterImageAnimator.Process">RasterImageAnimator.Process</see> method.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageAnimator" />.</example>
      <seealso cref="T:Leadtools.RasterImageAnimator" />
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.PreClear">
      <summary>
            (0x0000)The initial state of the animation (index = -1). The target image will be cleared to the
            <see cref="P:Leadtools.RasterImage.AnimationBackground">RasterImage.AnimationBackground</see> color of the current frame on the next call
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.PostClear">
      <summary>
            (0x0001)Indicates that the target image has been cleared
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.PreRender">
      <summary>
            (0x0002)Indicates that the current frame will be rendered to the target image on the next call
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.Render">
      <summary>
            (0x0003)Indicates that a frame has been rendered to the target image
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.PostRender">
      <summary>
            (0x0004)Indicates that a frame is in the midst of being rendered to the target image
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.WaitInput">
      <summary>
            (0x0005)Indicates that the animation engine is waiting for user input before moving on to <strong>PreDispose</strong></summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.WaitDelay">
      <summary>
            (0x0006)Indicates that the animation engine is waiting for a delayed time before moving on to <strong>PreDispose</strong></summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.WaitInputDelay">
      <summary>
            (0x0007)Indicates that the animation engine is waiting for user input and a delayed time before moving on to <strong>PreDispose</strong></summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.PreDispose">
      <summary>
            (0x0008)Indicates that the current frame will be disposed of on the next call
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.PostDispose">
      <summary>
            (0x0009)Indicates that the current frame has been disposed of. The index is incremented after processing this state
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimatorState.End">
      <summary>
            (0x000A)Indicates that the animation is past the last frame in the list (index = number of frames or pages). The animator will loop to index = 0 on the next call with the state set to <strong>PreRender</strong></summary>
    </member>
    <member name="T:Leadtools.RasterImageAnimator">
      <summary>
            Animates an image that has time-based frames.
            </summary>
      <remarks>
        <para>To load and play an animated file, such as GIF, you can load the frames into a <see cref="T:Leadtools.RasterImage" /> object from the file, then
            play the list to a target image in a loop that displays each change in the target image. You can also create an animation sequence from
            scratch and save the images to create an animated GIF file.</para>
        <para>The following is an outline of possible steps:
            <list type="number"><item><description>
              Load a multi-frame image using <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)" /></description></item><item><description>
              Use the <see cref="T:Leadtools.RasterImage" /> constructor to create a target image that is the size of the images in the multi-frame image
              </description></item><item><description>
              Use the <see cref="T:Leadtools.RasterImageAnimator" /> class to create an animation playback that references multi-frame image and the target image
              </description></item><item><description>
              In a loop that processes each frame in the multi-frame image, do the following:
              <list type="number"><item><description>
                 Use <see cref="M:Leadtools.RasterImageAnimator.Process">RasterImageAnimator.Process</see> to process the current state and get the next state of the animation
                 </description></item><item><description>
                 Use <see cref="M:Leadtools.RasterImageAnimator.GetUpdateRectangle(System.Boolean)">RasterImageAnimator.GetUpdateRectangle</see> to get the update rectangle (the portion of the
                 target image that has changed)
                 </description></item><item><description>
                 Use <see cref="M:Leadtools.Drawing.RasterImagePainter.Paint(Leadtools.RasterImage,System.IntPtr,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.Drawing.RasterPaintProperties)">RasterImagePainter.Paint</see> to paint the changed portion of the image. To paint only the changed portion, use the update
                 rectangle as the source clipping rectangle.
                 </description></item></list></description></item></list></para>
        <para>The animation loop can have a number of states, and you should only paint the changes in an appropriate state (for example, when the next state is
            <see cref="T:Leadtools.RasterImageAnimatorState">RasterImageAnimatorState.PostRender</see>. For a list of possible states, refer to <see cref="T:Leadtools.RasterImageAnimatorState" />.</para>
        <para>The <see cref="P:Leadtools.RasterImage.AnimationDisposalMethod">RasterImage.AnimationDisposalMethod</see> property in the target <see cref="T:Leadtools.RasterImage" /> determines what
            happens to the image in the playback loop after rendering and after any wait state, when the next state is <see cref="T:Leadtools.RasterImageAnimatorState">RasterImageAnimatorState.PostDispose</see>.
            The options are as follows: keep the image as it is, restore the background, or restore the previous image. (Restoring the background is a common option for animation.)</para>
        <para>The animation loop goes continuously through the list of frames. If you want to stop at the end of the list, you can exit the loop when the next state is
            <see cref="T:Leadtools.RasterImageAnimatorState">RasterImageAnimatorState.End</see>.</para>
        <para>The <see cref="T:Leadtools.RasterImageAnimator" /> class also implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterImageAnimator" /> class.  For more information, refer to
            <see cref="T:System.IDisposable" />.</para>
      </remarks>
      <example>
        <para>This example will load an animated GIF file and paint on the surface of the given Panel.</para>
        <!--RasterImageAnimator-->
      </example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.#ctor(Leadtools.RasterImage,Leadtools.RasterImage)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterImageAnimator" /> object using the specified parameters.
            </summary>
      <param name="targetImage">A <see cref="T:Leadtools.RasterImage" /> object referencing the target image.</param>
      <param name="animatedImage">A <see cref="T:Leadtools.RasterImage" /> object containing the frames to be played. This object must be a multi-frame image (The value of
            <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop">RasterImage.AnimationGlobalLoop</see> must be something other than -1. You can also pass a null reference
            (Nothing in VisualBasic) to let the method create an empty multi-frame image.</param>
      <remarks>
        <para>
          <paramref name="targetImage" /> must be allocated before calling this method</para>
        <para>If you pass null (Nothing in VisualBasic) in the <paramref name="animatedImage" /> parameter, you can use the <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" /> method to add frames
            to the multi-frame image during the animation. This is useful if you want to play an animated file as it is being loaded. If you need to reference the multi-frame
            image after the animation, you can call the <see cref="M:Leadtools.RasterImageAnimator.Destroy" /> method before you dispose this <see cref="T:Leadtools.RasterImageAnimator" /> object.</para>
        <para>The <see cref="T:Leadtools.RasterImageAnimator" /> class also implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterImageAnimator" /> class.  For more information, refer to
            <see cref="T:System.IDisposable" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageAnimator" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.Dispose">
      <summary>
            Releases all resources used by this <see cref="T:Leadtools.RasterImageAnimator" />.
            </summary>
      <remarks>For more information, refer to <see cref="T:System.IDisposable" />.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageAnimator" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.Finalize">
      <summary>
            This member overrides <see cref="M:System.Object.Finalize" />.
            </summary>
      <remarks>For more information, refer to <see cref="T:System.IDisposable" />.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageAnimator" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.Dispose(System.Boolean)">
      <summary>
            Releases all the resources used by this <see cref="T:Leadtools.RasterImageAnimator" />.
            </summary>
      <param name="disposing">
        <strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageAnimator" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.Destroy">
      <summary>
            Invalidates this <see cref="T:Leadtools.RasterImageAnimator" /> object and returns the animated image.
            </summary>
      <returns>A <see cref="T:Leadtools.RasterImage" /> object containing the multi-frame animated image.</returns>
      <remarks>
        <para>If you pass null (Nothing in VisualBasic) in the <i>animatedImage</i> parameter for the <see cref="T:Leadtools.RasterImageAnimator" /> constructor, you can use
            the <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" /> method to add frames to the multi-frame image during the animation. This is useful if you want to play an animated file as it is being
            loaded. If you need to reference the multi-frame image after the animation, you can call the <see cref="M:Leadtools.RasterImageAnimator.Destroy" /> method before you dispose this
            <see cref="T:Leadtools.RasterImageAnimator" /> object.</para>
        <para>After you call <see cref="M:Leadtools.RasterImageAnimator.Destroy" />, this <see cref="T:Leadtools.RasterImageAnimator" /> object is invalid and you should only call the <see cref="M:Leadtools.RasterImageAnimator.Dispose" /> method
            afterwards.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)">
      <summary>
            Appends an image to the animated multi-frame image during an animation playback.
            </summary>
      <param name="image">A <see cref="T:Leadtools.RasterImage" /> that contains 1 or more frames to be added to the animation.</param>
      <remarks>
        <para>If you pass null (Nothing in VisualBasic) in the <i>animatedImage</i> parameter for the <see cref="T:Leadtools.RasterImageAnimator" /> constructor, you can use
            the <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" /> method to add frames to the multi-frame image during the animation. This is useful if you want to play an animated file as it is being
            loaded using the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event. If you need to reference the multi-frame image after the animation, you
            can call the <see cref="M:Leadtools.RasterImageAnimator.Destroy" /> method before you dispose this <see cref="T:Leadtools.RasterImageAnimator" /> object.</para>
        <para>After you call <see cref="M:Leadtools.RasterImageAnimator.Destroy" />, this <see cref="T:Leadtools.RasterImageAnimator" /> object is invalid and you should only call the <see cref="M:Leadtools.RasterImageAnimator.Dispose" /> method
            afterwards.</para>
        <para>The <see cref="M:Leadtools.RasterImageAnimator.ValidateLines(System.Int32,System.Int32)" /> method lets you validate the lines that the animation playback engine will render to the target image</para>
      </remarks>
      <example>
        <para>This example plays an animated GIF file as it loads the file</para>
        <!--RasterImageAnimator.Append-->
      </example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.CancelWait">
      <summary>
            Cancels the wait for user input and any delay during an animation playback.
            </summary>
      <remarks>
        <para>The "Wait for user input" is supported by GIF89a and later standard. This flag gets set to the corresponding value if this image was loaded from
            a GIF file. Also, the value set in this property will be used if this image is saved as a GIF file. Otherwise, the LEADTOOLS toolkit will not use
            the value of this property.</para>
        <para>This flag is set in the <see cref="P:Leadtools.RasterImage.AnimationWaitUserInput">RasterImage.AnimationWaitUserInput</see> property. The animation playback
            engine will get into a wait state if it encounters this flag in a frame and the state of the playback will be
            <see cref="T:Leadtools.RasterImageAnimatorState">RasterImageAnimatorState.WaitInput</see>. Use the <see cref="M:Leadtools.RasterImageAnimator.CancelWait" /> method to exit the wait state and move
            to the next frame</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.ClearUpdateRectangle">
      <summary>
            Clears the update rectangle used for an animation playback, leaving an empty rectangle.
            </summary>
      <noremarks />
      <example>
        <para>This example uses <see cref="M:Leadtools.RasterImageAnimator.ClearUpdateRectangle" /> to avoid painting odd numbered frames</para>
        <!--RasterImageAnimator.ClearUpdateRectangle-->
      </example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.GetUpdateRectangle(System.Boolean)">
      <summary>
            Gets the update rectangle in the target image during an animation playback.
            </summary>
      <param name="clear">
        <strong>true</strong> if you want to clear the rectangle; <strong>false</strong> if you do not.</param>
      <returns>A <see cref="T:Leadtools.LeadRect" /> that this method will fill with the coordinates of the update rectangle.</returns>
      <remarks>
        <para>The rectangle uses image coordinates, and it is cumulative.</para>
        <para>You usually call this after the following states, which you can get with the <see cref="P:Leadtools.RasterImageAnimator.State" /> property:
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term><see cref="T:Leadtools.RasterImageAnimatorState">RasterImageAnimatorState.PostClear</see></term><description>Indicates that the target image has been cleared</description></item><item><term><see cref="T:Leadtools.RasterImageAnimatorState">RasterImageAnimatorState.PostRender</see></term><description>that a frame has been rendered to the target image</description></item><item><term><see cref="T:Leadtools.RasterImageAnimatorState">RasterImageAnimatorState.PostDispose</see></term><description>Indicates that the current frame has been disposed of. The index is incremented after processing this state</description></item></list></para>
        <para>This method uses image coordinates to specify the update rectangle. Therefore, you must account for the image's view perspective. For more information,
            refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageAnimator" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.Process">
      <summary>
            Processes the next state during an animation playback.
            </summary>
      <returns>A <see cref="T:Leadtools.RasterImageAnimatorState" /> enumeration member that describes the new state of the animation playback engine</returns>
      <remarks>
        <para>You should call this method in a loop to continually process the playback.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImageAnimator" />.</example>
    </member>
    <member name="M:Leadtools.RasterImageAnimator.ValidateLines(System.Int32,System.Int32)">
      <summary>
            Validates lines of an image that was added during a <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event using the <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" /> function.
            </summary>
      <param name="row">Row number of the first line in the image to validate. In the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event,
            this corresponds to the first line in the buffer.</param>
      <param name="lines">Number of lines to validate. In the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event, this corresponds to the
            number of lines in the buffer.</param>
      <remarks>
        <para>The <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" /> method enables you to update an image in the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event, so that you
            can play an animation file as it is being loaded. The <see cref="M:Leadtools.RasterImageAnimator.ValidateLines(System.Int32,System.Int32)" /> method lets you validate the lines that the animation playback engine will
            render to the target image.</para>
        <para>If you pass null (Nothing in VisualBasic) in the <i>animatedImage</i> parameter for the <see cref="T:Leadtools.RasterImageAnimator" /> constructor, you can use
            the <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" /> method to add frames to the multi-frame image during the animation. This is useful if you want to play an animated file as it is being
            loaded. If you need to reference the multi-frame image after the animation, you can call the <see cref="M:Leadtools.RasterImageAnimator.Destroy" /> method before you dispose this
            <see cref="T:Leadtools.RasterImageAnimator" /> object.</para>
        <para>After you call <see cref="M:Leadtools.RasterImageAnimator.Destroy" />, this <see cref="T:Leadtools.RasterImageAnimator" /> object is invalid and you should only call the <see cref="M:Leadtools.RasterImageAnimator.Dispose" /> method
            afterwards.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageAnimator.Index">
      <summary>
            Gets or sets the index of the current frame during animation playback.
            </summary>
      <value>An integer value that indicates the index of the current frame during animation playback.</value>
      <remarks>
        <para>You can use the <see cref="P:Leadtools.RasterImageAnimator.Index" /> property to skip frames during a playback if required.</para>
      </remarks>
      <example>
        <para>This example uses <see cref="P:Leadtools.RasterImageAnimator.Index" /> to skip frames during a playback</para>
        <!--RasterImageAnimator.Index-->
      </example>
    </member>
    <member name="P:Leadtools.RasterImageAnimator.Delay">
      <summary>
            Gets the time remaining in the current wait state of an animation playback.
            </summary>
      <value>An integer value that indicates the time remaining in the current wait state of an animation playback.</value>
      <remarks>
        <para>The delay is in milliseconds (ms).</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageAnimator.State">
      <summary>
            Gets the current state of the animation playback engine.
            </summary>
      <value>A <see cref="T:Leadtools.RasterImageAnimatorState" /> enumeration member that indicates current state of the animation playback engine.</value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.RasterImageAnimatorState" /> for description of the different states.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImageAnimator.Append(Leadtools.RasterImage)" />.</example>
    </member>
    <member name="T:Leadtools.RasterImageChangedEventArgs">
      <summary>
            Provides data for the <see cref="E:Leadtools.RasterImage.Changed" /> event.
            </summary>
      <remarks>
            Whenever the properties or data of a <see cref="T:Leadtools.RasterImage" /> is changed programatically, the <see cref="E:Leadtools.RasterImage.Changed">RasterImage.Changed</see>
            event will fire with an instance of the <see cref="T:Leadtools.RasterImageChangedEventArgs" /> class.  This instance contains the <see cref="P:Leadtools.RasterImageChangedEventArgs.Flags" />
            property that holds information on what has changed in the image.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed">RasterImage.Changed</see>.</example>
    </member>
    <member name="M:Leadtools.RasterImageChangedEventArgs.#ctor(Leadtools.RasterImageChangedFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterImageChangedEventArgs" /> class.
            </summary>
      <param name="flags">Flags which indicate the type of change.</param>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed">RasterImage.Changed</see>.</example>
    </member>
    <member name="P:Leadtools.RasterImageChangedEventArgs.Flags">
      <summary>
            Gets the flags for the <see cref="E:Leadtools.RasterImage.Changed" /> event.
            </summary>
      <value>One or two members of the <see cref="T:Leadtools.RasterImageChangedFlags" /> enumeration that indicates what has changed in the image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed">RasterImage.Changed</see>.</example>
    </member>
    <member name="T:Leadtools.RasterImagePagesChangedAction">
      <summary>
            Indicates whether pages are added, removed or inserted from a <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" /></remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.</example>
    </member>
    <member name="F:Leadtools.RasterImagePagesChangedAction.Added">
      <summary>
            (0)The pages being added.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImagePagesChangedAction.Removed">
      <summary>
            (1)The pages are removed.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImagePagesChangedAction.Inserted">
      <summary>
            (2)The pages being inserted.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImagePagesChangedAction.Replaced">
      <summary>
            (3)The pages being replaced.
            </summary>
    </member>
    <member name="T:Leadtools.RasterImagePagesChangedEventArgs">
      <summary>
            Provides data for the <see cref="E:Leadtools.RasterImage.PagesChanged" /> event.
            </summary>
      <remarks>
        <para>When images are added/inserted or removed from a <see cref="T:Leadtools.RasterImage" /> object, the <see cref="E:Leadtools.RasterImage.PagesChanged">RasterImage.PagesChanged</see>
            event will fire with an instance of the <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" /> class. This instance contains information on what pages has been changed.
            The following table will list the methods that would invoke the <see cref="E:Leadtools.RasterImage.PagesChanged">RasterImage.PagesChanged</see> event and what values are
            expected.
            </para>
        <para>
          <list type="table">
            <listheader>
              <term>Method</term>
              <description>Values Expected</description>
            </listheader>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)">RasterImage.AddPage</see>
              </term>
              <description>
                <para>For the source image (the <strong>image</strong> parameter):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the current page (<see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see>) and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is 1.
            </para>
                <para>
            For the destination image (The this or Me in Visual basic image):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Added</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is <see cref="P:Leadtools.RasterImage.PageCount">RasterImage.PageCount</see> since the pages are added at the end and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is 1.
            </para>
              </description>
            </item>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)">RasterImage.AddPages</see>
              </term>
              <description>
                <para>For the source image (the <strong>image</strong> parameter):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the value of the <strong>startIndex</strong> parameter and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is the value of the <strong>count</strong> parameter.
            </para>
                <para>
            For the destination image (The this or Me in Visual basic image):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Added</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is <see cref="P:Leadtools.RasterImage.PageCount">RasterImage.PageCount</see> since the pages are added at the end and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is the value of the <strong>count</strong> parameter.
            </para>
              </description>
            </item>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)">RasterImage.RemovePageAt</see>
              </term>
              <description>
                <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the value of the <strong>pageIndex</strong> and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is 1.
              </description>
            </item>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)">RasterImage.RemovePages</see>
              </term>
              <description>
                <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the value of the <strong>startIndex</strong> parameter and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is the value of the <strong>count</strong> parameter.
              </description>
            </item>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.RemoveAllPages">RasterImage.RemoveAllPages</see>
              </term>
              <description>
                <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is 1 and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is <see cref="P:Leadtools.RasterImage.PageCount">RasterImage.PageCount</see>.
              </description>
            </item>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)">RasterImage.InsertPage</see> and <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)">RasterImage.ReplacePages</see></term>
              <description>
                <para>For the source image (the <strong>image</strong> parameter):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the current page (<see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see>) and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is 1.
            </para>
                <para>
            For the destination image (The this or Me in Visual basic image):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Added</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the value of the <strong>index</strong> parameter and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is 1.
            </para>
              </description>
            </item>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)">RasterImage.InsertPages</see> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)">RasterImage.ReplacePages</see></term>
              <description>
                <para>For the source image (the <strong>image</strong> parameter):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the value of the <strong>startIndex</strong> parameter and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is the value of the <strong>count</strong> parameter.
            </para>
                <para>
            For the destination image (The this or Me in Visual basic image):
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Added</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is the value of the <strong>index</strong> parameter and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is the value of the <strong>count</strong> parameter.
            </para>
              </description>
            </item>
            <item>
              <term>
                <see cref="M:Leadtools.RasterImage.Dispose">RasterImage.Dispose</see>
              </term>
              <description>
                <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Action" /> is
            <see cref="T:Leadtools.RasterImagePagesChangedAction">RasterImagePagesChangedAction.Removed</see>,
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex" /> is 1 and
            <see cref="P:Leadtools.RasterImagePagesChangedEventArgs.Count" /> is the number of pages in the current <see cref="T:Leadtools.RasterImage" />.
              </description>
            </item>
          </list>
        </para>
      </remarks>
      <example>
        <!--RasterImage.PagesChanged-->
      </example>
    </member>
    <member name="M:Leadtools.RasterImagePagesChangedEventArgs.#ctor(Leadtools.RasterImagePagesChangedAction,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" /> class.
            </summary>
      <param name="action">Indicates whether pages are added, removed or inserted.</param>
      <param name="startIndex">An integer value that specifies the index of the first page being added, removed or inserted.</param>
      <param name="count">The number of pages being added, removed or inserted.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.</example>
    </member>
    <member name="P:Leadtools.RasterImagePagesChangedEventArgs.Action">
      <summary>
            (Read only) Indicates whether pages are added, removed or inserted.
            </summary>
      <value>A <see cref="T:Leadtools.RasterImagePagesChangedAction" /> enumeration that specifies whether pages are added, removed or inserted.</value>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.</example>
    </member>
    <member name="P:Leadtools.RasterImagePagesChangedEventArgs.StartIndex">
      <summary>
            (Read only) The index of the first page being added, removed or inserted.
            </summary>
      <value>An integer value that specifies the index of the first page being added, removed or inserted.</value>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.</example>
    </member>
    <member name="P:Leadtools.RasterImagePagesChangedEventArgs.Count">
      <summary>
            (Read only) The number of pages being added, removed or inserted.
            </summary>
      <value>An integer value that specifies the number of pages added, removed or inserted.</value>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.</example>
    </member>
    <member name="T:Leadtools.RasterGrayscaleMode">
      <summary>
            Indicates the kind of grayscale palette, if any, that an image has.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterGrayscaleMode.None">
      <summary>
            (0)Not grayscale
            </summary>
    </member>
    <member name="F:Leadtools.RasterGrayscaleMode.OrderedNormal">
      <summary>
            (1)Normally ordered grayscale (dark to light)
            </summary>
    </member>
    <member name="F:Leadtools.RasterGrayscaleMode.OrderedInverse">
      <summary>
            (2)Reverse ordered grayscale (light to dark)
            </summary>
    </member>
    <member name="F:Leadtools.RasterGrayscaleMode.NotOrdered">
      <summary>
            (3)Unordered grayscale
            </summary>
    </member>
    <member name="T:Leadtools.RasterImageChangedFlags">
      <summary>
            Indicates the type(s) of change that has occurred in a <see cref="T:Leadtools.RasterImage">RasterImage</see>.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.None">
      <summary>
            (0x00000000)No change
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Data">
      <summary>
            (0x00000001)Image data changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Size">
      <summary>
            (0x00000002)Dimension (width and/or height) changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.BitsPerPixel">
      <summary>
            (0x00000004)Bits/Pixel changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.ViewPerspective">
      <summary>
            (0x00000008)View perspective changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Order">
      <summary>
            (0x00000010)Color order changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Palette">
      <summary>
            (0x00000020)Palette changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.LookupTablePalette">
      <summary>
            (0x00000040)Palette lookup table (LUT) changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Region">
      <summary>
            (0x00000080)Region changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Resolution">
      <summary>
            (0x00000100)Resolution (DPI) changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.LowHighBit">
      <summary>
            (0x00000200)Low bit and/or High bit changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.MinMaxValue">
      <summary>
            (0x00000400)Minimum value and/or maximum value changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.NoRegionClip">
      <summary>
            (0x00000800)For internal use
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.PaintLookupTable">
      <summary>
            (0x00001000)Paint lookup table (LUT) changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.PaintParameters">
      <summary>
            (0x00002000)Paint Parameters changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.DitheringMethod">
      <summary>
            (0x00004000)Dithering method changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.UseLookupTable">
      <summary>
            (0x00008000)Use of palette lookup table (LUT) changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.UsePaintLookupTable">
      <summary>
            (0x00010000)Use of paint palette lookup table (LUT) changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.TransparentColor">
      <summary>
            (0x00020000)Transparent color changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.OverlaysInfo">
      <summary>
            (0x00040000)Overlay information changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.PlayParameters">
      <summary>
            (0x00080000)Animation play parameters changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Page">
      <summary>
            (0x00200000)Current page changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.PageCount">
      <summary>
            (0x00400000)Number of pages changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Tag">
      <summary>
            (0x00800000)Tag changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Comment">
      <summary>
            (0x01000000)Comment changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Marker">
      <summary>
            (0x02000000)Marker changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.GeoKey">
      <summary>
            (0x04000000)Geo keys changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.Format">
      <summary>
            (0x08000000)Format changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.AnimationProperties">
      <summary>
            (0x10000000)Any of the Animation properties has changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.PremultiplyAlpha">
      <summary>
            (0x20000000)Pre-multiply alpha value changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageChangedFlags.LinkImage">
      <summary>
            The linked image has changed
            </summary>
    </member>
    <member name="T:Leadtools.RasterViewPerspective">
      <summary>
            Indicates the view perspective of the image data.
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum RasterViewPerspective</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.TopLeft">
      <summary>
            (1)Top-left of image is first in memory.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.BottomLeft">
      <summary>
            (4)Bottom-left of image is first in memory.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.TopRight">
      <summary>
            (2)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> First row is the right side, first column is top side.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.BottomLeft180">
      <summary>
            (2)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Same as <strong>TopLeft</strong>, which is <strong>BottomLeft</strong> rotated clockwise by 180 degrees.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.BottomRight">
      <summary>
            (3)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> First row is the right side, first column is the bottom side.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.TopLeft180">
      <summary>
            (3)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Same as <strong>BottomRight</strong>, which is <strong>TopLeft</strong> rotated clockwise by 180 degrees.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.RightTop">
      <summary>
            (6)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> First row is the right side, first column is top side.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.TopLeft90">
      <summary>
            (6)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Same as <strong>RightTop</strong>, which is <strong>TopLeft</strong> rotated clockwise by 90 degrees.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.LeftBottom">
      <summary>
            (8)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> First row is the left side, first column is top side.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.TopLeft270">
      <summary>
            (8)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Same as <strong>LeftBottom</strong>, which is <strong>TopLeft</strong> rotated clockwise by 270 degrees.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.LeftTop">
      <summary>
            (5)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> First row is the left side, first column is the top side.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.BottomLeft90">
      <summary>
            (5)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Same as <strong>LeftTop</strong>, which is <strong>BottomLeft</strong> rotated clockwise by 90 degrees.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.RightBottom">
      <summary>
            (7)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> First row is the right side, first column is the bottom side.
            </summary>
    </member>
    <member name="F:Leadtools.RasterViewPerspective.BottomLeft270">
      <summary>
        <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Same as <strong>RightBottom</strong>, which is <strong>BottomLeft</strong> rotated clockwise by 270 degrees.
            </summary>
    </member>
    <member name="T:Leadtools.RasterByteOrder">
      <summary>
            Indicates the color byte order of the image data
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterByteOrder.Rgb">
      <summary>
            (0)RGB
            </summary>
    </member>
    <member name="F:Leadtools.RasterByteOrder.Bgr">
      <summary>
            (1)BGR (inverse of RGB)
            </summary>
    </member>
    <member name="F:Leadtools.RasterByteOrder.Gray">
      <summary>
            (2)Grayscale
            </summary>
    </member>
    <member name="F:Leadtools.RasterByteOrder.Romm">
      <summary>
            (5)ROMM (BGR)
            </summary>
    </member>
    <member name="F:Leadtools.RasterByteOrder.Rgb565">
      <summary>
            (7)RGB 565 (Only for 16-bit color bitmaps)
            </summary>
    </member>
    <member name="T:Leadtools.RasterDitheringMethod">
      <summary>
            Indicates the dithering method used for the image.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.None">
      <summary>
            (0)No dithering
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.FloydStein">
      <summary>
            (1)Floyd-Steinberg method
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.Stucki">
      <summary>
            (2)Stucki method
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.Burkes">
      <summary>
            (3)Burkes method
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.Sierra">
      <summary>
            (4)Sierra method
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.StevensonArce">
      <summary>
            (5)Stevenson-Arce method
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.Jarvis">
      <summary>
            (6)Jarvis method
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.Ordered">
      <summary>
            (7)Ordered dithering, which is faster than other methods but is lower in quality
            </summary>
    </member>
    <member name="F:Leadtools.RasterDitheringMethod.Clustered">
      <summary>
            (8)Clustered dithering
            </summary>
    </member>
    <member name="T:Leadtools.RasterRegionCombineMode">
      <summary>
            Controls the creation of an image region.
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum RasterRegionCombineMode</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterRegionCombineMode.And">
      <summary>
            (0)<para>The resulting region includes only the intersection of the existing region and the new one. The following example shows the result, where the rectangles represent the existing region, the ellipse represents the new one, and the shaded area represents the resulting region.</para><para><img src="RasterRegionCombineMode_And.gif" title="Raster Region Combine Mode: AND" /></para></summary>
    </member>
    <member name="F:Leadtools.RasterRegionCombineMode.Set">
      <summary>
            (1)<para>The resulting region includes only the new region. The existing region, if any, is discarded. The following example shows the result, where the ellipse is the new region and the shaded area is the resulting region.</para><para><img src="RasterRegionCombineMode_Set.gif" title="Raster Region Combine Mode: SET" /></para></summary>
    </member>
    <member name="F:Leadtools.RasterRegionCombineMode.AndNotImage">
      <summary>
            (2)<para>The resulting region includes the intersection of the area outside the existing region and the area inside the new region. The following example shows the result, where the rectangle is the existing region, the ellipse is the new one, and the shaded area is the resulting region.</para><para><img src="RasterRegionCombineMode_AndNotImage.gif" title="Raster Region Combine Mode: AND NOT" /></para></summary>
    </member>
    <member name="F:Leadtools.RasterRegionCombineMode.AndNotRegion">
      <summary>
            (3)<para>The resulting region includes the intersection of the area inside the existing region and the area outside the new region. The following example shows the result, where the rectangle is the existing region, the ellipse is the new one, and the shaded area is the resulting region.</para><para><img src="RasterRegionCombineMode_AndNotRegion.gif" title="Raster Region Combine Mode: AND NOT Region" /></para></summary>
    </member>
    <member name="F:Leadtools.RasterRegionCombineMode.Or">
      <summary>
            (4)<para>The resulting region includes the area inside the existing region and the area inside the new region. The following example shows the result, where the rectangle is the existing region, the ellipse is the new one, and the shaded area is the resulting region.</para><para><img src="RasterRegionCombineMode_Or.gif" title="Raster Region Combine Mode: OR" /></para></summary>
    </member>
    <member name="F:Leadtools.RasterRegionCombineMode.Xor">
      <summary>
            (5)<para>The resulting region includes the area inside the existing region and the area inside the new region, except for any areas where the two intersect. The following example shows the result, where the rectangle is the existing region, the ellipse is the new one, and the shaded area is the resulting region.</para><para><img src="RasterRegionCombineMode_Xor.gif" title="Raster Region Combine Mode: XOR" /></para></summary>
    </member>
    <member name="F:Leadtools.RasterRegionCombineMode.SetNot">
      <summary>
            (6)<para>The resulting region includes everything in the image, except the new region. The existing region, if any, is discarded. The following example shows the result, where the ellipse is the new region and the shaded area is the resulting region.</para><para><img src="RasterRegionCombineMode_SetNot.gif" title="Raster Region Combine Mode: SET NOT" /></para></summary>
    </member>
    <member name="T:Leadtools.RasterMemoryFlags">
      <summary>
            Indicates the type of memory to allocate.
            </summary>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.Topics.MemoryStorageTypesForImages">Memory Storage Types for Images</see>. Use only RasterMemoryFlags.Conventional or 
            RasterMemoryFlags.Disk when setting defaults.
            </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.None">
      <summary>
            (0x0000)No flags.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.Conventional">
      <summary>
            (0x0001)Use conventional memory.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.User">
      <summary>
            (0x0002)Creates an image where the user maintains the data pointer.
            <para>Some image processing commands, such as <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> and
            <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" />, need to re-allocate the image data. If you create a bitmap with
            <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, and pass it to these command, they will change the bitmap
            to <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> and re-allocate memory.  Your original memory will no
            longer be used.</para></summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.Tiled">
      <summary>
            (0x0004)Creates an image where the data pointers are maintained in tiles, useful for very large images.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.NoTiled">
      <summary>
            (0x0008)Do not allow tiled images.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.Disk">
      <summary>
            (0x0080)Do not use managed memory. Swap to disk only.
            If the image is allocated as Disk, then the image should not be used in multiple threads.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.NoDisk">
      <summary>
            (0x0100)Do not swap to disk using LEAD virtual memory. Windows virtual memory is not affected.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.Compressed">
      <summary>
            (0x0200)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Allocate an RLE-compressed image. You can use this flag with <strong>None</strong> or <strong>NoDisk</strong>. For more information, refer to Speeding Up 1-Bit Documents.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.SuperCompressed">
      <summary>
            (0x0400)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Allocate a CMP-compressed image. You can use this flag with <strong>None</strong> or <strong>NoDisk</strong>. The compression used for 24-bit and 8-bit images is lossy, which means multiple changes to the image can produce some visual loss.
            </summary>
    </member>
    <member name="F:Leadtools.RasterMemoryFlags.WriteableBitmap">
      <summary>
            (0x0800)<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Use a Silverlight <see cref="F:Leadtools.RasterMemoryFlags.WriteableBitmap" /> for memory storage.<br /><strong>This option works only for 32-bit images.</strong>.
            </summary>
    </member>
    <member name="T:Leadtools.RasterWindowLevelMode">
      <summary>
            Indicates whether window level changes are used by the paint and image processing functions or only by the paint functions.
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum RasterWindowLevelMode</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterWindowLevelMode.Paint">
      <summary>
            (0x00)Window level changes used only by the paint functions
            </summary>
    </member>
    <member name="F:Leadtools.RasterWindowLevelMode.PaintAndProcessing">
      <summary>
            (0x01)Window level changes used for both paint and image processing functions
            </summary>
    </member>
    <member name="T:Leadtools.RasterCompression">
      <summary>
            Indicates the compression type for the image data.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterCompression.None">
      <summary>
            (0)Image data is not compressed in memory.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCompression.Rle">
            (1)<summary>
            Image data is RLE compressed in memory.
            </summary></member>
    <member name="F:Leadtools.RasterCompression.Super">
      <summary>
            (2)Image data is compressed in memory using LEAD proprietary compression.
            </summary>
    </member>
    <member name="T:Leadtools.RasterConvertToDibType">
      <summary>
            Options for converting image to Windows Device Independent Bitmap (DIB).
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterConvertToDibType.BitmapInfoHeader">
      <summary>
            (0)DIB that uses a BITMAPINFOHEADER.
            </summary>
    </member>
    <member name="F:Leadtools.RasterConvertToDibType.BitmapV4Header">
      <summary>
            (1)DIB that uses a BITMAPV4HEADER. (Introduced in Windows 95 and Windows NT 4.0).
            </summary>
    </member>
    <member name="F:Leadtools.RasterConvertToDibType.BitmapV5Header">
      <summary>
            (2)DIB that uses a BITMAPV5HEADER (Introduced in Windows 2000 and Windows 98).
            </summary>
    </member>
    <member name="T:Leadtools.RasterImageUnderlayFlags">
      <summary>
            Indicators of how the underlying image is to be positioned.
            </summary>
      <remarks>
        <para>The underlying image can either be stretched or tiled to fill the target image, as shown in the following illustration:</para>
        <para>
          <img src="Underlay.gif" title="Underlay" />
        </para>
      </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.RasterImageUnderlayFlags.None">
      <summary>
            (0x00)Tile the underlay. This repeats the underlying image, so that it fills the target image. This function does not do any resizing; you are responsible for the size of the tiles
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageUnderlayFlags.Stretch">
      <summary>
            (0x01)Stretch the underlay to fit the dimensions of the target image
            </summary>
    </member>
    <member name="T:Leadtools.RasterMetadataFlags">
      <summary>
            Indicates the type of metadata.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterMetadataFlags.None">
      <summary>
            (0)None
            </summary>
    </member>
    <member name="F:Leadtools.RasterMetadataFlags.Comments">
      <summary>
            (0x0001)Comments
            </summary>
    </member>
    <member name="F:Leadtools.RasterMetadataFlags.Tags">
      <summary>
            (0x0002)Tags
            </summary>
    </member>
    <member name="F:Leadtools.RasterMetadataFlags.Markers">
      <summary>
            (0x0004)Markers
            </summary>
    </member>
    <member name="F:Leadtools.RasterMetadataFlags.GeoKeys">
      <summary>
            (0x0008)GeoKeys
            </summary>
    </member>
    <member name="F:Leadtools.RasterMetadataFlags.All">
      <summary>
            (Comments | Tags | Markers | GeoKeys)All (Comments, Tags, Markers and GeoKeys)
            </summary>
    </member>
    <member name="T:Leadtools.RasterGetSetOverlayImageMode">
      <summary>
            Determines how to set or retrieve the overlay <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <remarks>
        <para>This enumeration is used for the <i>mode</i> parameter for
            <see cref="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)">RasterImage.GetOverlayImage</see> and
            <see cref="M:Leadtools.RasterImage.SetOverlayImage(System.Int32,Leadtools.RasterImage,Leadtools.RasterGetSetOverlayImageMode)">RasterImage.SetOverlayImage</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayImageMode.Copy">
      <summary>
            (0x0000)A copy of the overlay image is retrieved/inserted from/into the overlay list.
            </summary>
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayImageMode.NoCopy">
      <summary>
            (0x0001)The actual overlay image is retrieved/inserted. No copy is made.
            </summary>
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayImageMode.Move">
      <summary>
            (0x0003)For <see cref="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)">RasterImage.GetOverlayImage</see>, the actual overlay
            image is retrieved. The image is also removed from the overlay list
            <para>For <see cref="M:Leadtools.RasterImage.SetOverlayImage(System.Int32,Leadtools.RasterImage,Leadtools.RasterGetSetOverlayImageMode)">RasterImage.SetOverlayImage</see>, the overlay image is
            moved into the overlay list. It will also be reset, so you cannot make changes to it.</para></summary>
    </member>
    <member name="T:Leadtools.RasterUpdateOverlayBitsFlags">
      <summary>
            Determines whether the main image or the overlay image should be updated.
            </summary>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <noexample />
      <java>
        <pre>public enum RasterUpdateOverlayBitsFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterUpdateOverlayBitsFlags.None">
      <summary>
            (0)No action.
            </summary>
    </member>
    <member name="F:Leadtools.RasterUpdateOverlayBitsFlags.FromOverlay">
      <summary>
            Update the main image bits for the corresponding bitplane using the data from the overlay image.
            </summary>
    </member>
    <member name="F:Leadtools.RasterUpdateOverlayBitsFlags.FromImage">
      <summary>
            Update the overlay image with the bits from the corresponding bit plane of the main image. Can be or-ed with <strong>Clear</strong></summary>
    </member>
    <member name="F:Leadtools.RasterUpdateOverlayBitsFlags.Clear">
      <summary>
            Clears the bits from the bitplane associated with the overlay that are not contained in the overlay image
            (use only in combination with <strong>FromOverlay</strong>)
            </summary>
    </member>
    <member name="T:Leadtools.RasterGetSetOverlayAttributesFlags">
      <summary>
            Determines which attributes are to be retrieved or changed.
            </summary>
      <remarks>
        <para>This enumeration is used with the <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see>
            and the <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see> methods.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayAttributesFlags.None">
      <summary>
            (0)No action.
            </summary>
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayAttributesFlags.Origin">
      <summary>
            (0x0001)The top-left position should be retrieved/changed. <see cref="P:Leadtools.RasterOverlayAttributes.Origin">RasterOverlayAttributes.Origin</see> contains/will be updated with the new top-left offset.
            </summary>
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayAttributesFlags.Color">
      <summary>
            (0x0002)The color should be retrieved/changed.
            <see cref="P:Leadtools.RasterOverlayAttributes.Color">RasterOverlayAttributes.Color</see> contains/will be updated with the
            new color.
            </summary>
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayAttributesFlags.Flags">
      <summary>
            (0x0004)The flags should be retrieved/changed.
            <para>The following properties should be retrieved/changed:</para><list type="bullet"><item><description><see cref="P:Leadtools.RasterOverlayAttributes.AutoPaint">RasterOverlayAttributes.AutoPaint</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.AutoProcess">RasterOverlayAttributes.AutoProcess</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.UseBitPlane">RasterOverlayAttributes.UseBitPlane</see></description></item></list></summary>
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayAttributesFlags.BitIndex">
      <summary>
            (0x0008)The corresponding bitplane position should be retrieved/changed.
            <see cref="P:Leadtools.RasterOverlayAttributes.BitPosition">RasterOverlayAttributes.BitPosition</see> contains/will be updated with the
            new bitplane index.
            </summary>
    </member>
    <member name="F:Leadtools.RasterGetSetOverlayAttributesFlags.Dicom">
      <summary>
            (0x0010)The DICOM-related attributes should be retrieved/changed.
            <para>The following properties should be retrieved/changed:</para><list type="bullet"><item><description><see cref="P:Leadtools.RasterOverlayAttributes.Rows">RasterOverlayAttributes.Rows</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.Columns">RasterOverlayAttributes.Columns</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.Type">RasterOverlayAttributes.Type</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.BitsAllocated">RasterOverlayAttributes.BitsAllocated</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.Description">RasterOverlayAttributes.Description</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.Subtype">RasterOverlayAttributes.Subtype</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.Label">RasterOverlayAttributes.Label</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.RoiArea">RasterOverlayAttributes.RoiArea</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.RoiMean">RasterOverlayAttributes.RoiMean</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.RoiStandardDeviation">RasterOverlayAttributes.ROIStandardDeviation</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.FramesInOverlay">RasterOverlayAttributes.FramesInOverlay</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.ImageFrameOrigin">RasterOverlayAttributes.ImageFrameOrigin</see></description></item><item><description><see cref="P:Leadtools.RasterOverlayAttributes.ActivationLayer">RasterOverlayAttributes.ActivationLayer</see></description></item></list></summary>
    </member>
    <member name="T:Leadtools.RasterPaintSizeMode">
      <summary>
            Determines how to fit the image in the destination rectangle.
            </summary>
      <remarks>
            Used by the <see cref="M:Leadtools.RasterImage.CalculatePaintModeRectangle(System.Int32,System.Int32,Leadtools.LeadRect,Leadtools.RasterPaintSizeMode,Leadtools.RasterPaintAlignMode,Leadtools.RasterPaintAlignMode)">RasterImage.CalculatePaintModeRectangle</see> method to
            determines how to fit the image in the destination rectangle.
            </remarks>
      <noexample />
      <java>
        <pre>public enum RasterPaintSizeMode</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterPaintSizeMode.Normal">
      <summary>
            Normal, no sizing
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintSizeMode.Fit">
      <summary>
            Fit the image into the destination rectangle while maintaining the aspect ratio.  If the image size is smaller than the destination rectangle, no resizing is done
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintSizeMode.FitAlways">
      <summary>
            Always fit the image into the destination rectangle while maintaining the aspect ratio even if the image size is smaller than the destination rectangle
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintSizeMode.FitWidth">
      <summary>
            Fit the image width to be the size of the width of the destination rectangle while maintaining the aspect ratio
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintSizeMode.Stretch">
      <summary>
            Fit the image to fill the destination rectangle.  Aspect ratio might not be maintained.
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintSizeMode.FitHeight">
      <summary>
            Fit the image height to be the size of the height of the destination rectangle while maintaining the aspect ratio
            </summary>
    </member>
    <member name="T:Leadtools.RasterPaintAlignMode">
      <summary>
            Determines how to align the image in the destination rectangle.
            </summary>
      <remarks>
            Used by the <see cref="M:Leadtools.RasterImage.CalculatePaintModeRectangle(System.Int32,System.Int32,Leadtools.LeadRect,Leadtools.RasterPaintSizeMode,Leadtools.RasterPaintAlignMode,Leadtools.RasterPaintAlignMode)">RasterImage.CalculatePaintModeRectangle</see> method to
            determines how to align the image in the destination rectangle.
            </remarks>
      <noexample />
      <java>
        <pre>public enum RasterPaintAlignMode</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterPaintAlignMode.Near">
      <summary>
            (0)Align the image to the left (if this is the horizontal alignment) or top (if this is the vertical alignment) of the destination rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintAlignMode.Center">
      <summary>
            (1)Center the image in the middle of the destination rectangle. If the image size is greater than the destination rectangle size then do not center the image.
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintAlignMode.CenterAlways">
      <summary>
            (2)Center the image in the middle of the destination rectangle.
            </summary>
    </member>
    <member name="F:Leadtools.RasterPaintAlignMode.Far">
      <summary>
            (3)Align the image to the right (if this is the horizontal alignment) or bottom (if this is the vertical alignment) of the destination rectangle.
            </summary>
    </member>
    <member name="T:Leadtools.RasterSizeFlags">
      <summary>
            Flags which control the behavior of image resize methods.
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum RasterSizeFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterSizeFlags.None">
      <summary>
            (0x0000)Resize normally
            </summary>
    </member>
    <member name="F:Leadtools.RasterSizeFlags.FavorBlack">
      <summary>
            (0x0001)<para><see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Preserve black objects when making the image smaller. This option
            affects only 1-bit, black-and-white images, where it prevents the disappearance of thin lines. You can use a bitwise OR ( | ) to combine
            this flag with another one. For example, <c><strong>Resample</strong> | <strong>FavorBlack</strong></c> causes color images to be resampled, 
            but applies the favor-black option to 1-bit, black-and-white images.</para><para>If you apply this flag to an image that has more than 1 bit per pixel, then the behavior is undefined.</para></summary>
    </member>
    <member name="F:Leadtools.RasterSizeFlags.Resample">
      <summary>
            (0x0002)Use linear interpolation and averaging to produce a higher-quality image
            </summary>
    </member>
    <member name="F:Leadtools.RasterSizeFlags.Bicubic">
      <summary>
            (0x0004)Use bicubic interpolation and averaging to produce a higher quality image. This is slower than <strong>Resample</strong></summary>
    </member>
    <member name="F:Leadtools.RasterSizeFlags.ScaleToGray">
      <summary>
            (0x0008)<para><see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see>. Use interpolation to display black and white images using shades of gray when 
            the image is resized. This improves the readability when the image is scaled up or down. The generated image is 8-bit grayscale, so this option 
            should be used only for black and white images.</para></summary>
    </member>
    <member name="T:Leadtools.RasterImageAnimationDisposalMethod">
      <summary>
            Used for the disposal methods used after rendering each frame in an animated image.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImageAnimator" /> class will take care of interpreting the value of the disposal method and update the target image accordingly.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationOffset">RasterImage.AnimationOffset</see></example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput">RasterImage.AnimationWaitUserInput</seealso>
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset">RasterImage.AnimationOffset</seealso>
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay">RasterImage.AnimationDelay</seealso>
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground">RasterImage.AnimationBackground</seealso>
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod">RasterImage.AnimationDisposalMethod</seealso>
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop">RasterImage.AnimationGlobalLoop</seealso>
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize">RasterImage.AnimationGlobalSize</seealso>
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground">RasterImage.AnimationGlobalSize</seealso>
      <seealso cref="T:Leadtools.RasterImageAnimator">RasterImageAnimator</seealso>
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
    </member>
    <member name="F:Leadtools.RasterImageAnimationDisposalMethod.None">
      <summary>
            (0)Do nothing
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimationDisposalMethod.Leave">
      <summary>
            (1)Leave the target image as is
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimationDisposalMethod.RestoreBackground">
      <summary>
            (2)Restore the background
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageAnimationDisposalMethod.RestorePrevious">
      <summary>
            (3)Restore the previous frame
            </summary>
    </member>
    <member name="T:Leadtools.LeadtoolsException">
      <summary>
            Base class for all exception classes thrown by LEADTOOLS.
            </summary>
      <remarks>
            The <see cref="T:Leadtools.LeadtoolsException" /> is an abstract class that provide common functionality for all the exception classes used in LEADTOOLS
            such as <see cref="T:Leadtools.RasterException" />.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterException" /></example>
    </member>
    <member name="M:Leadtools.LeadtoolsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadtoolsException" /> class with the specified serialization and context information.
            </summary>
      <param name="info">The data for serializing or de-serializing the object.</param>
      <param name="context">The source and destination for the object.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadtoolsException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadtoolsException" /> class with its <see cref="P:System.Exception.Message" /> string set to the empty
            string ("") and its inner exception set to a null reference (Nothing in Visual Basic).
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadtoolsException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadtoolsException" /> class with its <see cref="P:System.Exception.Message" /> string set to
            <paramref name="message" />, and its inner exception set to a null reference (Nothing in Visual Basic).
            </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. The content of message is intended to be understood by humans.
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
      <remarks>
            The constructor initializes the <see cref="P:System.Exception.Message" /> property of the new instance using <paramref name="message" />.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadtoolsException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadtoolsException" /> class with a specified error message and a reference to the inner
            exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="inner">The exception that is the cause of the current exception. If the innerException parameter is not a null reference
            (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
      <remarks>
            An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the
            <see cref="P:System.Exception.InnerException" /> property. The InnerException property returns the same value that is passed into the constructor,
            or a null reference (Nothing in Visual Basic) if the InnerException property does not supply the inner exception value to the
            constructor.
            </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterException">
      <summary>
            The exception that is thrown when a LEADTOOLS error occurs.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterException" /> class defines a <see cref="P:Leadtools.RasterException.Code" /> property that can be examined to determine what caused the error.</para>
        <para>Default messages are implemented for each <see cref="P:Leadtools.RasterException.Code" />. Get the message by calling the <see cref="M:Leadtools.RasterException.GetCodeMessage(Leadtools.RasterExceptionCode)" /> method.</para>
      </remarks>
      <example>
        <!--RasterException-->
      </example>
      <java>
        <pre>public class RasterException extends LeadtoolsException </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterException" /> class with default parameters.
            </summary>
      <remarks>
        <para>This constructor initializes the class as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Value</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Message" />
            </term>
            <description>An empty string.</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Code" />
            </term>
            <description>
              <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.Success</see>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.Exception.InnerException" />
            </term>
            <description>
              <strong>Null</strong> reference (<strong>Nothing</strong> in Visual Basic).</description>
          </item>
        </list>
      </remarks>
      <noexample />
      <java>
        <pre>public RasterException()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterException" /> class with the specified message.
            </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. The content of message is intended to be understood by humans.
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
      <remarks>
        <para>This constructor initializes the member of the class as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Value</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Message" />
            </term>
            <description>
              <paramref name="message" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Code" />
            </term>
            <description>
              <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.Success</see>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.Exception.InnerException" />
            </term>
            <description>
              <strong>Null</strong> reference (<strong>Nothing</strong> in Visual Basic).</description>
          </item>
        </list>
      </remarks>
      <noexample />
      <java>
        <pre>public RasterException(String message)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterException" /> class with the specified message and inner exception.
            </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. The content of message is intended to be understood by humans.
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
      <param name="inner">The exception that is the cause of the current exception. If the innerException parameter is not a <strong>Null</strong>
            reference (<strong>Nothing</strong> in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
      <remarks>
        <para>This constructor initializes the member of the class as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Value</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Message" />
            </term>
            <description>
              <paramref name="message" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Code" />
            </term>
            <description>
              <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.Success</see>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.Exception.InnerException" />
            </term>
            <description>
              <b>inner</b>
            </description>
          </item>
        </list>
      </remarks>
      <noexample />
      <java>
        <pre>
public RasterException(
  String message, 
  RuntimeException inner
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterException" /> class with the specified serialization and context information.
            </summary>
      <param name="info">The data for serializing or de-serializing the object.</param>
      <param name="context">The source and destination for the object.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterException.#ctor(System.String,Leadtools.RasterExceptionCode)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterException" /> class with a message and LEADTOOLS exception code.
            </summary>
      <param name="message">A <see cref="T:System.String" /> that describes the error. The content of message is intended to be understood by humans.
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
      <remarks>
        <param name="code">A <see cref="T:Leadtools.RasterExceptionCode" /> that specifies what caused this exception.</param>
        <para>This constructor initializes the class as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Value</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Message" />
            </term>
            <description>
              <paramref name="message" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Code" />
            </term>
            <description>
              <paramref name="code" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.Exception.InnerException" />
            </term>
            <description>
              <strong>Null</strong> reference (<strong>Nothing</strong> in Visual Basic).</description>
          </item>
        </list>
      </remarks>
      <noexample />
      <java>
        <pre>
public RasterException(
  String message, 
  RasterExceptionCode code
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterException.#ctor(Leadtools.RasterExceptionCode)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterException" /> class with a LEADTOOLS exception code.
            </summary>
      <param name="code">A <see cref="T:Leadtools.RasterExceptionCode" /> that specifies what caused this exception.</param>
      <remarks>
        <para>This constructor initializes the class as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Value</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Message" />
            </term>
            <description>An error string that specifies the error automatically populated by the class.</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.RasterException.Code" />
            </term>
            <description>
              <paramref name="code" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.Exception.InnerException" />
            </term>
            <description>
              <strong>Null</strong> reference (<strong>Nothing</strong> in Visual Basic).</description>
          </item>
        </list>
      </remarks>
      <noexample />
      <java>
        <pre>public RasterException(RasterExceptionCode code)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterException.GetCodeMessage(Leadtools.RasterExceptionCode)">
      <summary>
            Gets the error string that corresponds to a specific <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode</see>. 
            </summary>
      <param name="code">A <see cref="T:Leadtools.RasterExceptionCode" /> value to get the string message for.</param>
      <returns>A <see cref="T:System.String" /> that contains the current message for <paramref name="code" /></returns>
      <remarks>
            By default, <see cref="T:Leadtools.RasterException" /> has a string message for each <see cref="T:Leadtools.RasterExceptionCode" />. GSet this message by
            calling this method.
            </remarks>
      <noexample />
      <java>
        <pre>static public String getCodeMessage(RasterExceptionCode code)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <remarks>
        <see cref="M:Leadtools.RasterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> sets a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with all the exception object data targeted for serialization. During
            de-serialization, the exception is reconstituted from the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> transmitted over the stream.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterException.FromHResult(System.Int32)">
      <summary>
            Creates a <see cref="T:Leadtools.RasterException" /> object from the specified HRESULT value, if the value is a valid LEADTOOLS error code.
            </summary>
      <param name="hresult">A <see cref="T:System.Int32">int</see> that represents a <strong>HRESULT</strong> value used to create a <see cref="T:Leadtools.RasterException" /> object.</param>
      <returns>A new <see cref="T:Leadtools.RasterException" /> based on the specified LEADTOOLS HRESULT code, or null, if the value is not a valid LEADTOOLS error code.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.ArgumentOutOfRangeException(System.String,System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.ArgumentOutOfRangeException(System.String,System.Object,System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.ArgumentNullException(System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.ArgumentException(System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.ArgumentException(System.String,System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.InvalidOperationException(System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.OcrComponentMissingException(System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.CheckErrorCode(System.Int32)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.ArgumentOperationException(System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.Throw(System.Int32)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.Throw(Leadtools.RasterException)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterException.Throw(Leadtools.RasterExceptionCode)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterException.Code">
      <summary>
            Gets or sets the code that caused this exception.
            </summary>
      <value>A <see cref="T:Leadtools.RasterExceptionCode" /> value that specifies what caused this exception.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterException" /></example>
      <java>
        <pre>
public RasterExceptionCode getCode()
public void setCode(RasterExceptionCode value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterException.HResult">
      <summary>
            Gets the <strong>HRESULT</strong> associated with this exception.
            </summary>
      <value>
            The <strong>HRESULT</strong> associated with this exception.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterException" /></example>
      <winrt />
    </member>
    <member name="P:Leadtools.RasterException.Message">
      <summary>
            Gets a message that describes the current exception.
            </summary>
      <value>The error message that explains the reason for the exception, or an empty string("").</value>
      <remarks>
        <para>
              Overrides <see cref="P:System.Exception.Message" />.
            </para>
        <para>
              If this <see cref="T:Leadtools.RasterException" /> instance was initialized with a specific <see cref="P:Leadtools.RasterException.Code" /> but no specific message,
             then this property will return the default error string that corresponds to the <see cref="P:Leadtools.RasterException.Code" /> populated automatically by LEADTOOLS.</para>
        <para>Get the error string that corresponds to any <see cref="P:Leadtools.RasterException.Code" /> by calling the <see cref="M:Leadtools.RasterException.GetCodeMessage(Leadtools.RasterExceptionCode)" /> method.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterException" /></example>
      <java>
        <pre>public String getMessage()</pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterExceptionCode">
      <summary>
            Used as a value for the <see cref="P:Leadtools.RasterException.Code">RasterException.Code</see> property.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Success">
      <summary>
            Successful.  No errors.
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Failure">
      <summary>
            Not successful
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SuccessDelete">
      <summary>
            Successful. Delete file before quitting
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SuccessRetry">
      <summary>
            Successful. Retry doing the failed operation
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SuccessPartialFailure">
      <summary>
            Method called recursively. A least one call was successful, but some failed
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidParameter">
      <summary>
            Invalid parameter passed
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidStructSize">
      <summary>
            The structure size is invalid
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BitsPerPixel">
      <summary>
            Invalid bits/pixel
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidRange">
      <summary>
            Invalid width/height
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.IncorrectWidthAdjusted">
      <summary>
            The width seems to be incorrect and has been automatically adjusted
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoImage">
      <summary>
            Invalid bitmap handle
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NullPointer">
      <summary>
            A NULL pointer was passed
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NotInitialized">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SignedDataNotSupported">
      <summary>
            Signed image data not supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BufferTooSmall">
      <summary>
            The buffer size is too small
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Exception">
      <summary>
            An unspecified exception occurred - could be memory access violations
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NothingToDo">
      <summary>
            There is nothing to do.  No items was found
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ImageEmpty">
      <summary>
            Image is empty
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Internal">
      <summary>
            Internal error
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.QFactor">
      <summary>
            Invalid QFactor specified
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidHandle">
      <summary>
            Invalid handle
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BadPointer">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Gray32Unsupported">
      <summary>
            32-bit Grayscale images not supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidLutLength">
      <summary>
            The LUT length is invalid. LUT Length should be 1 &lt;&lt; (<see cref="P:Leadtools.RasterImage.HighBit" /> - <see cref="P:Leadtools.RasterImage.LowBit" /> + 1)
            </summary>
      <isnew>2/28/2009</isnew>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidDib">
      <summary>
            The DIB is invalid
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BitmapFormatUnsupported">
      <summary>
            The bitmap format is not supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SuccessAbort">
      <summary>
            Method successful. You can quit now
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.UserAbort">
      <summary>
            User has aborted operation
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NormalAbort">
      <summary>
            Escape key pressed - or user aborted operation
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoMemory">
      <summary>
            Not enough memory available
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MemoryTooLow">
      <summary>
            Not enough memory available
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FeatureNotSupported">
      <summary>
            Feature not supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DocumentNotEnabled">
      <summary>
            Document capability is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MedicalNotEnabled">
      <summary>
            Medical Express capability is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ExtGrayNotEnabled">
      <summary>
            Extended grayscale support is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ProNotEnabled">
      <summary>
            LEADTOOLS Pro Features are not enabled
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.LzwLocked">
      <summary>
            The LZW capabilities are locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.JbigNotEnabled">
      <summary>
            JBIG capability is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Jbig2Locked">
      <summary>
            JBIG2 file format is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kLocked">
      <summary>
            J2K support is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfNotEnabled">
      <summary>
            PDF capability is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CmwLocked">
      <summary>
            The CMW support is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.AbcLocked">
      <summary>
            ABC file format is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MedicalNetNotEnabled">
      <summary>
            Medical Network Express capability is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NitfLocked">
      <summary>
            NITF support is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DicomNotEnabled">
      <summary>
            DICOM support is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.JpipLocked">
      <summary>
            JPEP support is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FormsLocked">
      <summary>
            Forms support is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DocumentWritersNotEnabled">
      <summary>
            Document Writers capability is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MediaWriterNotEnabled">
      <summary>
            Media writer capability is required to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DocumentWritersPdfNotEnabled">
      <summary>
            Document Writer PDF support is locked
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.LeadPrinterNotEnabled">
      <summary>
            LEADTOOLS Printer Driver capability is required to use this function
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.LeadPrinterServerNotEnabled">
      <summary>
            LEADTOOLS Printer Driver Server is required to use this function
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileNotFound">
      <summary>
            File not found
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileOpen">
      <summary>
            Not able to open file
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileWrite">
      <summary>
            Error writing file
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileGone">
      <summary>
            File not present - abort
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileRead">
      <summary>
            Error reading file
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileSeek">
      <summary>
            Error seeking to position 
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DiskIsFull">
      <summary>
            not enough disk space
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileReadOnly">
      <summary>
            File is read-only. Cannot open file with write access
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileFormat">
      <summary>
            Invalid file format
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidFileName">
      <summary>
            Invalid filename specified
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FileCreate">
      <summary>
            Error creating file
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DxfCodecMissing">
      <summary>
            The DXF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.JbigCodecMissing">
      <summary>
            The JBIG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.WmfCodecMissing">
      <summary>
            WMF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CmwCodecMissing">
      <summary>
            CMW codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CmpCodecMissing">
      <summary>
            CMP codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FaxCodecMissing">
      <summary>
            FAX codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfCodecMissing">
      <summary>
            PDF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TifCodecMissing">
      <summary>
            TIF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DcfCodecMissing">
      <summary>
            DCF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DcrCodecMissing">
      <summary>
            DCR codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.KdcCodecMissing">
      <summary>
            KDC codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DcsCodecMissing">
      <summary>
            DCS codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.AbcCodecMissing">
      <summary>
            ABC codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.AbiCodecMissing">
      <summary>
            ABI (ABIC) codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Jb2CodecMissing">
      <summary>
            JB2 (JBIG2) codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kCodecMissing">
      <summary>
            J2K codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PngCodecMissing">
      <summary>
            PNG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ColorConversionDllMissing">
      <summary>
            Color conversion DLL is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.VectorKernelMissing">
      <summary>
            Vector kernel DLL is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SegmentationDllMissing">
      <summary>
            Segmentation DLL is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.AnnotationDllMissing">
      <summary>
            Annotation DLL is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ImageProcessingDllMissing">
      <summary>
            Image Processing DLL is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BmpCodecMissing">
      <summary>
            BMP codec is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.RawCodecMissing">
      <summary>
            RAW codec is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ClrCodecMissing">
      <summary>
            Leadtools.ColorConversion.dll assembly is not loaded
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.RtfCodecMissing">
      <summary>
            RTF codec is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfEngineMissing">
      <summary>
            Leadtools.PdfEngine.dll assembly is not found
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CgmCodecMissing">
      <summary>
            CGM codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ClpCodecMissing">
      <summary>
            CLP codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CrwCodecMissing">
      <summary>
            CRW codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DrwCodecMissing">
      <summary>
            DRW codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DwfCodecMissing">
      <summary>
            DWF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DwgCodecMissing">
      <summary>
            DWG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.EpsCodecMissing">
      <summary>
            EPS codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FitCodecMissing">
      <summary>
            FIT codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.FlcCodecMissing">
      <summary>
            FLC codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.GifCodecMissing">
      <summary>
            GIF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.HdpCodecMissing">
      <summary>
            HDP codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.IffCodecMissing">
      <summary>
            IFF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Jp2CodecMissing">
      <summary>
            JP2 codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.JpmCodecMissing">
      <summary>
            JPM codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CinCodecMissing">
      <summary>
            CIN codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.LmbCodecMissing">
      <summary>
            LMB codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MifCodecMissing">
      <summary>
            MIF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MngCodecMissing">
      <summary>
            MNG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MspCodecMissing">
      <summary>
            MSP codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NtfCodecMissing">
      <summary>
            NTF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PcdCodecMissing">
      <summary>
            PCD codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PcxCodecMissing">
      <summary>
            PCX codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PsdCodecMissing">
      <summary>
            PSD codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PspCodecMissing">
      <summary>
            PSP codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.RasCodecMissing">
      <summary>
            RAS codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SffCodecMissing">
      <summary>
            SFF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SgiCodecMissing">
      <summary>
            SGI codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SgmCodecMissing">
      <summary>
            SGM codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ShpCodecMissing">
      <summary>
            SHP codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SnpCodecMissing">
      <summary>
            SNP codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgCodecMissing">
      <summary>
            SVG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TdbCodecMissing">
      <summary>
            TDB codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TgaCodecMissing">
      <summary>
            TGA codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.VecCodecMissing">
      <summary>
            VEC codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.VpgCodecMissing">
      <summary>
            VPG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.WfxCodecMissing">
      <summary>
            WFX codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.WmzCodecMissing">
      <summary>
            WMZ codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.WpgCodecMissing">
      <summary>
            WPG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.XpsCodecMissing">
      <summary>
            XPS codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.XwdCodecMissing">
      <summary>
            XWD codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ItgCodecMissing">
      <summary>
            ITG codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.VffCodecMissing">
      <summary>
            VFF codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.JxrCodecMissing">
      <summary>
            JXR codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.JlsCodecMissing">
      <summary>
            JLS codec is needed to use this method
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoOverlay">
      <summary>
            The overlay does not exist
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.OverlayIndex">
      <summary>
            Something is wrong with the overlay index
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.WindowSize">
      <summary>
            Invalid window size
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidCodecName">
      <summary>
            Invalid codec name
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PageNotFound">
      <summary>
            Page not found
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DeleteLastPage">
      <summary>
            You cannot delete a page from a file containing only one page
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ImageType">
      <summary>
            Image format recognized, but sub-type not supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BadDecodeState">
      <summary>
            premature end-of-line code
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.LayerMissing">
      <summary>
            The PSD Layer is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.OutputType">
      <summary>
            Invalid compression format
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.VersionNumber">
      <summary>
            bad version number
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ChannelMissing">
      <summary>
            The PSD Channel is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Jp2Failure">
      <summary>
            Error in JP2 Box values
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Jp2Signature">
      <summary>
            The header does not match the JP2 signature - not a JP2 file
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Jp2Unsupported">
      <summary>
            JP2 file has a feature that is unsupported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kFailure">
      <summary>
            Invalid save options were specified to the encoder
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kNoSoc">
      <summary>
            File header does not contain SOC marker
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kNoSot">
      <summary>
            File contains complete header but no compressed image data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kInformationSet">
      <summary>
            Invalid save options were specified or file includes invalid encoded values
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kLowTargetSize">
      <summary>
            Compression ratio, target file size, or tile size was too small for encoder
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kDecompositionLevel">
      <summary>
            Specified Wavelet decomposition level was too high
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kMarkerValue">
      <summary>
            Decoder could not translate J2K marker - file is corrupt or invalid
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kUnsupported">
      <summary>
            J2K file has image with more than 30 bits per component
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.J2kBoxNotAvailable">
      <summary>
            The required J2K box is not available
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoStamp">
      <summary>
            Stamp not found
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidStampSize">
      <summary>
            Stamp size is too big or invalid bits/pixel, etc
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BadStamp">
      <summary>
            Stamp is present but data is corrupted
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BadMarker">
      <summary>
            Bad JPEG marker
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BadResyncMarker">
      <summary>
            Bad JPEG Resync marker
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MarkerSizeTooBig">
      <summary>
            The size of the JPEG marker cannot exceed 64K
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MarkerMissing">
      <summary>
            The required JPEG marker is missing
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MarkerIndex">
      <summary>
            The marker index is invalid (too big)
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.AudioMissing">
      <summary>
            The audio data is not present
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ExtensionsMissing">
      <summary>
            This file does not contain Exif extensions
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoChange">
      <summary>
            The image has not changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ImageSize">
      <summary>
            Image size not sufficient
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoMessage">
      <summary>
            There is no message
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidPassword">
      <summary>
            Invalid password
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NotEnoughImages">
      <summary>
            Not enough images
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.UnknownCompression">
      <summary>
            Unknown compression format
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CompactAborted">
      <summary>
            The compact method was finished without copying all the pages
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BadTag">
      <summary>
            Bad TIFF tag
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TagMissing">
      <summary>
            Tag not found
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CUBusy">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidTableType">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidBuffer">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MissingTileData">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidQValue">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidData">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidCompressedType">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidComponentNumber">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidPixelType">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidPixelSampling">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidImageDimensions">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidTileDimension">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidPixBufferDimensions">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SegmentOverflow">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidSubsampling">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidQVisTable">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidDCCodeTable">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidACCodeTable">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InsufficientData">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MissingFunctionPointer">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TooManyDCCodeTables">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TooManyACCodeTables">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidSubImage">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidAbortion">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CUNoSupport">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CUFailure">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CompressedDataFailure">
      <summary>
            Internal error - call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfFileEncrypted">
      <summary>
            PDF Error - The file is encrypted and password is not supplied
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfInvalidPassword">
      <summary>
            PDF Error - Invalid password specified
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfFaxNotEnabled">
      <summary>
            PDF Error - FAX support is required for this operation
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfJpegNotEnabled">
      <summary>
            PDF Error - JPEG support is required for this operation
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfInvDocStructuringComments">
      <summary>
            PDF Error - Invalid Document Structuring comments (Ps and EPS)
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfFontsDirectoryNotFound">
      <summary>
            PDF Error - Could not find Fonts directory
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfCannotEditFile">
      <summary>
            PDF Error - Cannot insert, delete, append or replace pages
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfBadContent">
      <summary>
            PDF Error - File is corrupted
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfBadInitializationFiles">
      <summary>
            PDF Error - Either the files required for initializing the PDF engine were not found or they were found but incorrect
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PdfBadInterpageLinks">
      <summary>
            PDF Warning - PDF has "internal links" which refer to other pages that do not exist
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidColorspace">
      <summary>
            Color Conversion Error - Invalid colorspace
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidFormat">
      <summary>
            Color Conversion - Invalid format
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.UnsupportedMethod">
      <summary>
            Color Conversion - Method not supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.OpeningProfile">
      <summary>
            Color Conversion - Error opening profile
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidColorProfile">
      <summary>
            Color Conversion - Invalid color profile
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.UVNotMultiples">
      <summary>
            Color Conversion - U and V not multiples
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoNonplanarVerticalSubsamplingSupported">
      <summary>
            No non planar vertical sub sampling supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PlanarAlignmentNotSupported">
      <summary>
            Color Conversion - Planar alignment not supported
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.UnsupportedConversion">
      <summary>
            Color Conversion - Unsupported conversion
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TruncateHeight">
      <summary>
            Color Conversion - Truncate height
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TruncateWidth">
      <summary>
            Color Conversion - Truncate width
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.TruncateWidthAndHeight">
      <summary>
            Color Conversion - Truncate width and height
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ICCUnknownTag">
      <summary>
            Color Conversion - Unknown ICC profile Tag
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ICCUnknownType">
      <summary>
            Color Conversion - Unknown ICC profile Type
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ICCUnknownTagAndType">
      <summary>
            Color Conversion - Unknown ICC profile Tag and Type
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidICCProfile">
      <summary>
            Color Conversion - Invalid ICC profile
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ICCImageNotSupported">
      <summary>
            Color Conversion - Invalid ICC profile
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoProfile">
      <summary>
            Color Conversion - The ICC profile was not found
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.CorruptProfile">
      <summary>
            Color Conversion - The ICC profile was invalid
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.DecodingProfile">
      <summary>
            Color Conversion - An error has occured while decoding the profile
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessBadState">
      <summary>
            Preprocessing engine is in bad state. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessInit">
      <summary>
            Preprocessing engine initialization error or no appropriate license. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessCantScaleEdgeSteps">
      <summary>
            Preprocessing engine attempted to scale an edge steps format word. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessWrongWord">
      <summary>
            Preprocessing engine word does not have blobs of that type. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessCantFindPointBand">
      <summary>
            Preprocessing engine cannot find point band. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessUnmatchedBlockRight">
      <summary>
            Preprocessing engine unmatched block right. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessUnmatchedBlockLeft">
      <summary>
            Preprocessing engine unmatched block left. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessUnmatchedBlockRightRemaining">
      <summary>
            Preprocessing engine unmatched block right remaining. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessCodesIllegalsum">
      <summary>
            Preprocessing engine illegal sum of chain codes. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalSampleSize">
      <summary>
            Preprocessing engine illegal sample size. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalCircularSpec">
      <summary>
            Preprocessing engine illegal circular/linear specification. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalEssentialSpec">
      <summary>
            Preprocessing engine illegal essential/non-essential specification. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalMinMaxSpec">
      <summary>
            Preprocessing engine illegal min or max specification. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalSampleCount">
      <summary>
            Preprocessing engine illegal sample count. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalMeadnSpec">
      <summary>
            Preprocessing engine illegal prototype mean. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalVarianceSpec">
      <summary>
            Preprocessing engine illegal prototype variance. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalDistribution">
      <summary>
            Preprocessing engine illegal prototype distribution. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalSignificanceSpec">
      <summary>
            Preprocessing engine illegal significance specification. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalStyleSpec">
      <summary>
            Preprocessing engine illegal prototype style specification. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalFloat">
      <summary>
            Preprocessing engine illegal float specification. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalNumSets">
      <summary>
            Preprocessing engine illegal number of feature sets. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalShortName">
      <summary>
            Preprocessing engine illegal short name for a feature. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalFeatureParam">
      <summary>
            Preprocessing engine illegal feature parameter spec. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalNumFeatures">
      <summary>
            Preprocessing engine illegal number of features in set. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessHeapFull">
      <summary>
            Preprocessing engine heap size exceeded. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessIllegalAmbiguitySpecification">
      <summary>
            Preprocessing engine illegal ambiguity specification. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessInvalidUnicodeCharset">
      <summary>
            Preprocessing engine invalid Unicode character set. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessBadOkMode">
      <summary>
            Preprocessing engine bad OK mode. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessBadRejectMode">
      <summary>
            Preprocessing engine bad reject mode. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessReadingTemplateFile">
      <summary>
            Preprocessing engine error reading template file. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessReadingEdgesFile">
      <summary>
            Preprocessing engine error while reading edges from file. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PreProcessCantOpenChoiceFile">
      <summary>
            Preprocessing engine could not open choice file. Call LEAD
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MedicalViewerActionNotAdded">
      <summary>
            The sepcified action is not added to the Image Viewer Cell
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MedicalViewerActionAlreadyAdded">
      <summary>
            The sepcified action is already added to the Image Viewer Cell
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.KernelExpired">
      <summary>
            The LEADTOOLS Kernel has expired
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ArgumentOutOfRange">
      <exclude />
      <winrt />
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ArgumentNull">
      <exclude />
      <winrt />
    </member>
    <member name="F:Leadtools.RasterExceptionCode.Argument">
      <exclude />
      <winrt />
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidOperation">
      <exclude />
      <winrt />
    </member>
    <member name="F:Leadtools.RasterExceptionCode.OcrComponentMissing">
      <exclude />
      <winrt />
    </member>
    <member name="F:Leadtools.RasterExceptionCode.LeadPrinterNetworkNotEnabled">
      <summary>
            LEADTOOLS Printer Driver Network is required to use this functionality
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.AppStoreNotEnabled">
      <summary>
            LEADTOOLS App Store license is required to use this functionality
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.BasicNotEnabled">
      <summary>
            LEADTOOLS Basic license is required to use this functionality
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.NoServerLicense">
      <summary>
            Requires a server license
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidLicense">
      <summary>
            Invalid runtime license
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.InvalidServerLicense">
      <summary>
            Invalid runtime server license
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.UserNotRegisteredForServerLicense">
      <summary>
            Specified user for server license was not registered
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.AppNotRegisteredForServerLicense">
      <summary>
            Specified application for server license was not registered
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ConnectionToLicenseServerFailed">
      <summary>
            Connection to license server failed
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.ServerLicenseNotActivated">
      <summary>
            Server runtime license has not been activated or machine has changed
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.HtmCodecMissing">
      <summary>
            The HTM codec is needed to use this function
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.MobCodecMissing">
      <summary>
            The MOB codec is needed to use this function
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PubCodecMissing">
      <summary>
            The PUB codec is needed to use this function
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.IngCodecMissing">
      <summary>
            The ING codec is needed to use this function
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.PstCodecMissing">
      <summary>
            The Pst codec is needed to use this function
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgFileSizeRead">
      <summary>
            SVG File size read error
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgRootNotFound">
      <summary>
            Root element of XML data is not found or not SVG
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgInvalidElement">
      <summary>
            Invalid SVG element in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgDuplicatedAttribute">
      <summary>
            Duplicated SVG attribute in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgInvalidAttribute">
      <summary>
            Invalid SVG attribute in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgInvalidAttributeValue">
      <summary>
            Invalid SVG attribute value in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgBadCssProperty">
      <summary>
            Bad SVG CSS property in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgMissingRequiredAttribute">
      <summary>
            Missing required SVG attribute in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgDuplicatedID">
      <summary>
            Duplicated SVG element ID in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgInvalidCoordinatesNumber">
      <summary>
            Invalid SVG coordinates number in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgInvalidStringComma">
      <summary>
            Invalid SVG string comma
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgAttributeNotFound">
      <summary>
            SVG Attribute not found in the XML data
            </summary>
    </member>
    <member name="F:Leadtools.RasterExceptionCode.SvgFileNotFlat">
      <summary>
            This functionality requires a flat SVG document
            </summary>
    </member>
    <member name="T:Leadtools.RasterConvertBufferFlags">
      <summary>
            Options for the <see cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</see> method.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterConvertBufferFlags.None">
      <summary>
            (0x0000)Default
            </summary>
    </member>
    <member name="F:Leadtools.RasterConvertBufferFlags.SourceGray">
      <summary>
            (0x0001)Source buffer has grayscale data
            </summary>
    </member>
    <member name="F:Leadtools.RasterConvertBufferFlags.DestinationGray">
      <summary>
            (0x0002)Destination buffer has grayscale data
            </summary>
    </member>
    <member name="F:Leadtools.RasterConvertBufferFlags.SourceUseBits">
      <summary>
            (0x0004)LowBit and HighBit apply to the source image
            </summary>
    </member>
    <member name="F:Leadtools.RasterConvertBufferFlags.DestinationUseBits">
      <summary>
            (0x0008)LowBit and HighBit apply to the destination image
            </summary>
    </member>
    <member name="F:Leadtools.RasterConvertBufferFlags.AlphaInit">
      <summary>
            (0x0020)Initialize the alpha values when destination buffer is 32 or 64 bits or pixels
            </summary>
    </member>
    <member name="T:Leadtools.RasterBufferConverter">
      <summary>
            Provides support for converting image data buffers.
            </summary>
      <noremarks />
      <example>
            This example loads an image at 24 bits per pixel, and creates a new image at 16 bits per pixel, and uses the <see cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">Convert method</see> to convert data from 24 bits per pixel to 16 bits per pixel.
            <!--RasterBufferConverter--></example>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Calculates the size required for output buffer.
            </summary>
      <param name="inWidth">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outWidth">Width in pixels of the desired output image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <returns>The size in bytes of the required output buffer.</returns>
      <remarks>
            Use this method to calculate the required size of the output buffer for image data conversions.
            </remarks>
      <example>
            This example loads an image at 24 bits per pixel, and creates a new image at 4 bits per pixel, and then uses the <see cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">Convert method</see> to convert data from 24 bits per pixel to 4 bits per pixel.
            <!--RasterBufferConverter.CalculateConvertSize--></example>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">
      <summary>
            Converts data in the specified buffer to the specified bits per pixel and color order.
            </summary>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="bufferOffset">The zero-based offset into the <paramref name="buffer" /> where conversion should start.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="lowBit">Value indicating the low bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="highBit">Value indicating the high bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <param name="flags">Flags indicating whether to treat 16 bit data as grayscale or color.</param>
      <remarks>
        <para>
          <strong>Note:</strong> This method will also work for 12 and 16-bit grayscale images, but only in the 
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.  If you attempt to use this
            method with a 12 or 16-bit grayscale image, but you do not have a Medical Imaging edition, it will throw an exception.</para>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <paramref name="flags" /> is used to determine whether the data should be treated as
            color or grayscale.</para>
        <para>If nBitsPerPixelSrc is 12, it is assumed to be grayscale.  However, the <paramref name="flags" /> parameter should also reflect that it is
            grayscale for future compatibility. If the source is grayscale, <paramref name="inPalette" /> can be set to a palette.  The palette should contain N 
            entries.  If the source uses <paramref name="lowBit" /> and <paramref name="highBit" />, then N equals 2 raised to the power of 
            (<paramref name="highBit" /> - <paramref name="lowBit" /> + 1).  Otherwise, N equals 2 raised to the power of <paramref name="inBitsPerPixel" />.</para>
        <para>The <paramref name="flags" /> parameter supersedes <paramref name="inOrder" /> and <paramref name="outOrder" />.  If you specify <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> for
            <paramref name="inOrder" />, but use <see cref="T:Leadtools.RasterConvertBufferFlags">RasterConvertBufferFlags.SourceGray</see> in <paramref name="flags" />, it will be assumed that the source buffer
            contains grayscale data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],Leadtools.RasterColor16[],Leadtools.RasterColor16[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">
      <summary>
            Converts data in the specified buffer to the specified bits per pixel and color order.
            </summary>
      <isnew>2/28/2009</isnew>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="bufferOffset">The zero-based offset into the <paramref name="buffer" /> where conversion should start.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="inPalette16">The 16-bit LUT for the existing data, before conversion. Use NULL for no 16-bit LUT.</param>
      <param name="outPalette16">The 16-bit LUT for the converted data. Reserved for future use. Use NULL.</param>
      <param name="lowBit">Value indicating the low bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="highBit">Value indicating the high bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <param name="flags">Flags indicating whether to treat 16 bit data as grayscale or color.</param>
      <remarks>
        <para>
          <strong>Note:</strong> This method will also work for 12 and 16-bit grayscale images, but only in the 
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.  If you attempt to use this
            method with a 12 or 16-bit grayscale image, but you do not have a Medical Imaging edition, it will throw an exception.</para>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <paramref name="flags" /> is used to determine whether the data should be treated as
            color or grayscale.</para>
        <para>If nBitsPerPixelSrc is 12, it is assumed to be grayscale.  However, the <paramref name="flags" /> parameter should also reflect that it is
            grayscale for future compatibility. If the source is grayscale, <paramref name="inPalette" /> can be set to a palette.  The palette should contain N 
            entries.  If the source uses <paramref name="lowBit" /> and <paramref name="highBit" />, then N equals 2 raised to the power of 
            (<paramref name="highBit" /> - <paramref name="lowBit" /> + 1).  Otherwise, N equals 2 raised to the power of <paramref name="inBitsPerPixel" />.</para>
        <para>The <paramref name="flags" /> parameter supersedes <paramref name="inOrder" /> and <paramref name="outOrder" />.  If you specify <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> for
            <paramref name="inOrder" />, but use <see cref="T:Leadtools.RasterConvertBufferFlags">RasterConvertBufferFlags.SourceGray</see> in <paramref name="flags" />, it will be assumed that the source buffer
            contains grayscale data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32)">
      <summary>
            Converts data in the specified buffer to the specified bits per pixel and color order.
            </summary>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="bufferOffset">The zero-based offset into the <paramref name="buffer" /> where conversion should start.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <remarks>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <b>flags</b> is used to determine whether the data should be treated as
            color or grayscale.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(System.IntPtr,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">
      <summary>
            Converts data in the specified unmanaged memory buffer to the specified bits per pixel and color order.
            </summary>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="lowBit">Value indicating the low bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="highBit">Value indicating the high bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <param name="flags">Flags indicating whether to treat 16 bit data as grayscale or color.</param>
      <remarks>
        <para>
          <strong>Note:</strong> This method will also work for 12 and 16-bit grayscale images, but only in the 
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.  If you attempt to use this
            method with a 12 or 16-bit grayscale image, but you do not have a Medical Imaging edition, it will throw an exception.</para>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <paramref name="flags" /> is used to determine whether the data should be treated as
            color or grayscale.</para>
        <para>If nBitsPerPixelSrc is 12, it is assumed to be grayscale.  However, the <paramref name="flags" /> parameter should also reflect that it is
            grayscale for future compatibility. If the source is grayscale, <paramref name="inPalette" /> can be set to a palette.  The palette should contain N 
            entries.  If the source uses <paramref name="lowBit" /> and <paramref name="highBit" />, then N equals 2 raised to the power of 
            (<paramref name="highBit" /> - <paramref name="lowBit" /> + 1).  Otherwise, N equals 2 raised to the power of <paramref name="inBitsPerPixel" />.</para>
        <para>The <paramref name="flags" /> parameter supersedes <paramref name="inOrder" /> and <paramref name="outOrder" />.  If you specify <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> for
            <paramref name="inOrder" />, but use <see cref="T:Leadtools.RasterConvertBufferFlags">RasterConvertBufferFlags.SourceGray</see> in <paramref name="flags" />, it will be assumed that the source buffer
            contains grayscale data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(System.IntPtr,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],Leadtools.RasterColor16[],Leadtools.RasterColor16[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">
      <summary>
            Converts data in the specified unmanaged memory buffer to the specified bits per pixel and color order.
            </summary>
      <isnew>2/28/2009</isnew>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="inPalette16">The 16-bit LUT for the existing data, before conversion. Use NULL for no 16-bit LUT.</param>
      <param name="outPalette16">The 16-bit LUT for the converted data. Reserved for future use. Use NULL.</param>
      <param name="lowBit">Value indicating the low bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="highBit">Value indicating the high bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <param name="flags">Flags indicating whether to treat 16 bit data as grayscale or color.</param>
      <remarks>
        <para>
          <strong>Note:</strong> This method will also work for 12 and 16-bit grayscale images, but only in the 
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.  If you attempt to use this
            method with a 12 or 16-bit grayscale image, but you do not have a Medical Imaging edition, it will throw an exception.</para>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <paramref name="flags" /> is used to determine whether the data should be treated as
            color or grayscale.</para>
        <para>If nBitsPerPixelSrc is 12, it is assumed to be grayscale.  However, the <paramref name="flags" /> parameter should also reflect that it is
            grayscale for future compatibility. If the source is grayscale, <paramref name="inPalette" /> can be set to a palette.  The palette should contain N 
            entries.  If the source uses <paramref name="lowBit" /> and <paramref name="highBit" />, then N equals 2 raised to the power of 
            (<paramref name="highBit" /> - <paramref name="lowBit" /> + 1).  Otherwise, N equals 2 raised to the power of <paramref name="inBitsPerPixel" />.</para>
        <para>The <paramref name="flags" /> parameter supersedes <paramref name="inOrder" /> and <paramref name="outOrder" />.  If you specify <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> for
            <paramref name="inOrder" />, but use <see cref="T:Leadtools.RasterConvertBufferFlags">RasterConvertBufferFlags.SourceGray</see> in <paramref name="flags" />, it will be assumed that the source buffer
            contains grayscale data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(System.IntPtr,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32)">
      <summary>
            Converts data in the specified unmanaged memory buffer to the specified bits per pixel and color order.
            </summary>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <remarks>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <b>flags</b> is used to determine whether the data should be treated as
            color or grayscale.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(Leadtools.Junk.IBuffer,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],Leadtools.RasterColor16[],Leadtools.RasterColor16[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">
      <summary>
            Converts data in the specified buffer to the specified bits per pixel and color order.
            </summary>
      <isnew>2/28/2009</isnew>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="bufferOffset">The zero-based offset into the <paramref name="buffer" /> where conversion should start.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="inPalette16">The 16-bit LUT for the existing data, before conversion. Use NULL for no 16-bit LUT.</param>
      <param name="outPalette16">The 16-bit LUT for the converted data. Reserved for future use. Use NULL.</param>
      <param name="lowBit">Value indicating the low bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="highBit">Value indicating the high bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <param name="flags">Flags indicating whether to treat 16 bit data as grayscale or color.</param>
      <remarks>
        <para>
          <strong>Note:</strong> This method will also work for 12 and 16-bit grayscale images, but only in the 
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.  If you attempt to use this
            method with a 12 or 16-bit grayscale image, but you do not have a Medical Imaging edition, it will throw an exception.</para>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <paramref name="flags" /> is used to 
            determine whether the data should be treated as
            color or grayscale.</para>
        <para>If nBitsPerPixelSrc is 12, it is assumed to be grayscale.  However, the <paramref name="flags" /> parameter should also reflect that it is
            grayscale for future compatibility. If the source is grayscale, <paramref name="inPalette" /> can be set to a palette.  The palette should contain N 
            entries.  If the source uses <paramref name="lowBit" /> and <paramref name="highBit" />, then N equals 2 raised to the power of 
            (<paramref name="highBit" /> - <paramref name="lowBit" /> + 1).  Otherwise, N equals 2 raised to the power of <paramref name="inBitsPerPixel" />.</para>
        <para>The <paramref name="flags" /> parameter supersedes <paramref name="inOrder" /> and <paramref name="outOrder" />.  If you 
            specify <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> for
            <paramref name="inOrder" />, but use <see cref="T:Leadtools.RasterConvertBufferFlags">RasterConvertBufferFlags.SourceGray</see> in <paramref name="flags" />, 
            it will be assumed that the source buffer
            contains grayscale data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(Leadtools.Junk.IBuffer,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">
      <summary>
            Converts data in the specified buffer to the specified bits per pixel and color order.
            </summary>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="bufferOffset">The zero-based offset into the <paramref name="buffer" /> where conversion should start.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="lowBit">Value indicating the low bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="highBit">Value indicating the high bit in the source buffer, if the source buffer contains grayscale data.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <param name="flags">Flags indicating whether to treat 16 bit data as grayscale or color.</param>
      <remarks>
        <para>
          <strong>Note:</strong> This method will also work for 12 and 16-bit grayscale images, but only in the 
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.  If you attempt to use this
            method with a 12 or 16-bit grayscale image, but you do not have a Medical Imaging edition, it will throw an exception.</para>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <paramref name="flags" /> is used to determine whether the data should be treated as
            color or grayscale.</para>
        <para>If nBitsPerPixelSrc is 12, it is assumed to be grayscale.  However, the <paramref name="flags" /> parameter should also reflect that it is
            grayscale for future compatibility. If the source is grayscale, <paramref name="inPalette" /> can be set to a palette.  The palette should contain N 
            entries.  If the source uses <paramref name="lowBit" /> and <paramref name="highBit" />, then N equals 2 raised to the power of 
            (<paramref name="highBit" /> - <paramref name="lowBit" /> + 1).  Otherwise, N equals 2 raised to the power of <paramref name="inBitsPerPixel" />.</para>
        <para>The <paramref name="flags" /> parameter supersedes <paramref name="inOrder" /> and <paramref name="outOrder" />.  If you specify <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> for
            <paramref name="inOrder" />, but use <see cref="T:Leadtools.RasterConvertBufferFlags">RasterConvertBufferFlags.SourceGray</see> in <paramref name="flags" />, it will be assumed that the source buffer
            contains grayscale data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterBufferConverter.Convert(Leadtools.Junk.IBuffer,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32)">
      <summary>
            Converts data in the specified buffer to the specified bits per pixel and color order.
            </summary>
      <keywords>Bits per pixel|Color order|Palette|Resolution|Bit-depth|Color resolution|Grayscale</keywords>
      <param name="buffer">The input buffer.</param>
      <param name="bufferOffset">The zero-based offset into the <paramref name="buffer" /> where conversion should start.</param>
      <param name="width">Width in pixels of the input image data.</param>
      <param name="inBitsPerPixel">BitsPerPixel of the input image data.</param>
      <param name="outBitsPerPixel">BitsPerPixel of the desired output image data.</param>
      <param name="inOrder">The input color order.</param>
      <param name="outOrder">The output color order.</param>
      <param name="inPalette">The palette or 8-bit LUT for the existing data, before conversion. If the input data is not palettized and not grayscale, use NULL.</param>
      <param name="outPalette">The palette for the converted data. If the data is converted to 16 or 24 bits per pixel color, use NULL for no palette.</param>
      <param name="alpha">The alpha value if the destination bits per pixel contains an alpha component</param>
      <remarks>
        <para>The conversion uses only one buffer, which must be large enough to hold the data before and after conversion.</para>
        <para>Image data that is 8 bits per pixel or less must use a palette, and this method can use such data as input, output, or both.
            Therefore, you may need to specify the palette for the input, or for the output, or both.</para>
        <para>If either <paramref name="inBitsPerPixel" /> or <paramref name="outBitsPerPixel" /> is 16, <b>flags</b> is used to 
            determine whether the data should be treated as
            color or grayscale.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>Refer to <see cref="T:Leadtools.RasterBufferConverter" /> and <see cref="M:Leadtools.RasterBufferConverter.CalculateConvertSize(System.Int32,System.Int32,System.Int32,System.Int32)" /></example>
      <seealso cref="T:Leadtools.ImageProcessing.ColorResolutionCommand">ColorResolutionCommand</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionColorResolutionandDithering">Introduction: Color Resolution and Dithering</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <winrt />
    </member>
    <member name="T:Leadtools.ImageProcessing.FlipCommand">
      <summary>
            Flips a <see cref="T:Leadtools.RasterImage" /> from top to bottom or from left to right.
            </summary>
      <keywords>Flipping|Rotating|Orientation</keywords>
      <remarks>
        <para>This command can flip an image from top to bottom (vertically) or from left to right (horizontally).</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <example>
            This example will load an image and then flip it before saving it back to disk.
            <!--FlipCommand--></example>
      <objectivec>
        <pre>@interface LTFlipCommand : LTRasterCommand</pre>
      </objectivec>
      <java>
        <pre>public class FlipCommand extends RasterCommand</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.FlipCommand.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.FlipCommand" /> class with default parameters.
            </summary>
      <remarks>
            Default value for the <see cref="P:Leadtools.ImageProcessing.FlipCommand.Horizontal" /> property is false.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.FlipCommand" /></example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public FlipCommand()</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.FlipCommand.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.ImageProcessing.FlipCommand" /> class with explicit parameters.
            </summary>
      <param name="horizontal">true to flip horizontally (left to right), false to flip vertically (top to bottom).</param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(id)initWithHorizontal:(BOOL)horizontal;</pre>
      </objectivec>
      <java>
        <pre>public FlipCommand(boolean horizontal)</pre>
      </java>
    </member>
    <member name="M:Leadtools.ImageProcessing.FlipCommand.ToString">
      <summary>
            Overridden. Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.ImageProcessing.FlipCommand.GetStringDescription">
      <summary>
            Returns a meaningful name for this command.
            </summary>
      <returns>string that is the name of this command.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.ImageProcessing.FlipCommand.RunCommand(Leadtools.RasterImage,System.IntPtr,Leadtools.RasterImageChangedFlags@)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.ImageProcessing.FlipCommand.Horizontal">
      <summary>
            Specifies whether the image is to be flipped horizontally or vertically.
            </summary>
      <value>true to flip the image horizontally (left to right), false to flip the image vertically (top to bottom).</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.ImageProcessing.FlipCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL horizontal;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getHorizontal()
public void setHorizontal(boolean value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.ImageProcessing.RasterColorChannel">
      <summary>
            Indicates the channel that will be used in image processing methods.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterColorChannel.Master">
      <summary>
            (0)All channels.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterColorChannel.Red">
      <summary>
            (1)Red channel only.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterColorChannel.Green">
      <summary>
            (2)Green channel only.
            </summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.RasterColorChannel.Blue">
      <summary>
            (3)Blue channel only.
            </summary>
    </member>
    <member name="T:Leadtools.RasterImage">
      <summary>
            The <see cref="T:Leadtools.RasterImage" /> class serves as a working area for image manipulation and conversion. LEADTOOLS functions use
            this class for accessing the image in memory and for maintaining the characteristics of the image.
            </summary>
      <keywords>Raster Image|Image|Bitmap|RasterImage </keywords>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> class is used to work with images defined by pixel data.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> class contains methods and properties for dealing with images in memory.
            You can use this class to create images from scratch or load them from disk based files.  Also, various other components of 
            LEADTOOLS for .NET creates <see cref="T:Leadtools.RasterImage" /> objects from operations such as scanning and OCRing.  The 
            <see cref="T:Leadtools.RasterImage" /> class is the main LEADTOOLS object used when passing image data between different parts of the
            toolkit.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> class lets you deal with individual rows or pixels of the image data.  This class also
            contains methods and properties for the following:
            <list type="bullet"><item><description>Creating images</description></item><item><description>Accessing the image data</description></item><item><description>Adding regions to the image</description></item><item><description>Setting/Changing the palette for an image</description></item><item><description>Converting an image to a GDI or GDI+ Image through the <see cref="T:Leadtools.Drawing.RasterImageConverter">Leadtools.Drawing.RasterImageConverter</see> class</description></item><item><description>Creating a GDI HDC or GDI+ Graphics object from an image through the <see cref="T:Leadtools.Drawing.RasterImagePainter">Leadtools.Drawing.RasterImagePainter</see> class</description></item><item><description>Painting an image to a GDI or GDI+ surface through the  through the <see cref="T:Leadtools.Drawing.RasterImagePainter">Leadtools.Drawing.RasterImagePainter</see> class</description></item><item><description>Converting an image to a WPF or Silverlight Image through the <see cref="T:Leadtools.Windows.Media.RasterImageConverter">Leadtools.Windows.Media.RasterImageConverter</see> class</description></item></list></para>
        <para>The <see cref="T:Leadtools.RasterImage" /> class implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and thus supports
            standard .NET serialization. For more information and examples regarding serialization of an
            <see cref="T:Leadtools.RasterImage" /> object, refer to <see cref="T:Leadtools.Topics.RasterImageSerialization">RasterImage Serialization</see>.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> class also implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterImage" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN, the <see cref="P:Leadtools.RasterImage.IsDisposed" /> property and the
            <see cref="E:Leadtools.RasterImage.Disposed">RasterImage.Disposed</see> event.</para>
        <para>The LEADTOOLS <see cref="T:Leadtools.RasterImage" /> class supports storing images in memory in the following bits per pixel: 
            1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 38 and 64. A 16-bpp image may be color or grayscale. If you are working with a 16-bit
            grayscale image.  Support for 8-bit and 12-bit grayscale images is also provided.</para>
        <para>The data of a <see cref="T:Leadtools.RasterImage" /> object can be stored in memory as uncompressed, RLE compressed or super
            compressed. The compression used for 24-bit and 8-bit images is lossy, which means multiple changes to the image can produce 
            some visual loss. Support for super compressing bitmaps is available only in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can also store its data in disk-based swap files when conventional memory is not
            enough.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object also contains a region of interest value that can be used to limit the portion
            available to update when using the image processing command. The region can be set using a geometric shape such as
            <see cref="M:Leadtools.RasterImage.AddRectangleToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)" /> and <see cref="M:Leadtools.RasterImage.AddEllipseToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)" /> or with image data
            attributes such as <see cref="M:Leadtools.RasterImage.AddColorToRegion(Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)" /> and <see cref="M:Leadtools.RasterImage.AddMaskToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterImage,Leadtools.RasterRegionCombineMode)" />.</para>
      </remarks>
      <seealso cref="T:LD.Topics.RasterImageAndGdiGdiPlus">RasterImage and GDI/GDI+</seealso>
      <seealso href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics.windows.media~wm.topics.rasterimageandwpfsilverlight.html">RasterImage and WPF/Silverlight</seealso>
      <example>
            This example loads an image file from a disk file, and processes the image data before saving it back to disk.
            <!--RasterImage--></example>
      <objectivec>
        <pre>@interface LTRasterImage : NSObject&lt;NSCopying, NSCoding&gt;</pre>
      </objectivec>
      <java>
        <pre>public class RasterImage implements Serializable</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.#ctor(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],System.IntPtr,System.Int64)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterImage" /> object using the specified parameters and optional unmanaged memory.
            </summary>
      <param name="flags">
            A combination of the <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members indicating the type of memory to allocate
            for the image data.
            </param>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48, and 64.</para>
        <para>Use 0 to create an 8, 10, 12, and 16-bit grayscale image. In that case, the method ignores the <paramref name="order" /> and
            the <paramref name="palette" /> parameters.</para>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48- and 64-bit images.</para>
        <para>If the resultant image is less than 16 bits per pixel, this will have no effect since palletized images have
            no order.</para>
      </param>
      <param name="viewPerspective">
        <para>Specifies where the beginning of the image is stored.</para>
        <para>Most file formats start in the lower left corner while some formats start in the upper left corner.</para>
      </param>
      <param name="palette">
            The palette that the image will use. You can specify your own palette, or use null
            (Nothing in Visual Basic) for LEAD's fixed palette.  The <paramref name="palette" /> member is used only when 
            <paramref name="bitsPerPixel" /> is less than or equal to 8.
            </param>
      <param name="userData">
        <para>Unmanaged data pointer that will contain the image data when <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.</para>
        <para>This data must be aligned on a four byte boundary. If <paramref name="userData" /> is IntPtr.Zero, the data pointer 
            must be passed later, by calling the <see cref="M:Leadtools.RasterImage.SetUserData(System.IntPtr,System.Int64)" /> method, before the image can be used.</para>
      </param>
      <param name="userDataLength">Length in bytes of the data passed to <paramref name="userData" />. Only when used when 
            <paramref name="userData" /> is not IntPtr.Zero and <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.
            </param>
      <remarks>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>There is some speed penalty (loss) for accessing <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images. Therefore, it is not
            recommended for use with all images.</para>
        <para>The <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images are not used by default. LEADTOOLS will create them only if it
            failed to create <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> images and <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.NoTiled</see> was not
            specified.</para>
        <para>The following lists the distinct types of bitmaps:
            <list type="bullet"><item><description>Conventional (uncompressed and contiguous) This is the most common type.</description></item><item><description>Compressed (1-bit only)</description></item><item><description>Tiled (uncompressed, stored internally as up to 64MB tiles)</description></item></list></para>
        <para>If you pass <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, you are responsible for freeing the image data.</para>
        <para>Creating an image of type <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see> does not allocate memory for the image data.
            Instead, the data pointer <paramref name="userData" /> is used. When you create a <see cref="T:Leadtools.RasterImage" /> with user data, the <see cref="P:Leadtools.RasterImage.IsConventionalMemory" /> and
            <see cref="P:Leadtools.RasterImage.IsMirrored" /> flags will both be set to <strong>true</strong>. Some image processing commands, such as <see cref="T:Leadtools.ImageProcessing.RotateCommand" />, need to re-allocate the image data. If you
            create an image with <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, and pass it to these methods, the data will be re-allocated internally
            by LEADTOOLS and the image object will stop using the data in <paramref name="userData" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>
-(id)initWithUserData:(unsigned char*)userData
       userDataLength:(size_t)dataLength
                flags:(LTRasterMemoryFlags)flags
                width:(unsigned int)inWidth
               height:(unsigned int)inHeight
         bitsPerPixel:(unsigned int)inBitsPerPixel
                order:(LTRasterByteOrder)inOrder
      viewPerspective:(LTRasterViewPerspective)inViewPerspective
              palette:(NSArray*)palette
                error:(NSError**)outError;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterImage.#ctor(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],System.Byte[],System.Int32)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterImage" /> object using the specified parameters and optional managed memory.
            </summary>
      <param name="flags">
            A combination of the <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members indicating the type of memory to allocate
            for the image data.
            </param>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48, and 64.</para>
        <para>Use 0 to create an 8, 10, 12, and 16-bit grayscale image. In that case, the method ignores the <paramref name="order" /> and
            the <paramref name="palette" /> parameters.</para>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48- and 64-bit images.</para>
        <para>If the resultant image is less than 16 bits per pixel, this will have no effect since palletized images have
            no order.</para>
      </param>
      <param name="viewPerspective">
        <para>Specifies where the beginning of the image is stored.</para>
        <para>Most file formats start in the lower left corner while some formats start in the upper left corner.</para>
      </param>
      <param name="palette">
            The palette that the image will use. You can specify your own palette, or use null
            (Nothing in Visual Basic) for LEAD's fixed palette.  The <paramref name="palette" /> member is used only when 
            <paramref name="bitsPerPixel" /> is less than or equal to 8.
            </param>
      <param name="userData">
        <para>Managed data array that will contain the image data when <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.</para>
        <para>This data must be aligned on a four byte boundary. If <paramref name="userData" /> is null (Nothing in Visual Basic), the data pointer 
            must be passed later, by calling the <see cref="M:Leadtools.RasterImage.SetUserData(System.IntPtr,System.Int64)" /> method, before the image can be used.</para>
      </param>
      <param name="userDataLength">Length in bytes of the data passed to <paramref name="userData" />. Only when used when 
            <paramref name="userData" /> is not null and <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.
            </param>
      <remarks>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>There is some speed penalty (loss) for accessing <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images. Therefore, it is not
            recommended for use with all images.</para>
        <para>The <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images are not used by default. LEADTOOLS will create them only if it
            failed to create <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> images and <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.NoTiled</see> was not
            specified.</para>
        <para>The following lists the distinct types of bitmaps:
            <list type="bullet"><item><description>Conventional (uncompressed and contiguous) This is the most common type.</description></item><item><description>Compressed (1-bit only)</description></item><item><description>Tiled (uncompressed, stored internally as up to 64MB tiles)</description></item></list></para>
        <para>Creating an image of type <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see> does not allocate memory for the image data.
            Instead, the data pointer <paramref name="userData" /> is used. When you create a <see cref="T:Leadtools.RasterImage" /> with user data, the <see cref="P:Leadtools.RasterImage.IsConventionalMemory" /> and
            <see cref="P:Leadtools.RasterImage.IsMirrored" /> flags will both be set to <strong>true</strong>. Some image processing commands, such as <see cref="T:Leadtools.ImageProcessing.RotateCommand" />, need to re-allocate the image data. If you
            create an image with <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, and pass it to these methods, the data will be re-allocated internally
            by LEADTOOLS and the image object will stop using the data in <paramref name="userData" />.</para>
        <para>
          <strong>Important:</strong> The above discussion is valid only for the LEADTOOLS Silverlight toolkit. LEADTOOLS for .NET does not support
            user memory of type array of <see cref="T:System.Byte" />. Instead, calling this method in LEADTOOLS for .NET will create a regular conventional 
            memory image then copy the data passed through <paramref name="userData" /> to the internal image data. <paramref name="userData" /> will
            not be used after this method returns. To create a true user-memory raster images in LEADTOOLS for .NET, use the
            <see cref="M:Leadtools.RasterImage.#ctor(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],System.IntPtr,System.Int64)">RasterImage(..., IntPtr userData, ...)</see> constructor.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>
-(id)initWithNSData:(NSData*)inData
     userDataLength:(size_t)dataLength
              flags:(LTRasterMemoryFlags)flags
              width:(unsigned int)inWidth
             height:(unsigned int)inHeight
       bitsPerPixel:(unsigned int)inBitsPerPixel
              order:(LTRasterByteOrder)inOrder
    viewPerspective:(LTRasterViewPerspective)inViewPerspective
            palette:(NSArray*)palette
              error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterImage(
  int flags, 
  int width, 
  int height, 
  int bitsPerPixel, 
  RasterByteOrder order, 
  RasterViewPerspective viewPerspective, 
  RasterColor[] palette, 
  byte[] userData, 
  int userDataLength
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.#ctor(Leadtools.RasterImage)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterImage" /> from the specified existing <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <param name="srcImage">The <see cref="T:Leadtools.RasterImage" /> from which to create the new <see cref="T:Leadtools.RasterImage" />.</param>
      <remarks>
        <para>This constructor will "pull" all the internal data (image pages, metadata, etc) from <paramref name="srcImage" /> and
            puts a copy of them into the newly created <see cref="T:Leadtools.RasterImage" />.</para>
        <para>After calling this constructor, <paramref name="srcImage" /> remains valid and changes to its properties or data will not
            affect the newly created <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>This constructor is useful when deriving your own classes from <see cref="T:Leadtools.RasterImage" /> as shown in the example below.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
            This example derives a new class from then use the RasterImage(RasterImage) constructor.
            <!--RasterImage.RasterImage--></example>
      <objectivec>
        <pre>-(id)initWithImage:(LTRasterImage*)srcImage error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage(RasterImage srcImage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Dispose">
      <summary>
            Releases all resources used by this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterImage" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN, the <see cref="P:Leadtools.RasterImage.IsDisposed" /> property and the
            <see cref="E:Leadtools.RasterImage.Disposed">RasterImage.Disposed</see> event.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <java>
        <pre>public void dispose()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Finalize">
      <summary>
            This member overrides <see cref="M:System.Object.Finalize" />.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterImage" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN, the <see cref="P:Leadtools.RasterImage.IsDisposed" /> property and the
            <see cref="E:Leadtools.RasterImage.Disposed">RasterImage.Disposed</see> event.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
    </member>
    <member name="M:Leadtools.RasterImage.Dispose(System.Boolean)">
      <summary>
            Releases all the resources used by this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="disposing">
        <strong>True</strong> to release both managed and unmanaged resources; <strong>False</strong> to release only unmanaged resources.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterImage" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN, the <see cref="P:Leadtools.RasterImage.IsDisposed" /> property and the
            <see cref="E:Leadtools.RasterImage.Disposed">RasterImage.Disposed</see> event.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
    </member>
    <member name="M:Leadtools.RasterImage.OnChanged(Leadtools.RasterImageChangedEventArgs)">
      <summary>
            Raises the <see cref="E:Leadtools.RasterImage.Changed" /> event.
            </summary>
      <param name="e">A <see cref="T:Leadtools.RasterImageChangedEventArgs" /> that contains the event data. </param>
      <remarks>
        <para>Raising an event invokes the event handler through a delegate.</para>
        <para>The <see cref="M:Leadtools.RasterImage.OnChanged(Leadtools.RasterImageChangedEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate.
            This is the preferred technique for handling the event in a derived class.</para>
        <para>Notes to Inheritors:  When overriding <see cref="M:Leadtools.RasterImage.OnChanged(Leadtools.RasterImageChangedEventArgs)" /> in a derived class, be sure to call the base class's
            <see cref="M:Leadtools.RasterImage.OnChanged(Leadtools.RasterImageChangedEventArgs)" /> method so that registered delegates receive the event.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed" />.</example>
      <objectivec>
        <pre>-(void)onChanged:(LTRasterImageChangedFlags)flags;</pre>
      </objectivec>
      <java>
        <pre>public void onChanged(RasterImageChangedEvent event)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.DisableEvents">
      <summary>
            Disables raising the <see cref="E:Leadtools.RasterImage.Changed" /> event.
            </summary>
      <remarks>
        <para>Calling <see cref="M:Leadtools.RasterImage.DisableEvents" /> will increment an internal counter.  When the internal counter is 0,
            the <see cref="E:Leadtools.RasterImage.Changed" /> events will be raised for changes to the <see cref="T:Leadtools.RasterImage" />.</para>
        <para>When the internal counter is != 0, <see cref="E:Leadtools.RasterImage.Changed" /> will not be raised. Therefore, for each call to
            <see cref="M:Leadtools.RasterImage.DisableEvents" />, there should be a corresponding call to <see cref="M:Leadtools.RasterImage.EnableEvents" /> in order to restore the
            raising of events.</para>
        <para>You can temporary disable the <see cref="E:Leadtools.RasterImage.Changed" /> event when performing multiple operations on a
            <see cref="T:Leadtools.RasterImage" /> object then re-enabling it once the operations are done.  This way, any listeners to the 
            <see cref="E:Leadtools.RasterImage.Changed" /> event will be notified only once thus optimizing the performance.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed" />.</example>
      <objectivec>
        <pre>-(void)disableEvents;</pre>
      </objectivec>
      <java>
        <pre>public void disableEvents()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.EnableEvents">
      <summary>
            Enables raising the <see cref="E:Leadtools.RasterImage.Changed" /> event.
            </summary>
      <remarks>
        <para>Calling <see cref="M:Leadtools.RasterImage.DisableEvents" /> will increment an internal counter.  When the internal counter is 0,
            the <see cref="E:Leadtools.RasterImage.Changed" /> events will be raised for changes to the <see cref="T:Leadtools.RasterImage" />.</para>
        <para>When the internal counter is != 0, <see cref="E:Leadtools.RasterImage.Changed" /> will not be raised. Therefore, for each call to
            <see cref="M:Leadtools.RasterImage.DisableEvents" />, there should be a corresponding call to <see cref="M:Leadtools.RasterImage.EnableEvents" /> in order to restore the
            raising of events.</para>
        <para>You can temporary disable the <see cref="E:Leadtools.RasterImage.Changed" /> event when performing multiple operations on a
            <see cref="T:Leadtools.RasterImage" /> object then re-enabling it once the operations are done.  This way, any listeners to the 
            <see cref="E:Leadtools.RasterImage.Changed" /> event will be notified only once thus optimizing the performance.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed" />.</example>
      <objectivec>
        <pre>-(void)enableEvents;</pre>
      </objectivec>
      <java>
        <pre>public void enableEvents()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Clone">
      <summary>
            Creates an exact copy of the current page of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterImage" /> this method creates.</returns>
      <remarks>
        <para>You can also use the <see cref="M:Leadtools.RasterImage.#ctor(Leadtools.RasterImage)" /> constructor to create an exact copy of an existing
            <see cref="T:Leadtools.RasterImage" />.</para>
        <para>To create a copy of an object while maintaining a progress status, refer to the <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</para>
        <para>This method copies only the current active page and no metadata information is copied.  To create an exact copy of a
            <see cref="T:Leadtools.RasterImage" /> object use the <see cref="M:Leadtools.RasterImage.CloneAll" /> method.</para>
        <para>To clone an image with support for a progress event, refer to <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</para>
      </remarks>
      <example>
            This example loads a multi-page image and clones it in 3 different ways.
            <!--RasterImage.Clone--></example>
      <objectivec>
        <pre>-(LTRasterImage*)clone:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CloneAll">
      <summary>
            Creates an exact copy of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterImage" /> this method creates.</returns>
      <remarks>
        <para>You can also use the <see cref="M:Leadtools.RasterImage.#ctor(Leadtools.RasterImage)">RasterImage(RasterImage)</see> constructor to create an exact copy of an existing
            <see cref="T:Leadtools.RasterImage" />.</para>
        <para>To create a copy of an object while maintaining a progress status, refer to the <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</para>
        <para>This method copies all the pages and any metadata contained in the <see cref="T:Leadtools.RasterImage" />. To create a copy of only the
            current active page (no metadata information), use the <see cref="M:Leadtools.RasterImage.Clone" /> method.</para>
        <para>To clone an image with support for a progress event, refer to <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</para>
      </remarks>
      <example>For an example, refer to <a href="ms-xhelp:///?id=LEADTOOLS~LEADTOOLS.RASTERIMAGE~CLONE()">Clone()</a>.</example>
      <objectivec>
        <pre>-(LTRasterImage*)cloneAll:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage cloneAll()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Clone(Leadtools.LeadRect)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterImage" /> object by copying an area of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="rc">Specifies the area to copy.</param>
      <remarks>
        <para>This method copies only the current active page.</para>
      </remarks>
      <example>For an example, refer to <a href="ms-xhelp:///?id=LEADTOOLS~LEADTOOLS.RASTERIMAGE~CLONE()">Clone()</a>.</example>
      <objectivec>
        <pre>-(LTRasterImage*)cloneWithRect:(LeadRect)rc error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage clone(LeadRect rc)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CreateThumbnail(System.Int32,System.Int32,System.Int32,Leadtools.RasterViewPerspective,Leadtools.RasterSizeFlags)">
      <summary>
            Creates a thumbnail image of this <b>RasterImage</b>.
            </summary>
      <param name="thumbnailWidth">The desired maximum width of the thumbnail image in pixels.</param>
      <param name="thumbnailHeight">The desired maximum height of the thumbnail image in pixels.</param>
      <param name="bitsPerPixel">The desired bits per pixel.</param>
      <param name="viewPerspective">The desired view perspective.</param>
      <param name="sizeFlags">Flags that control the resize operation.</param>
      <returns>A new <b>RasterImage</b> that is the thumbnail image.</returns>
      <remarks>
        <para>
            If the image width and height is less than <i>thumbnailWidth</i> and <i>thumbnailHeight</i>, then this method returns a copy of the 
            image in the original size.
            </para>
        <para>
            If the image width or height is greater than <i>thumbnailWidth</i> and <i>thumbnailHeight</i>, then this method will return the biggest 
            thumbnail it can fit into the dimensions specified by <i>thumbailWidth</i> and <i>thumbnailHeight</i>, keeping the original image 
            aspect ratio.
            </para>
        <para>The result image will always have a resolution of 96 by 96 regardless of the resolution this <see cref="T:Leadtools.RasterImage" /> and will never return a thumbnail bigger
            than the original image.
            </para>
      </remarks>
      <example>
        <!--RasterImage.CreateThumbnail-->
      </example>
      <objectivec>
        <pre>
-(LTRasterImage*)createThumbnail:(unsigned int)thumbnailWidth
                 thumbnailHeight:(unsigned int)thumbnailHeight
                    bitsPerPixel:(unsigned int)bitsPerPixelValue
            viewPerspectiveToUse:(LTRasterViewPerspective)viewPerspectiveToUse
                       sizeFlags:(LTRasterSizeFlags)sizeFlags
                           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterImage createThumbnail(
  int thumbnailWidth, 
  int thumbnailHeight, 
  int bitsPerPixel, 
  RasterViewPerspective viewPerspective, 
  RasterSizeFlags sizeFlags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)">
      <summary>
            Adds a new page to this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="image">The image to add.</param>
      <remarks>
        <para>This method pulls the current active page from <paramref name="image" /> and appends it at the end of the pages
            list of this <see cref="T:Leadtools.RasterImage" /> object.  The number of pages in <paramref name="image" /> is decremented by one, if
            <paramref name="image" /> had only one page prior to calling this method, then the <paramref name="image" /> object is disposed
            of and should not be used afterwards.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>-(unsigned int)addPage:(LTRasterImage*)image;</pre>
      </objectivec>
      <java>
        <pre>public int addPage(RasterImage image)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)">
      <summary>
            Adds one or more images to this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object containing the pages to add.</param>
      <param name="startIndex">The 1-based index starting from which to begin adding.</param>
      <param name="count">Total number of images to add. Specify <c>-1</c> to add all images.</param>
      <remarks>
        <para>This method pulls the pages from <paramref name="startIndex" /> to <paramref name="startIndex" /> +
            <paramref name="count" /> from <paramref name="image" /> and appends it at the end of the pages
            list of this <see cref="T:Leadtools.RasterImage" /> object.  The number of pages in <paramref name="image" /> is decremented by 
            <paramref name="count" />, if <paramref name="image" /> had only <paramref name="count" /> number of pages prior to calling
            this method, then the <paramref name="image" /> object is disposed of and should not be used afterwards.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>-(void)addPages:(LTRasterImage*)image startIndex:(unsigned int)startIndex count:(int)count;</pre>
      </objectivec>
      <java>
        <pre>public void addPages(RasterImage image, int startIndex, int count)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.RemovePageAt(System.Int32)">
      <summary>
            Removes the page at the specified index from this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="pageIndex">The 1-based index of the page to remove.</param>
      <remarks>
        <para>All pages after <paramref name="pageIndex" /> will be moved up in this <see cref="T:Leadtools.RasterImage" /> list of pages.</para>
        <para>You cannot have a <see cref="T:Leadtools.RasterImage" /> with no pages, therefore, an exception will occur if you attempt to remove
            the only page left in a <see cref="T:Leadtools.RasterImage" /> object</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>-(void)removePageAt:(unsigned int)pageIndex;</pre>
      </objectivec>
      <java>
        <pre>public void removePageAt(int pageIndex)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)">
      <summary>
            Removes one or more pages from this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="startIndex">1-based index of the first page to remove.</param>
      <param name="count">Number of pages to remove. Specify <c>-1</c> to remove all pages.</param>
      <remarks>
        <para>You cannot have a <see cref="T:Leadtools.RasterImage" /> with no pages, therefore, an exception will occur if you attempt to remove
            the only page left in a <see cref="T:Leadtools.RasterImage" /> object</para>
        <para>This method pulls the pages from <paramref name="startIndex" /> to <paramref name="startIndex" /> +
            <paramref name="count" /> and appends it at the end of the pages
            list of this <see cref="T:Leadtools.RasterImage" /> object.  The number of pages in this image is decremented by 
            <paramref name="count" />.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>-(void)removePages:(int)startIndex count:(int)count;</pre>
      </objectivec>
      <java>
        <pre>public void removePages(int startIndex, int count)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.RemoveAllPages">
      <summary>
            Removes all pages from this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <remarks>
        <para>This method will remove all but the current active page from this <see cref="T:Leadtools.RasterImage" />.  The current active
            page is the page with index equal to <see cref="P:Leadtools.RasterImage.Page" />.  Since you cannot have a <see cref="T:Leadtools.RasterImage" /> with
            no pages, calling this method will result in a <see cref="T:Leadtools.RasterImage" /> object with exactly 1 page.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>-(void)removeAllPages;</pre>
      </objectivec>
      <java>
        <pre>public void removeAllPages()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)">
      <summary>
            Inserts a new page into this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="index">The 1-based index of the page from <paramref name="image" /> to insert. If <paramref name="index" /> is
            equal to <c>-1</c>, the page is inserted at the end. Use <paramref name="index" /> = 0 to insert the new page as the beginning (first).</param>
      <param name="image">The image to add.</param>
      <returns>The 1-based index of the newly inserted page.</returns>
      <remarks>
        <para>This method pulls the current active page of <paramref name="image" /> and inserts into the current
            <see cref="T:Leadtools.RasterImage" /> object at index = <paramref name="index" />. The number of pages in
            <paramref name="image" /> is decremented by one, if <paramref name="image" /> had only one page prior to calling this method, then the <paramref name="image" /> object is disposed
            of and should not be used afterwards.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>-(unsigned int)insertPage:(int)index image:(LTRasterImage*)image;</pre>
      </objectivec>
      <java>
        <pre>public int insertPage(int index, RasterImage image)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)">
      <summary>
            Inserts one or more pages into this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="index">1-based index of the page from <paramref name="image" /> to insert.</param>
      <param name="image">The image containing the source pages.</param>
      <param name="startIndex">1-based index of the first page to insert. Use <paramref name="index" /> = 0 to insert the new page as the beginning (first).</param>
      <param name="count">Number of pages to insert. Specify <c>-1</c> to insert all pages.</param>
      <remarks>
        <para>This method pulls the pages from <paramref name="index" /> to <paramref name="index" /> + <paramref name="count" /> from
            <paramref name="image" /> and inserts them into the current <see cref="T:Leadtools.RasterImage" /> object at
            index = <paramref name="index" />. The number of pages in <paramref name="image" /> is decremented by <paramref name="count" />
            if <paramref name="image" /> had only one page prior to calling this method, then the <paramref name="image" /> object is
            disposed of and should not be used afterwards.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>
-(void)insertPages:(int)index 
             image:(LTRasterImage*)image 
        startIndex:(int)startIndex 
             count:(int)count;            </pre>
      </objectivec>
      <java>
        <pre>
public void insertPages(
  int index, 
  RasterImage image, 
  int startIndex, 
  int count
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)">
      <summary>
            Replaces an existing page in this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="index">The 1-based index of the page from <paramref name="image" /> to replace. If <paramref name="index" /> is
            equal to <c>-1</c>, the last page in the image will be replaced.</param>
      <param name="image">The source image to replace with.</param>
      <remarks>
        <para>This method pulls the current active page of <paramref name="image" /> and inserts into the current
            <see cref="T:Leadtools.RasterImage" /> object at page number = <paramref name="index" />. The number of pages in
            <paramref name="image" /> is decremented by one, if <paramref name="image" /> had only one page prior to calling this method, then the <paramref name="image" /> object is disposed
            of and should not be used afterwards.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>
        <!--RasterImage.ReplacePage-->
      </example>
      <objectivec>
        <pre>
-(void)replacePage:(int)index 
             image:(LTRasterImage*)image;            </pre>
      </objectivec>
      <java>
        <pre>
public void replacePage(
  int index, 
  RasterImage image
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)">
      <summary>
            Replaces one or more pages of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="index">1-based index of the page from <paramref name="image" /> to replace.</param>
      <param name="image">The image containing the source pages.</param>
      <param name="startIndex">1-based index of the first page to replace from.</param>
      <param name="count">Number of pages to replace. Specify <c>-1</c> to replace all pages.</param>
      <remarks>
        <para>This method pulls the pages from <paramref name="index" /> to <paramref name="index" /> + <paramref name="count" /> from
            <paramref name="image" /> and replaces the pages in the current <see cref="T:Leadtools.RasterImage" /> object at
            index = <paramref name="index" />. The number of pages in <paramref name="image" /> is decremented by <paramref name="count" />
            if <paramref name="image" /> had only one page prior to calling this method, then the <paramref name="image" /> object is
            disposed of and should not be used afterwards.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>-(void)replacePages:(int)index image:(LTRasterImage*)image startIndex:(int)startIndex count:(int)count;</pre>
      </objectivec>
      <java>
        <pre>public void replacePages(int index, RasterImage image, int startIndex, int count)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetImageWidthDpi(System.Boolean)">
      <summary>
            Gets the width of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> and <see cref="P:Leadtools.RasterImage.XResolution" /> into account.
            </summary>
      <param name="useDpi">true to take into account the resolution (DPI) of the image; false to ignore the DPI.</param>
      <returns>The width of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> and <see cref="P:Leadtools.RasterImage.XResolution" /> into account.</returns>
      <remarks>
        <para>Use <see cref="P:Leadtools.RasterImage.Width" /> to get the actual width of the image data scanlines.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting For View Perspective</see>.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(unsigned int)getImageWidthDpi:(BOOL)useDpi;</pre>
      </objectivec>
      <java>
        <pre>public int getImageWidthDpi(boolean useDpi)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetImageHeightDpi(System.Boolean)">
      <summary>
            Gets the height of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> and <see cref="P:Leadtools.RasterImage.YResolution" /> into account.
            </summary>
      <param name="useDpi">true to take into account the resolution (DPI) of the image; false to ignore the DPI.</param>
      <returns>The height of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> and <see cref="P:Leadtools.RasterImage.YResolution" /> into account.</returns>
      <remarks>
        <para>Use <see cref="P:Leadtools.RasterImage.Height" /> to get the actual height of the image data scanlines.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting For View Perspective</see>.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(unsigned int)getImageHeightDpi:(BOOL)useDpi;</pre>
      </objectivec>
      <java>
        <pre>public int getImageHeightDpi(boolean useDpi)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetImageSizeDpi(System.Boolean)">
      <summary>
            Gets the size in pixels of this <see cref="T:Leadtools.RasterImage" /> object, taking <see cref="P:Leadtools.RasterImage.YResolution" /> into account.
            </summary>
      <param name="useDpi">true to take into account the resolution (DPI) of the image; false to ignore the DPI.</param>
      <returns>The size in pixels of this <see cref="T:Leadtools.RasterImage" /> object, taking <see cref="P:Leadtools.RasterImage.YResolution" /> into account.</returns>
      <remarks>
            The size in pixels is <see cref="P:Leadtools.RasterImage.Width" /> by <see cref="P:Leadtools.RasterImage.Height" /> pixels.
            </remarks>
      <noexample />
      <objectivec>
        <pre>-(LeadSize)getImageSizeDpi:(BOOL)useDpi;</pre>
      </objectivec>
      <java>
        <pre>public LeadSize getImageSizeDpi(boolean useDpi)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetPalette">
      <summary>
            Gets a copy of the palette of this <see cref="T:Leadtools.RasterImage" /> object that will be used by 1-8 bit color or grayscale image.
            </summary>
      <value>An array of <see cref="T:Leadtools.RasterColor" /> containing the palette for this <see cref="T:Leadtools.RasterImage" /> object.  If this
            <see cref="T:Leadtools.RasterImage" /> object does not contain a palette, null (Nothing in Visual Basic) is returned.</value>
      <remarks>
        <para>The palette is used for 1-8 bit color or grayscale image rendering. Image is grayscale when red, green and blue (R=G=B) components for each palette entry has the same value.</para>
        <para>The image data of a <see cref="T:Leadtools.RasterImage" /> object with <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> values of 1, 2, 3, 4, 5, 6,
            7 or 8 consists of an index into the image palette. You can get a copy of the palette used by using the
            <see cref="M:Leadtools.RasterImage.GetPalette" /> method.</para>
        <para>You can change the palette used by the <see cref="T:Leadtools.RasterImage" /> object with the <see cref="M:Leadtools.RasterImage.SetPalette(Leadtools.RasterColor[],System.Int32,System.Int32)" /> method.</para>
        <p>
            This method does not support signed images.
            </p>
        <para>For more information, refer to <see cref="T:Leadtools.RasterPalette" /> and
            <see cref="T:Leadtools.Topics.IntroductionPaletteHandling">Introduction: Palette Handling</see>.</para>
        <para>For information on 10 to 16-bit grayscale image, refer to the <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetPalette(Leadtools.RasterColor[],System.Int32,System.Int32)" /> and <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" />.</example>
      <objectivec>
        <pre>-(NSArray*)getPalette:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor[] getPalette()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetPalette(Leadtools.RasterColor[],System.Int32,System.Int32)">
      <summary>
            Sets the palette of this <see cref="T:Leadtools.RasterImage" /> object that will be used by 1-8 bit color or grayscale image.
            </summary>
      <param name="palette">An array of <see cref="T:Leadtools.RasterColor" /> containing the new palette to use.</param>
      <param name="startIndex">Index of the first palette entry to replace.</param>
      <param name="count">Number of palette entries to replace.</param>
      <remarks>
        <para>The image data of a <see cref="T:Leadtools.RasterImage" /> object with <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> values of 1, 2, 3, 4, 5, 6,
            7 or 8 consists of an index into the image palette. You can get a copy of the palette used by using the
            <see cref="M:Leadtools.RasterImage.GetPalette" /> method.</para>
        <para>You can change the palette used by the <see cref="T:Leadtools.RasterImage" /> object with the <see cref="M:Leadtools.RasterImage.SetPalette(Leadtools.RasterColor[],System.Int32,System.Int32)" /> method.</para>
        <p>
            This method does not support signed images.
            </p>
        <para>For more information, refer to <see cref="T:Leadtools.RasterPalette" /> and
            <see cref="T:Leadtools.Topics.IntroductionPaletteHandling">Introduction: Palette Handling</see>.</para>
        <para>For information on 10 to 16-bit grayscale image, refer to the <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.SetPalette-->
      </example>
      <objectivec>
        <pre>-(BOOL)setPalette:(NSArray*)palette startIndex:(unsigned int)startIndex count:(unsigned int)count error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void setPalette(RasterColor[] palette, int startIndex, int count)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetLookupTable">
      <summary>
            Gets the 8-bit lookup table (LUT) of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <keywords>LUT|Lookup Table</keywords>
      <returns>An array of <see cref="T:Leadtools.RasterColor" /> structures which represent the lookup table (LUT) of this <see cref="T:Leadtools.RasterImage" />.</returns>
      <remarks>
        <para>The lookup table (LUT) is used when the value of <see cref="P:Leadtools.RasterImage.UseLookupTable" /> is set to true.</para>
        <para>The 8-bit and 16-bit lookup tables are synchronized, so when you change one, the other is changed as well
            The 16-bit lookup table (<see cref="M:Leadtools.RasterImage.GetLookupTable16" />)
            has more precision so it is recommended you use the 16-bit LUT instead of the 8-bit LUT.
            </para>
        <para>LUT is also used for displaying extended Palette color image such as bit stored is 16-bit and LUT contains color value. This is typical of Ultra Sound image.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetLookupTable(Leadtools.RasterColor[])" />.</example>
      <seealso cref="T:Leadtools.Drawing.RasterPaintCallbacks" />
      <seealso cref="T:Leadtools.Topics.ImplementingCustomPaint">Implementing custom paint</seealso>
      <objectivec>
        <pre>-(NSArray*)getLookupTable;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor[] getLookupTable()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetLookupTable(Leadtools.RasterColor[])">
      <summary>
            Sets the 8-bit lookup table (LUT) of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <keywords>LUT|Lookup Table</keywords>
      <param name="value">An array of <see cref="T:Leadtools.RasterColor" /> structures which represent the lookup table (LUT) of this
            <see cref="T:Leadtools.RasterImage" />.</param>
      <remarks>
        <para>The lookup table (LUT) is used when the value of <see cref="P:Leadtools.RasterImage.UseLookupTable" /> is set to true.</para>
        <para>The 8-bit and 16-bit lookup tables are synchronized, so when you change one, the other is changed as well
            The 16-bit lookup table (<see cref="M:Leadtools.RasterImage.SetLookupTable16(Leadtools.RasterColor16[])" />)
            has more precision so it is recommended you use the 16-bit LUT instead of the 8-bit LUT.</para>
        <para>LUT is only used for 10-16 bit extended grayscale image or 10-16 bit palette color image. To update the palette in 1-8 bit image use <see cref="M:Leadtools.RasterImage.SetPalette(Leadtools.RasterColor[],System.Int32,System.Int32)" />. For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
        <para>LUT is also used for displaying extended Palette color image such as bit stored is 16-bit and LUT contains color value. This is typical of Ultra Sound image.</para>
      </remarks>
      <example>
        <!--RasterImage.SetLookupTable-->
      </example>
      <seealso cref="T:Leadtools.Drawing.RasterPaintCallbacks" />
      <seealso cref="T:Leadtools.Topics.ImplementingCustomPaint">Implementing custom paint</seealso>
      <objectivec>
        <pre>-(BOOL)setLookupTable:(NSArray*)value error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void setLookupTable(RasterColor[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetPaintLookupTable">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(NSData*)getPaintLookupTable;</pre>
      </objectivec>
      <java>
        <pre>public byte[] getPaintLookupTable()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetPaintLookupTable(System.Byte[])">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <param name="value">An array of bytes representing the paint lookup table to use.</param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(void)setPaintLookupTable:(NSData*)value;</pre>
      </objectivec>
      <java>
        <pre>public void setPaintLookupTable(byte[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetLookupTable16">
      <summary>
            Gets the 16-bit lookup table (LUT) of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <isnew>2/28/2009</isnew>
      <keywords>LUT|Lookup Table</keywords>
      <returns>An array of <see cref="T:Leadtools.RasterColor16" /> structures which represent the lookup table (LUT) of this <see cref="T:Leadtools.RasterImage" />.</returns>
      <remarks>
        <para>The lookup table (LUT) is used when the value of <see cref="P:Leadtools.RasterImage.UseLookupTable" /> is set to true.</para>
        <para>The 8-bit (<see cref="M:Leadtools.RasterImage.GetLookupTable" />) and 16-bit lookup tables are synchronized,
            so when you change one, the other is changed as well. The 16-bit lookup table  
            has more precision so it is recommended you use the 16-bit LUT instead of the 8-bit LUT.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.Drawing.RasterPaintCallbacks">RasterPaintCallbacks</see>.
            </example>
      <seealso cref="T:Leadtools.Drawing.RasterPaintCallbacks" />
      <seealso cref="T:Leadtools.Topics.ImplementingCustomPaint">Implementing custom paint</seealso>
      <objectivec>
        <pre>-(NSArray*)getLookupTable16;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor16[] getLookupTable16()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetLookupTable16(Leadtools.RasterColor16[])">
      <summary>
            Sets the 16-bit lookup table (LUT) of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <isnew>2/28/2009</isnew>
      <keywords>LUT|Lookup Table|LUT16</keywords>
      <param name="value">An array of <see cref="T:Leadtools.RasterColor16" /> structures which represent the lookup table (LUT) of this
            <see cref="T:Leadtools.RasterImage" />.</param>
      <remarks>
        <para>The lookup table (LUT) is used when the value of <see cref="P:Leadtools.RasterImage.UseLookupTable" /> is set to true.</para>
        <para>The 8-bit (<see cref="M:Leadtools.RasterImage.SetLookupTable(Leadtools.RasterColor[])" />) and 16-bit lookup tables are synchronized,
            so when you change one, the other is changed as well. The 16-bit lookup table 
            has more precision so it is recommended you use the 16-bit LUT instead of the 8-bit LUT.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetLookupTable(Leadtools.RasterColor[])" />.</example>
      <seealso cref="T:Leadtools.Drawing.RasterPaintCallbacks" />
      <seealso cref="T:Leadtools.Topics.ImplementingCustomPaint">Implementing custom paint</seealso>
      <objectivec>
        <pre>-(BOOL)setLookupTable16:(NSArray*)value error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void setLookupTable16(RasterColor16[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetPaintLookupTable16">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <isnew>2/28/2009</isnew>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(NSData*)getPaintLookupTable16;</pre>
      </objectivec>
      <java>
        <pre>public short[] getPaintLookupTable16()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetPaintLookupTable16(System.UInt16[])">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <isnew>2/28/2009</isnew>
      <noremarks />
      <noexample />
      <exclude />
      <objectivec>
        <pre>-(void)setPaintLookupTable16:(NSData*)value;</pre>
      </objectivec>
      <java>
        <pre>public void setPaintLookupTable16(short[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.MakeRegionEmpty">
      <summary>
            Removes the region from the image and frees the memory used for the region.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.HasRegion" />.</example>
      <objectivec>
        <pre>-(void)makeRegionEmpty;</pre>
      </objectivec>
      <java>
        <pre>public void makeRegionEmpty()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CalculateRegionMaximumClipSegments">
      <summary>
            Gets the number of elements required to hold the clip segments for any row in the region.
            </summary>
      <returns>The maximum number of segments in a row within the region.</returns>
      <remarks>
        <para>Use this method in conjunction with <see cref="M:Leadtools.RasterImage.GetRegionClipSegments(System.Int32,System.Int32[],System.Int32)" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRegionClipSegments(System.Int32,System.Int32[],System.Int32)" />.</example>
      <objectivec>
        <pre>-(unsigned int)calculateRegionMaximumClipSegments;</pre>
      </objectivec>
      <java>
        <pre>public int calculateRegionMaximumClipSegments()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRegionClipSegments(System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gets the segments contained in the region for a particular row.
            </summary>
      <param name="row">The number of the row for which to get the segments. The first row is 0, and the last row is 1 less
            than the image height.</param>
      <param name="segmentsBuffer">Buffer to be updated with the segments from <paramref name="row" /> contained in the region.</param>
      <param name="segmentsBufferOffset">Zero based index into <paramref name="segmentsBuffer" />.</param>
      <returns>The number of segments from <paramref name="row" /> that are contained in the region.</returns>
      <remarks>
        <para>To use this method, first call <see cref="M:Leadtools.RasterImage.GetRegionBounds(Leadtools.RasterRegionXForm)" /> with the <i>xform</i> set to null
            (Nothing in Visual Basic), to get the image boundaries. The bounding rectangle will indicate which rows are
            contained in the region. Go through all the rows contained in the region to get the segments contained in the region.</para>
        <para>The segments are returned as an array of pairs of horizontal offsets. The first point in the pair is the beginning
            of the segment (it is contained in the region). The last point in the pair is the end of the segment. To follow the
            Windows rules, the end of the segment is the first point NOT CONTAINED in the region.</para>
        <para>In most regions, there will be one segment per row. However, some regions can have 0, 1, 2 or more segments.</para>
        <para>For example, assume that for a particular row there are two segments. <paramref name="segmentsBuffer" /> will be
            filled with 4 values. Let's call them x0, x1, x2, x3. In this case:
            <list><item><description>portion from 0 to x0 - 1 is OUTSIDE the region</description></item><item><description>portion from x0 to x1 - 1 is INSIDE the region</description></item><item><description>portion from x1 to x2 - 1 is OUTSIDE the region</description></item><item><description>portion from x2 to x3 - 1 is INSIDE the region</description></item><item><description>portion from x3 to <see cref="P:Leadtools.RasterImage.Width" /> - 1 is OUTSIDE the region</description></item></list></para>
      </remarks>
      <example>
            This example sets the value of pixels inside a region to half intensity.
            <!--RasterImage.GetRegionClipSegments--></example>
      <objectivec>
        <pre>
-(unsigned int)getRegionClipSegments:(int)row 
                      segmentsBuffer:(unsigned int*)segmentsBuffer;            </pre>
      </objectivec>
      <java>
        <pre>
public int getRegionClipSegments(
  int row, 
  int[] segmentsBuffer, 
  int segmentsBufferOffset
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CalculateRegionArea">
      <summary>
            Gets the total number of pixels in the image region.
            </summary>
      <returns>The pixel count.</returns>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.
            </remarks>
      <example>
        <!--RasterImage.CalculateRegionArea-->
      </example>
      <objectivec>
        <pre>-(size_t)calculateRegionArea;</pre>
      </objectivec>
      <java>
        <pre>public long calculateRegionArea()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRegionBounds(Leadtools.RasterRegionXForm)">
      <summary>
            Gets the bounding rectangle of the image region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <returns>The bounding rectangle.</returns>
      <noremarks />
      <example>
        <!--RasterImage.GetRegionBounds-->
      </example>
      <objectivec>
        <pre>-(LeadRect)getRegionBounds:(LTRasterRegionXForm*)xform;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getRegionBounds(RasterRegionXForm xform)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRegionBoundsClipped(Leadtools.RasterRegionXForm)">
      <summary>
            Gets the bounding rectangle of the image region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <returns>The bounding rectangle.</returns>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.
            </remarks>
      <noexample />
      <objectivec>
        <pre>-(LeadRect)getRegionBoundsClipped:(LTRasterRegionXForm*)xform;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getRegionBoundsClipped(RasterRegionXForm xform)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.RegionContains(System.Int32,System.Int32)">
      <summary>
            Determines whether the specified pixel is in the image region.
            </summary>
      <param name="row">The row number of the pixel.</param>
      <param name="col">The column number of the pixel.</param>
      <returns>true if the specified pixel is in the region; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for
            the view perspective of the image.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.RegionContains-->
      </example>
      <objectivec>
        <pre>-(BOOL)regionContains:(int)row col:(int)col;</pre>
      </objectivec>
      <java>
        <pre>public boolean regionContains(int row, int col)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.OffsetRegion(System.Int32,System.Int32)">
      <summary>
            Moves the image region by the specified number of rows and columns.
            </summary>
      <param name="rowOffset">The number of rows to move the region.</param>
      <param name="colOffset">The number of columns to move the region.</param>
      <remarks>
        <para>The move does not affect the pixels in the region.</para>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for
            the view perspective of the image.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.FlipRegion" />.</example>
      <objectivec>
        <pre>
-(BOOL)offsetRegion:(int)rowOffset 
          colOffset:(int)colOffset 
              error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void offsetRegion(
  int rowOffset, 
  int colOffset
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.FlipRegion">
      <summary>
            Flips the image region (top to bottom).
            </summary>
      <noremarks />
      <example>
        <!--RasterImage.FlipRegion-->
      </example>
      <objectivec>
        <pre>-(BOOL)flipRegion:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void flipRegion()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.ReverseRegion">
      <summary>
            Flips the image region (left to right).
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.FlipRegion" />.</example>
      <objectivec>
        <pre>-(BOOL)reverseRegion:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void reverseRegion()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRegion(Leadtools.RasterRegionXForm)">
      <summary>
            Gets the <see cref="T:Leadtools.RasterRegion" /> object that describes this <see cref="T:Leadtools.RasterImage" /> current region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate between display coordinates and image coordinates. If you
            specify <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) for this parameter, the scalar fields default to 1, the offsets default to 0, and
            the view perspective defaults to the image view perspective.</param>
      <returns>An <see cref="T:Leadtools.RasterRegion" /> object that describes this <see cref="T:Leadtools.RasterImage" /> current region.</returns>
      <remarks>
        <para>To set or updated the <see cref="T:Leadtools.RasterRegion" /> object that describes the current image region, use <see cref="M:Leadtools.RasterImage.SetRegion(Leadtools.RasterRegionXForm,Leadtools.RasterRegion,Leadtools.RasterRegionCombineMode)" />.</para>
        <para>If the image does not have a region, this method will return an empty <see cref="T:Leadtools.RasterRegion" /> object.</para>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class provides a platform independent representation of a region of interest in an image that can be used in any
            platform supported by LEADTOOLS such as GDI, GDI+, WPF and Silverlight. The <see cref="T:Leadtools.RasterRegion" /> class contains extensive methods and properties 
            to manipulate the region data and save/load it to a byte array.</para>
        <para>To convert a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> object to/from a device dependent region, you can use the following helper classes:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:Leadtools.Drawing.RasterRegionConverter">Leadtools.Drawing.RasterRegionConverter</see> to convert to/from a System.Drawing (GDI+) <see cref="T:System.Drawing.Region">System.Drawing.Region</see> or Windows HRGN objects.</description>
          </item>
          <item>
            <description>
              <see cref="T:Leadtools.Windows.Media.RasterRegionConverter">Leadtools.Windows.Media.RasterRegionConverter</see> to convert to/from a WPF and Silverlight <see cref="T:System.Windows.Media.Geometry">System.Windows.Media.Geometry</see> object.</description>
          </item>
        </list>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class implements the <see cref="T:System.IDisposable" /> interface, so you must call <see cref="M:System.IDisposable.Dispose" /> on any
            region objects you create after using it.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
      <objectivec>
        <pre>-(LTRasterRegion*)getRegion:(LTRasterRegionXForm*)xform error:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterImage.SetRegion(Leadtools.RasterRegionXForm,Leadtools.RasterRegion,Leadtools.RasterRegionCombineMode)">
      <summary>
            Sets or updates the <see cref="T:Leadtools.RasterRegion" /> object that describes this <see cref="T:Leadtools.RasterImage" /> current region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate between display coordinates and image coordinates. If you
            specify <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) for this parameter, the scalar fields default to 1, the offsets default to 0, and
            the view perspective defaults to the image view perspective.</param>
      <param name="region">A <see cref="T:Leadtools.RasterRegion" /> object to set or update into this <see cref="T:Leadtools.RasterImage" />. If this parameter is an empty region or null
            (Nothing in Visual Basic), then the current region in the image will be deleted (this is the equivalent of calling <see cref="M:Leadtools.RasterImage.MakeRegionEmpty" />.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To get the <see cref="T:Leadtools.RasterRegion" /> object that describes the current image region, use <see cref="M:Leadtools.RasterImage.GetRegion(Leadtools.RasterRegionXForm)" />.</para>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class provides a platform independent representation of a region of interest in an image that can be used in any
            platform supported by LEADTOOLS such as GDI, GDI+, WPF and Silverlight. The <see cref="T:Leadtools.RasterRegion" /> class contains extensive methods and properties 
            to manipulate the region data and save/load it to a byte array.</para>
        <para>To convert a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> object to/from a device dependent region, you can use the following helper classes:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:Leadtools.Drawing.RasterRegionConverter">Leadtools.Drawing.RasterRegionConverter</see> to convert to/from a System.Drawing (GDI+) <see cref="T:System.Drawing.Region">System.Drawing.Region</see> or Windows HRGN objects.</description>
          </item>
          <item>
            <description>
              <see cref="T:Leadtools.Windows.Media.RasterRegionConverter">Leadtools.Windows.Media.RasterRegionConverter</see> to convert to/from a WPF and Silverlight <see cref="T:System.Windows.Media.Geometry">System.Windows.Media.Geometry</see> object.</description>
          </item>
        </list>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class implements the <see cref="T:System.IDisposable" /> interface, so you must call <see cref="M:System.IDisposable.Dispose" /> on any
            region objects you create after using it.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
      <objectivec>
        <pre>
-(BOOL)setRegion:(LTRasterRegionXForm*)xform 
          region:(LTRasterRegion*)region 
     combineMode:(LTRasterRegionCombineMode)combineMode 
           error:(NSError**)outError;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterImage.AddRectangleToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a rectangular region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="rc">A <see cref="T:Leadtools.LeadRect" /> that specifies the region.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example loads an image, adds a rectangle region to it, and runs the 
            <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddRectangleToRegion--></example>
      <objectivec>
        <pre>
-(BOOL)addRectangleToRegion:(LTRasterRegionXForm*)xform 
                         rc:(LeadRect)rc 
                combineMode:(LTRasterRegionCombineMode)combineMode 
                      error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addRectangleToRegion(
  RasterRegionXForm xform, 
  LeadRect rc, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddEllipseToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding an elliptical region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="rc">A <see cref="T:Leadtools.LeadRect" /> that represents the bounding rectangle that defines the ellipse.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, adds an elliptical region to it, run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddEllipseToRegion--></example>
      <objectivec>
        <pre>
-(BOOL)addEllipseToRegion:(LTRasterRegionXForm*)xform 
                       rc:(LeadRect)rc 
              combineMode:(LTRasterRegionCombineMode)combineMode 
                    error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addEllipseToRegion(
  RasterRegionXForm xform, 
  LeadRect rc, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddRoundRectangleToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.LeadSize,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a rounded rectangular region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="rc">A <see cref="T:Leadtools.LeadRect" /> that specifies the bounding rectangle of the region.</param>
      <param name="ellipse">Specifies the width and height of the ellipse that describes the arc of the rounded corners.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, adds a round rectangle region to it, run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddRoundRectangleToRegion--></example>
      <java>
        <pre>
public void addRoundRectangleToRegion(
  RasterRegionXForm xform, 
  LeadRect rc, 
  LeadPoint ellipse, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddPolygonToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterCollection{Leadtools.LeadPoint},Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a polygonal region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="points">A collection of <see cref="T:Leadtools.LeadPoint" /> objects. The points in the collection must be in the order in
            which the vertices of the polygon are connected. To create the line that closes the polygon, the last point in the
            collection is connected to the first point of the collection.</param>
      <param name="fillMode">
        <para>Indicates how to handle complex crossing lines.</para>
        <para>
          <table>
            <tr>
              <th>Value</th>
              <th>Meaning</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadPoint.Winding</see>
              </td>
              <td>All pixels that are inside the resulting exterior lines are in the region.</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </td>
              <td>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</td>
            </tr>
          </table>
          <para>
            <img src="FillMode.gif" title="Fill Mode" />
          </para>
        </para>
      </param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, add a polygon region to it, and then run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddPolygonToRegion--></example>
      <java>
        <pre>
public void addPolygonToRegion(
  RasterRegionXForm xform, 
  RasterCollection&lt;LeadPoint&gt; points, 
  Path.FillType fillType, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddPolygonToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadPoint[],Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a polygonal region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="pts">Array of <see cref="T:Leadtools.LeadPoint" /> objects. The points in the array must be in the order in which
            the vertices of the polygon are connected. To create the line that closes the polygon,
            the last point in the array is connected to the first point of the array.</param>
      <param name="fillMode">
        <para>Indicates how to handle complex crossing lines.</para>
        <para>
          <table>
            <tr>
              <th>Value</th>
              <th>Meaning</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Winding</see>
              </td>
              <td>All pixels that are inside the resulting exterior lines are in the region.</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </td>
              <td>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</td>
            </tr>
          </table>
          <para>
            <img src="FillMode.gif" title="Fill Mode" />
          </para>
        </para>
      </param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, add a polygon region to it, and run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddPolygonToRegion--></example>
      <objectivec>
        <pre>
-(BOOL)addPolygonToRegion:(LTRasterRegionXForm*)xform 
                   points:(const LeadPoint*)points 
                   length:(unsigned int)length 
                 fillMode:(LTLeadFillMode)fillMode 
              combineMode:(LTRasterRegionCombineMode)combineMode 
                    error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addPolygonToRegion(
  RasterRegionXForm xform, 
  LeadPoint[] pts, 
  Path.FillType fillType, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddCurveToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterCurve,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a curved region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="curve">A <see cref="T:Leadtools.RasterCurve" /> object that specifies the curve region. You specify the curve using
            device context coordinates, and LEADTOOLS translates the coordinates using the values specified in the <paramref name="xform" />.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterCurve" />.</example>
      <java>
        <pre>
public void addCurveToRegion(
  RasterRegionXForm xform, 
  RasterCurve curve, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddCurveToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterCollection{Leadtools.LeadPoint},System.Single,Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a curved region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="points">Collection of <see cref="T:Leadtools.LeadPoint" /> objects. The points in the array must be in the order in which
            the vertices of the polygon are connected. To create the line that closes the polygon,
            the last point in the array is connected to the first point of the array.</param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater
            than 1 produce unpredictable results.</param>
      <param name="fillMode">
        <para>Indicates how to handle complex crossing lines.</para>
        <para>
          <table>
            <tr>
              <th>Value</th>
              <th>Meaning</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Winding</see>
              </td>
              <td>All pixels that are inside the resulting exterior lines are in the region.</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </td>
              <td>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</td>
            </tr>
          </table>
          <para>
            <img src="FillMode.gif" title="Fill Mode" />
          </para>
        </para>
      </param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.AddCurveToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadPoint[],System.Single,Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)" /></example>
      <java>
        <pre>
public void addCurveToRegion(
  RasterRegionXForm xform, 
  RasterCollection&lt;LeadPoint&gt; points, 
  float tension, 
  Path.FillType fillMode, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddCurveToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadPoint[],System.Single,Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a curved region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="pts">Array of <see cref="T:Leadtools.LeadPoint" /> objects. The points in the array must be in the order in which
            the vertices of the polygon are connected. To create the line that closes the polygon,
            the last point in the array is connected to the first point of the array.</param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater
            than 1 produce unpredictable results.</param>
      <param name="fillMode">
        <para>Indicates how to handle complex crossing lines.</para>
        <para>
          <table>
            <tr>
              <th>Value</th>
              <th>Meaning</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Winding</see>
              </td>
              <td>All pixels that are inside the resulting exterior lines are in the region.</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </td>
              <td>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</td>
            </tr>
          </table>
          <para>
            <img src="FillMode.gif" title="Fill Mode" />
          </para>
        </para>
      </param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, adds a curve region to it, run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddCurveToRegion--></example>
      <java>
        <pre>
public void addCurveToRegion(
  RasterRegionXForm xform, 
  LeadPoint[] pts, 
  float tension, 
  Path.FillType fillMode, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddBeziersToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterCollection{Leadtools.LeadPoint},Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a bezier region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="points">A collection of <see cref="T:Leadtools.LeadPoint" /> objects. The points in the collection must be in the order in
            which the vertices of the polygon are connected. To create the line that closes the polygon,
            the last point in the collection is connected to the first point of the collection.</param>
      <param name="fillMode">
        <para>Indicates how to handle complex crossing lines.</para>
        <para>
          <table>
            <tr>
              <th>Value</th>
              <th>Meaning</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Winding</see>
              </td>
              <td>All pixels that are inside the resulting exterior lines are in the region.</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </td>
              <td>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</td>
            </tr>
          </table>
          <para>
            <img src="FillMode.gif" title="Fill Mode" />
          </para>
        </para>
      </param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.AddBeziersToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadPoint[],Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)" /></example>
      <java>
        <pre>
public void addBeziersToRegion(
  RasterRegionXForm xform, 
  RasterCollection&lt;LeadPoint&gt; points, 
  Path.FillType fillMode, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddBeziersToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadPoint[],Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a bezier region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="pts">An array of <see cref="T:Leadtools.LeadPoint" /> objects. The points in the collection must be in the order in
            which the vertices of the polygon are connected. To create the line that closes the polygon,
            the last point in the collection is connected to the first point of the collection.</param>
      <param name="fillMode">
        <para>Indicates how to handle complex crossing lines.</para>
        <para>
          <table>
            <tr>
              <th>Value</th>
              <th>Meaning</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Winding</see>
              </td>
              <td>All pixels that are inside the resulting exterior lines are in the region.</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </td>
              <td>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</td>
            </tr>
          </table>
          <para>
            <img src="FillMode.gif" title="Fill Mode" />
          </para>
        </para>
      </param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, adds a bezier curve region to it, run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddBeziersToRegion--></example>
      <java>
        <pre>
public void addBeziersToRegion(
  RasterRegionXForm xform, 
  LeadPoint[] pts, 
  Path.FillType fillMode, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddColorRgbRangeToRegion(Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a region that consists of all the pixels that fall in the given RGB color range.
            </summary>
      <param name="lowerColor">Specifies the minimum (inclusive) R, G and B values.
            A pixel must have R,G, and B all greater than or equal to <paramref name="lowerColor" /> and less than or equal to
            <paramref name="upperColor" /> to be included in the region.</param>
      <param name="upperColor">Specifies the maximum (inclusive) R, G and B values.
            A pixel must have R,G, and B all greater than or equal to <paramref name="lowerColor" /> and less than or equal to
            <paramref name="upperColor" /> to be included in the region.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <keywords>RGB</keywords>
      <remarks>
        <para>This method uses the RGB color model to set a region based on a color range.</para>
        <para>To be added to the region a color must fall in the range <paramref name="lowerColor" />..<paramref name="upperColor" />.
            To set a region for all pure red, specify <paramref name="lowerColor" /> and <paramref name="upperColor" /> as follows:</para>
        <para>
          <code>
            lowerColor RGB(1,0,0)
            upperColor RGB(255,0,0)
              </code>
        </para>
        <para>Note that this would fail to include many colors that look red to the eye (like RGB(255,4,4)).</para>
        <para>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale
            and 48 and 64-bit color images is available only in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>This method supports signed/unsigned data images.</para>
        <para>The AddColorRgbRangeToRegion function can use the Extended Grayscale mask. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a>.</para>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
        <para>In the <a href="https://www.leadtools.com/help/leadtools/v19/mapping/expressed.html">Document and Medical</a> toolkits, the COLORREF value 
            can represent a 16 bit grayscale value if <see cref="T:Leadtools.RasterImage" /> is a 12 or 16-bit grayscale bitmap. To avoid confusion with an RGB 
            value, set the COLORREF_GRAY16 mask (0x04000000). In this case (0x0400YYYY), the lower 16 bits (0xYYYY) of the COLORREF value represent the 16-bit 
            grayscale value. (0x0400FFFF is 16-bit white and 0x04000000 is 16-bit black.) This is not a standard Windows value. Therefore, although LEADTOOLS 
            methods will recognize a COLORREF having this format, but Windows methods will not.</para>
      </remarks>
      <example>
            This example will load an image, add a region corresponding to all colors that have an RGB that includes green but no red and no blue, and run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddColorRgbRangeToRegion--></example>
      <seealso cref="T:Leadtools.Topics.GrayScaleImages">Gray Scale Images</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionBitsPerPixel">Introduction: Bits Per Pixel and Related Ideas</seealso>
      <seealso cref="T:Leadtools.Topics.UsingColorValuesInLEADTOOLS">Using Color Values in LEADTOOLS</seealso>
      <objectivec>
        <pre>
-(BOOL)addColorRgbRangeToRegion:(LTRasterColor*)lowerColor 
                     upperColor:(LTRasterColor*)upperColor 
                    combineMode:(LTRasterRegionCombineMode)combineMode 
                          error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addColorRgbRangeToRegion(
  RasterColor lowerColor, 
  RasterColor upperColor, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddColorHsvRangeToRegion(Leadtools.RasterHsvColor,Leadtools.RasterHsvColor,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a region that consists of all the pixels that fall in the given HSV color range.
            </summary>
      <param name="lowerColor">Specifies the minimum (inclusive) R, G and B values.
            A pixel must have H,S, and V all greater than or equal to <paramref name="lowerColor" /> and less than or equal to
            <paramref name="upperColor" /> to be included in the region.</param>
      <param name="upperColor">Specifies the maximum (inclusive) R, G and B values.
            A pixel must have H,S, and V all greater than or equal to <paramref name="lowerColor" /> and less than or equal to
            <paramref name="upperColor" /> to be included in the region.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <keywords>HSV|RGB</keywords>
      <remarks>
        <para>This method uses the HSV color model to set a region based on a color range.</para>
        <para>It is useful for identifying all shades of a certain color.  For example, this method could be used to set a region of
            all green colors including:</para>
        <para>
          <table>
            <tr>
              <td>RGB(0,1,0)</td>
              <td> </td>
              <td> </td>
            </tr>
            <tr>
              <td>RGB(0,2,0)</td>
              <td>RGB(1,2,1)</td>
              <td> </td>
            </tr>
            <tr>
              <td>RGB(0,1,0)</td>
              <td> </td>
              <td>-</td>
            </tr>
            <tr>
              <td>RGB(0,3,0)</td>
              <td>RGB(1,3,1)</td>
              <td>RGB(2,3,2)</td>
            </tr>
            <tr>
              <td>RGB(0,255,0)</td>
              <td>RGB(1,255,1)</td>
              <td>RGB(2,255,2)</td>
            </tr>
          </table>
        </para>
        <para>The diagram below shows how S and V affect the color green (H = 85):</para>
        <para>
          <img src="HueTable.gif" title="Hue Table" />
        </para>
        <para>To be added to the region a color must fall in the range <paramref name="lowerColor" />...<paramref name="upperColor" />.
            If you want to set a region for all red (and colors near red), you could specify <paramref name="lowerColor" /> 
            and <paramref name="upperColor" /> as follows:</para>
        <para>
          <code>
            lowerColor (250,1,1)
            upperColor (5,255,255)
            </code>
        </para>
        <para>The hue for the lowerColor is 250 and the hue for the upperColor is 5.  For the hue to fall in this range it must be 250, 251, 252, 253, 254, 255, 
            1, 2, 3, 4, or 5. Note that the values for hue wrap from 255 to 1.</para>
        <para>This method supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale
            and 48 and 64-bit color images is available only in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>This method does not support signed data images.</para>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, adds a region corresponding to all pure green (Hue = 85) and colors near green (+/- 10), run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddColorHsvRangeToRegion--></example>
      <seealso cref="T:Leadtools.Topics.GrayScaleImages">Gray Scale Images</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionBitsPerPixel">Introduction: Bits Per Pixel and Related Ideas</seealso>
      <seealso cref="T:Leadtools.Topics.UsingColorValuesInLEADTOOLS">Using Color Values in LEADTOOLS</seealso>
      <objectivec>
        <pre>
-(BOOL)addColorHsvRangeToRegion:(LTRasterHsvColor*)lowerColor 
                     upperColor:(LTRasterHsvColor*)upperColor 
                    combineMode:(LTRasterRegionCombineMode)combineMode 
                          error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addColorHsvRangeToRegion(
  RasterHsvColor lowerColor, 
  RasterHsvColor upperColor, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddColorToRegion(Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a region that consists of all the pixels of a specified color.
            </summary>
      <param name="color">Specifies the color to use for the region.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>You can use this method to simulate the use of a transparent color as follows:</para>
        <para>
          <list type="number">
            <item>
              <description>Call <see cref="M:Leadtools.RasterImage.AddColorToRegion(Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)" />, with the transparent color in the <paramref name="color" />
            parameter and <see cref="T:Leadtools.RasterRegionCombineMode">RasterRegionCombineMode.SetNot</see> in the combineMode parameter.</description>
            </item>
            <item>
              <description>Call <see cref="M:Leadtools.Drawing.RasterImagePainter.PaintRegion(Leadtools.RasterImage,System.IntPtr,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.Drawing.RasterPaintProperties)" /> to paint the resulting region, which includes everything in the image,
            except the transparent color.</description>
            </item>
          </list>
        </para>
        <para>To update an existing region, specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>The AddColorToRegion function can use the Extended Grayscale mask. For more information, refer to 
            <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
        <para>This method supports unsigned data images, but not signed ones.</para>
        <para>In the <a href="https://www.leadtools.com/help/leadtools/v19/mapping/expressed.html">Document and Medical</a> toolkits, the COLORREF value 
            can represent a 16 bit grayscale value if <see cref="T:Leadtools.RasterImage" /> is a 12 or 16-bit grayscale bitmap. To avoid confusion with an RGB 
            value, set the COLORREF_GRAY16 mask (0x04000000). In this case (0x0400YYYY), the lower 16 bits (0xYYYY) of the COLORREF value represent the 16-bit 
            grayscale value. (0x0400FFFF is 16-bit white and 0x04000000 is 16-bit black.) This is not a standard Windows value. Therefore, although LEADTOOLS 
            methods will recognize a COLORREF having this format, but Windows methods will not.</para>
      </remarks>
      <example>
            This example will load an image, adds a region all pixels of a specified color. It then fills the region with blue before saving it back to disk.
            <!--RasterImage.AddColorToRegion--></example>
      <seealso cref="T:Leadtools.Topics.GrayScaleImages">Gray Scale Images</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionBitsPerPixel">Introduction: Bits Per Pixel and Related Ideas</seealso>
      <seealso cref="T:Leadtools.Topics.UsingColorValuesInLEADTOOLS">Using Color Values in LEADTOOLS</seealso>
      <objectivec>
        <pre>
-(BOOL)addColorToRegion:(LTRasterColor*)color 
            combineMode:(LTRasterRegionCombineMode)combineMode 
                  error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addColorToRegion(
  RasterColor color, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CreateMaskFromRegion">
      <summary>
            Creates a 1-bit mask image from the region that is defined in the image.
            </summary>
      <returns>The newly created <see cref="T:Leadtools.RasterImage" /> which will be updated with a 1-bit, black-and-white image,
            where pixels from the region are white, and all others are black.
            </returns>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingTransparency">Implementing Transparency</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
        <para>This example will load an image, sets a color region using black, and then creates a 1-bit mask image from that image and saves it to disk.</para>
        <!--RasterImage.CreateMaskFromRegion-->
      </example>
      <objectivec>
        <pre>-(LTRasterImage*)createMaskFromRegion:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage createMaskFromRegion()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddMaskToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterImage,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a region that consists of all the white pixels in a 1-bit mask image.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate between display
            coordinates and image coordinates.</param>
      <param name="maskImage">The 1-bit black-and-white <see cref="T:Leadtools.RasterImage" /> used as a mask.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.CreateMaskFromRegion" />.</example>
      <objectivec>
        <pre>
-(BOOL)addMaskToRegion:(LTRasterRegionXForm*)xform 
             maskImage:(LTRasterImage*)maskImage 
           combineMode:(LTRasterRegionCombineMode)combineMode 
                 error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addMaskToRegion(
  RasterRegionXForm xform, 
  RasterImage maskImage, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddMagicWandToRegion(System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)">
      <summary>
            Sets a region based on the color found at point x, y in the image.
            </summary>
      <param name="left">X coordinate of a point. The color of the specified point will be used to set the region.</param>
      <param name="top">Y coordinate of a point. The color of the specified point will be used to set the region.</param>
      <param name="lowerToleranceColor">Lower tolerance values that set the lower stopping point for the region.</param>
      <param name="upperToleranceColor">Upper tolerance values that set the upper stopping point for the region.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>For color bitmaps: </para>
        <para>If the value of the pixel at (x, y) is (125, 125, 125) and lowerToleranceColor is (20,30,15), 
            then the lower stopping point is (105, 95, 110). If upperToleranceColor is (20,30,15), 
            then the upper stopping point is (145,155,140).</para>
        <para>For gray scale bitmaps:</para>
        <para>The minimum channel tolerance value of <paramref name="lowerToleranceColor" /> will be used to set the lower
            stopping point, and the value of <paramref name="upperToleranceColor" /> will be used to set the upper stopping
            point. For example, if the value of the pixel at (x, y) is (125, 125, 125) and <paramref name="lowerToleranceColor" />
            is (20,30,15), the smallest value of the triplet (15) will be used to create the lower stopping
            point of (110,110,110). If <paramref name="upperToleranceColor" /> is (10,25,20), the smallest value of that 
            triplet (10) will be used to create the upper stopping point of (135,135,135).</para>
        <para>This function supports 12 and 16-bit grayscale and 48 and 64-bit color images. Support for 12 and 16-bit grayscale and 
            48 and 64-bit color images is available in <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see>.</para>
        <para>This method supports signed/unsigned data images.</para>
        <para>To update an existing region, specify how the new region is to be combined with the existing one by using the
            <paramref name="combineMode" /> parameter. For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>The AddMagicWandToRegion function can use the Extended Grayscale mask. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, set a magic wand region to it, and fill the region with blue before saving the image back to disk
            <!--RasterImage.AddMagicWandToRegion--></example>
      <seealso cref="T:Leadtools.Topics.GrayScaleImages">Gray Scale Images</seealso>
      <seealso cref="T:Leadtools.Topics.IntroductionBitsPerPixel">Introduction: Bits Per Pixel and Related Ideas</seealso>
      <seealso cref="T:Leadtools.Topics.UsingColorValuesInLEADTOOLS">Using Color Values in LEADTOOLS</seealso>
      <objectivec>
        <pre>
-(BOOL)addMagicWandToRegion:(int)left 
                        top:(int)top 
        lowerToleranceColor:(LTRasterColor*)lowerToleranceColor 
        upperToleranceColor:(LTRasterColor*)upperToleranceColor 
                combineMode:(LTRasterRegionCombineMode)combineMode 
                      error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addMagicWandToRegion(
  int left, 
  int top, 
  RasterColor lowerToleranceColor, 
  RasterColor upperToleranceColor, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.AddBorderToRegion(System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates a region of pixels with values that fall within a range defined by the value of a specific
            pixel and a lower and upper tolerance value but are not equal to the <paramref name="borderColor" />.
            </summary>
      <param name="left">X coordinate of a point. The color of the specified point will be used to set the region.</param>
      <param name="top">Y coordinate of a point. The color of the specified point will be used to set the region.</param>
      <param name="borderColor">Border color.</param>
      <param name="lowerToleranceColor">Lower tolerance values that set the lower stopping point for the region.</param>
      <param name="upperToleranceColor">Upper tolerance values that set the lower stopping point for the region.</param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>For color bitmaps:</para>
        <para>If the value of the pixel at (x, y) is (125, 125, 125) and <paramref name="lowerToleranceColor" /> is (20,30,15),
            then the lower stopping point is (105, 95, 110). If <paramref name="upperToleranceColor" /> is (20,30,15), then the
            upper stopping point is (145,155,140). In this case, the pixels with values between (105,95,110)
            and (145,155,140) are non-border pixels and will be included in the region. Any pixel with a
            value outside this range or equal to <paramref name="borderColor" /> is considered a border pixel.</para>
        <para>For gray scale bitmaps:</para>
        <para>The minimum channel tolerance value of <paramref name="lowerToleranceColor" /> will be used to set the lower
            stopping point, and the minimum channel tolerance value of <paramref name="upperToleranceColor" /> will be used to set
            the upper stopping point. For example, if the value of the pixel at (x, y) is (125, 125, 125)
            and <paramref name="lowerToleranceColor" /> is (20,30,15), the smallest value of the triplet (15) will be used to
            create the lower stopping point of (110,110,110). If <paramref name="upperToleranceColor" /> is (10,25,20), the
            smallest value of that triplet (10) will be used to create the upper stopping point of
            (135,135,135). In this case, the pixels with values between (110, 110, 110) and (135,135,135)
            are non-border pixels and will be included in the region. Any pixel with a value outside this 
            range or equal to <paramref name="borderColor" /> is considered a border pixel.</para>
        <para>This method supports signed/unsiged data images.</para>
        <para>To update an existing region, specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>The AddBorderToRegion function can use the Extended Grayscale mask. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.AddBorderToRegion-->
      </example>
      <objectivec>
        <pre>
-(BOOL)addBorderToRegion:(int)left 
                     top:(int)top 
             borderColor:(LTRasterColor*)borderColor 
     lowerToleranceColor:(LTRasterColor*)lowerToleranceColor 
     upperToleranceColor:(LTRasterColor*)upperToleranceColor 
             combineMode:(LTRasterRegionCombineMode)combineMode 
                   error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void addBorderToRegion(
  int left, 
  int top, 
  RasterColor borderColor, 
  RasterColor lowerToleranceColor, 
  RasterColor upperToleranceColor, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Access">
      <summary>
            Provides exclusive access to the image data contained in this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <remarks>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> object is stored in a global Windows handle, then use the
            <see cref="M:Leadtools.RasterImage.Access" /> method to lock the memory. If you do not call this method before accessing the data with a low-level
            method like <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /> or <see cref="M:Leadtools.RasterImage.SetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" />the application might fail.</para>
        <para>To make the most of available system resources, you should only keep a <see cref="T:Leadtools.RasterImage" /> object locked when
            you need to access the image data. Call <see cref="M:Leadtools.RasterImage.Release" /> to unlock the image data for more efficient use of
            system memory resources.</para>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> is not stored in a global Windows handle, then this method
            will do nothing and calling it will not have any effect on the <see cref="T:Leadtools.RasterImage" />.</para>
        <para>Use <see cref="P:Leadtools.RasterImage.IsGlobalMemory" /> to determine whether the image data of this <see cref="T:Leadtools.RasterImage" /> is stored
            in a global Windows handle.</para>
        <para>
            For WinRT, use <see cref="M:Leadtools.RasterImage.AccessData" /> and <see cref="M:Leadtools.RasterImage.ReleaseData" />.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /></example>
      <objectivec>
        <pre>-(BOOL)accessData:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void access()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Release">
      <summary>
            Releases memory locked with <see cref="M:Leadtools.RasterImage.Access" /> back to the system.
            </summary>
      <remarks>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> object is stored in a global Windows handle, then use the
            <see cref="M:Leadtools.RasterImage.Release" /> method along with <see cref="M:Leadtools.RasterImage.Access" /> to control the access to image data in memory. Any attempt
            to access the image data after calling <see cref="M:Leadtools.RasterImage.Release" /> will result in an application error.</para>
        <para>To make the most of available system resources, you should only keep a <see cref="T:Leadtools.RasterImage" /> object locked when
            you need to access the image data. Call <see cref="M:Leadtools.RasterImage.Release" /> to unlock the image data for more efficient use of
            system memory resources.</para>
        <para>You should call this method whenever the image is not used, so that Windows can manage its memory properly.</para>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> is not stored in a global Windows handle, then this method
            will do nothing and calling it will not have any effect on the <see cref="T:Leadtools.RasterImage" />.</para>
        <para>Use <see cref="P:Leadtools.RasterImage.IsGlobalMemory" /> to determine if the image data of this <see cref="T:Leadtools.RasterImage" /> is stored
            in a global Windows handle or not.</para>
        <para>
            For WinRT, use <see cref="M:Leadtools.RasterImage.AccessData" /> and <see cref="M:Leadtools.RasterImage.ReleaseData" />.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /></example>
      <objectivec>
        <pre>-(BOOL)releaseData:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void release()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Retrieves one or more rows of image data from this <see cref="T:Leadtools.RasterImage" /> into a managed memory buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the
            image height.</param>
      <param name="buffer">Buffer to hold the image data that this method gets.  The size of this buffer must be large
            enough to hold the image data.</param>
      <param name="bufferIndex">The zero-based index into the <paramref name="buffer" /> where the get operation should start.</param>
      <param name="bufferCount">
        <para>The number of bytes in the row to retrieve. To get a full row, use the value in the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property</para>
        <para>When getting less than full row, you must consider the bits per pixel. For a 1-bit image, each byte represents 8
            pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit image, each byte represents 1 pixel. For a 16-bit image,
            every 2 bytes represents one pixel. For 24-bit images, every three bytes represents one pixel. For a 32-bit image,
            every four bytes represents one pixel. For 48-bit images, every six bytes represents one pixel. For 64-bit images,
            every eight bytes represents one pixel.</para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed for a
            particular number of pixels. For example:</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>
            This method copies image data from the <see cref="T:Leadtools.RasterImage" /> object to a buffer that you specify. The data is copied exactly as it is stored in the image.
            </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>
          <strong>Note</strong>: The data in the buffer will be padded to <see cref="P:Leadtools.RasterImage.BytesPerLine" />.</para>
        <para>Use the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property of the <see cref="T:Leadtools.RasterImage" /> object to determine the byte count of
            each line. Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property. This value can be
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images. Support for
            12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
      </remarks>
      <example>
            This example uses Get/SetRow to flip the image data.
            <!--RasterImage.GetRow--></example>
      <objectivec>
        <pre>
-(ssize_t)getRow:(int)row 
          buffer:(unsigned char*)buffer 
     bufferCount:(size_t)bufferCount 
           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public long getRow(
  int row, 
  byte[] buffer, 
  int bufferIndex, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRow(System.Int32,System.IntPtr,System.Int32)">
      <summary>
            Retrieves one or more rows of image data from this <see cref="T:Leadtools.RasterImage" /> into un unmanaged memory buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the
            image height.</param>
      <param name="buffer">Pointer to an unmanaged memory buffer to hold the image data that this method gets.  The size of
            this buffer must be large enough to hold the image data.</param>
      <param name="bufferCount">
        <para>The number of bytes in the row to retrieve. To get a full row, use the value in the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property</para>
        <para>When getting less than full row, you must consider the bits per pixel. For a 1-bit image, each byte represents 8
            pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit image, each byte represents 1 pixel. For a 16-bit image,
            every 2 bytes represents one pixel. For 24-bit images, every three bytes represents one pixel. For a 32-bit image,
            every four bytes represents one pixel. For 48-bit images, every six bytes represents one pixel. For 64-bit images,
            every eight bytes represents one pixel.</para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed for a
            particular number of pixels. For example:</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>
            This method copies image data from the <see cref="T:Leadtools.RasterImage" /> object to a buffer that you specify. The data is copied exactly as it is stored in the image.
            </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>
          <strong>Note</strong>: The data in the buffer will be padded to <see cref="P:Leadtools.RasterImage.BytesPerLine" />.</para>
        <para>Use the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property of the <see cref="T:Leadtools.RasterImage" /> object to determine the byte count of
            each line. Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property. This value can be
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images. Support for
            12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /></example>
      <java>
        <pre>
public long getRow(
  int row, 
  byte[] buffer, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRow(System.Int32,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Copies one or more rows of image data to this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="buffer">Buffer containing the image data. The data is copied exactly as it is stored in the buffer. The buffer
            should contain uncompressed data regardless of whether the image is compressed or not.</param>
      <param name="bufferIndex">The zero-based index into the <paramref name="buffer" /> where the set operation should start.</param>
      <param name="bufferCount">Number of bytes to set. Use the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property of this
            <see cref="T:Leadtools.RasterImage" /> to determine the byte count of each line.</param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property of the image to determine the number of bytes to set the
            <paramref name="bufferCount" /> parameter. If the image is 8-bit then each byte is an index to the palette. If the image is
            a 24-bit image, then each three bytes represents one pixel element. Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" />
            property of the <see cref="T:Leadtools.RasterImage" /> object. This value can be
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <strong>Note</strong>: To calculate the correct size for a single row of image data:
            Windows/WinRT
            (((Width * BitsPerPixel) + 31) &gt;&gt; 3)) ~3
            Android/iOS/O SX
            (((Width * BitsPerPixel) + 7) / 8)
            </para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(ssize_t)setRow:(int)row 
          buffer:(const unsigned char*)buffer 
     bufferCount:(size_t)bufferCount 
           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public long setRow(
  int row, 
  byte[] buffer, 
  int bufferIndex, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRow(System.Int32,System.IntPtr,System.Int32)">
      <summary>
            Copies one or more rows of image data from an unmanaged memory buffer to this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="buffer">Pointer to unmanaged memory buffer containing the image data. The buffer
            should contain uncompressed data regardless of whether the image is compressed or not.</param>
      <param name="bufferCount">Number of bytes to set. Use the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property of this
            <see cref="T:Leadtools.RasterImage" /> to determine the byte count of each line.</param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property of the image to determine the number of bytes to set the
            <paramref name="bufferCount" /> parameter. If the image is 8-bit then each byte is an index to the palette. If the image is
            a 24-bit image, then each three bytes represents one pixel element. Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" />
            property of the <see cref="T:Leadtools.RasterImage" /> object. This value can be
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <strong>Note</strong>: To calculate the correct size for a single row of image data:
            Windows/WinRT
            (((Width * BitsPerPixel) + 31) &gt;&gt; 3)) ~3
            Android
            (((Width * BitsPerPixel) + 7) / 8)
            </para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.IntPtr,System.Int32)" />.</example>
      <java>
        <pre>
public long setRow(
  int row, 
  byte[] buffer, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Accepts a column offset to retrieve data from an image and place it in a buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column offset
            is 1 less than the image width</param>
      <param name="buffer">Buffer to hold the image data that this method gets. The buffer will be filled with uncompressed data.</param>
      <param name="bufferIndex">0-based index into the output buffer. This is the start location of output data.</param>
      <param name="bufferCount">
        <para>The number of bytes to retrieve. Consider the bits per pixel, and avoid specifying a number that goes past the end of
            the row.</para>
        <para>For a 1-bit image, each byte represents 8 pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit
            image, each byte represents 1 pixel. For a 16-bit image, every 2 bytes represents one pixel. For 24-bit images, every
            three bytes represents one pixel. For a 32-bit image, every four bytes represents one pixel. For 48-bit images, every six
            bytes represents one pixel. For 64-bit images, every eight bytes represents one pixel.</para>
        <para>You can use the image <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed
            for a particular number of pixels. For example</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>By using this low-level method to get any part of a row, you can write a procedure that accesses a single pixel or a
            rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length
            (<paramref name="bufferCount" />) in bytes. Therefore, you must consider the bits per pixel of the image when specifying
            these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>Bits Per Pixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0, 8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property of the <see cref="T:Leadtools.RasterImage" /> object. This value
            can be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example is designed to work with images that have a bottom-left or top-left view perspective. 
            This example uses GetRowColumn and <see cref="M:Leadtools.RasterImage.SetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" /> to invert the colors of a rectangle in the upper 
            left part of the displayed image.
            <!--RasterImage.GetRowColumn--></example>
      <objectivec>
        <pre>
-(ssize_t)getRowColumn:(int)row 
                column:(int)column 
                buffer:(unsigned char*)buffer 
           bufferCount:(size_t)bufferCount 
                 error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public long getRowColumn(
  int row, 
  int column, 
  byte[] buffer, 
  int bufferIndex, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRowColumn(System.Int32,System.Int32,System.IntPtr,System.Int32)">
      <summary>
            Accepts a column offset to retrieve data from an image and place it in an ummanaged memory buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column offset
            is 1 less than the image width</param>
      <param name="buffer">Pointer to an unmanaged buffer to hold the image data that this method gets. The buffer will be
            filled with uncompressed data.</param>
      <param name="bufferCount">
        <para>The number of bytes to retrieve. Consider the bits per pixel, and avoid specifying a number that goes past the end of
            the row.</para>
        <para>For a 1-bit image, each byte represents 8 pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit
            image, each byte represents 1 pixel. For a 16-bit image, every 2 bytes represents one pixel. For 24-bit images, every
            three bytes represents one pixel. For a 32-bit image, every four bytes represents one pixel. For 48-bit images, every six
            bytes represents one pixel. For 64-bit images, every eight bytes represents one pixel.</para>
        <para>You can use the image <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed
            for a particular number of pixels. For example</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>By using this low-level method to get any part of a row, you can write a procedure that accesses a single pixel or a
            rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length
            (<paramref name="bufferCount" />) in bytes. Therefore, you must consider the bits per pixel of the image when specifying
            these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>Bits Per Pixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0, 8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property of the <see cref="T:Leadtools.RasterImage" /> object. This value
            can be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example is designed to work with images that have a bottom-left or top-left view perspective. 
            This example uses GetRowColumn and <see cref="M:Leadtools.RasterImage.SetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" /> to invert the colors of a rectangle in the upper 
            left part of the displayed image.
            <!--RasterImage.GetRowColumn--></example>
      <java>
        <pre>
public long getRowColumn(
  int row, 
  int column, 
  byte[] buffer, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Copies data from a buffer into an image, with an offset to the image.
            </summary>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to update. The first column offset is 0, and the last column offset
            is 1 less than the image width.</param>
      <param name="buffer">Buffer containing the image data. The buffer should contain uncompressed data regardless of whether
            the image is compressed or not.</param>
      <param name="bufferIndex">0-based index into the output buffer. This is the start location of input data.</param>
      <param name="bufferCount">
        <para>The number of bytes to update. Consider the bits per pixel, and avoid specifying a number that goes past the end
            of the row.</para>
        <para>For a 1-bit image, each byte represents 8 pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit image,
            each byte represents 1 pixel. For a 16-bit image, every 2 bytes represents one pixel. For 24-bit images, every three bytes
            represents one pixel. For a 32-bit image, every four bytes represents one pixel. For a 48-bit image, every six bytes
            represents one pixel. For a 64-bit image, every eight bytes represents one pixel.</para>
      </param>
      <returns>The number of bytes put.</returns>
      <remarks>
        <para>By using this low-level method to update any part of a row, you can write a procedure that updates a single pixel or a
            rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length
            (<paramref name="bufferCount" />) in bytes. Therefore, you must consider the bits per pixel of the image when specifying
            these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>Bits Per Pixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0, 8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property of the <see cref="T:Leadtools.RasterImage" /> object. This value
            can be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <strong>Note</strong>: To calculate the correct size for a single row of image data:
            Windows/WinRT
            (((Width * BitsPerPixel) + 31) &gt;&gt; 3)) ~3
            Android/iOS/OS X
            (((Width * BitsPerPixel) + 7) / 8)
            </para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(ssize_t)setRowColumn:(int)row 
                column:(int)column 
                buffer:(const unsigned char*)buffer 
           bufferCount:(size_t)bufferCount 
                 error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public int setRowColumn(
  int row, 
  int column, 
  byte[] buffer, 
  int bufferIndex, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowColumn(System.Int32,System.Int32,System.IntPtr,System.Int32)">
      <summary>
            Copies data from an unmanaged memory buffer to an image, with an offset to the image.
            </summary>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to update. The first column offset is 0, and the last column offset
            is 1 less than the image width.</param>
      <param name="buffer">Pointer to an unmanaged memory buffer containing the image data. The buffer should contain uncompressed
            data regardless of whether the image is compressed or not.</param>
      <param name="bufferCount">
        <para>The number of bytes to update. Consider the bits per pixel, and avoid specifying a number that goes past the end
            of the row.</para>
        <para>For a 1-bit image, each byte represents 8 pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit image,
            each byte represents 1 pixel. For a 16-bit image, every 2 bytes represents one pixel. For 24-bit images, every three bytes
            represents one pixel. For a 32-bit image, every four bytes represents one pixel. For a 48-bit image, every six bytes
            represents one pixel. For a 64-bit image, every eight bytes represents one pixel.</para>
      </param>
      <returns>The number of bytes put.</returns>
      <remarks>
        <para>By using this low-level method to update any part of a row, you can write a procedure that updates a single pixel or a
            rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length
            (<paramref name="bufferCount" />) in bytes. Therefore, you must consider the bits per pixel of the image when specifying
            these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>Bits Per Pixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0, 8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property of the <see cref="T:Leadtools.RasterImage" /> object. This value
            can be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <strong>Note</strong>: To calculate the correct size for a single row of image data:
            Windows/WinRT
            (((Width * BitsPerPixel) + 31) &gt;&gt; 3)) ~3
            Android
            (((Width * BitsPerPixel) + 7) / 8)
            </para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowColumn(System.Int32,System.Int32,System.IntPtr,System.Int32)" />.</example>
      <java>
        <pre>
public int setRowColumn(
  int row, 
  int column, 
  byte[] buffer, 
  long bufferCount
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowSegments(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <param name="row">0-based row index</param>
      <param name="column">0-based column index</param>
      <param name="buffer">The scanline buffer</param>
      <param name="bufferOffset">0-based index into <paramref name="buffer" /></param>
      <param name="segments">Segments buffer</param>
      <param name="segmentsOffset">0-based index into <paramref name="segments" /></param>
      <param name="segmentCount">Number of segments in <paramref name="segments" /></param>
      <param name="preserveAlpha">A value indicating whether to preserve the alpha values in 32 and 64-bit images.</param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>
-(BOOL)setRowSegments:(int)row 
               column:(int)column 
               buffer:(const unsigned char*)buffer 
             segments:(const unsigned int*)segments 
         segmentCount:(unsigned int)segmentCount 
        preserveAlpha:(BOOL)preserveAlpha 
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setRowSegments(
  int row, 
  int column, 
  byte[] buffer, 
  int bufferOffset, 
  int[] segments, 
  int segmentsOffset, 
  int segmentCount, 
  boolean preserveAlpha
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowSegments(System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Boolean)">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <param name="row">0-based row index</param>
      <param name="column">0-based column index</param>
      <param name="buffer">The scanline buffer</param>
      <param name="segments">Segments buffer</param>
      <param name="segmentCount">Number of segments in <paramref name="segments" /></param>
      <param name="preserveAlpha">A value indicating whether to preserve the alpha values in 32 and 64-bit images.</param>
      <noremarks />
      <noexample />
      <java>
        <pre>
public void setRowSegments(
  int row, 
  int column, 
  byte[] buffer, 
  int[] segments, 
  int segmentCount, 
  boolean preserveAlpha
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Retrieves a row (or part of a row) of 1-bit compressed data from an image that has been loaded in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you call this method
            more than once, because if you do not allocate a work buffer, the method allocates and frees a
            temporary buffer each time it is called. The size of this buffer should be the same as the
            <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass a null reference (Nothing in Visual Basic) to <paramref name="runBuffer" />
            if you do not want to use a work buffer.</param>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.
            Calculate the required size of this buffer as follows: bytes required = (<see cref="P:Leadtools.RasterImage.Width" /> + 3) * 2.</param>
      <param name="runBufferOffset">Index into <paramref name="runBuffer" /> where the get operation should start.</param>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image
            height.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column
            offset is 1 less than the image width.</param>
      <param name="width">The number of pixels to retrieve.</param>
      <returns>The number of pixels processed.</returns>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see>.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for
            faster loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>
            This example demonstrates the low-level methods for accessing 1-bit compressed bitmap data. 
            It demonstrates the ability to get and set partial rows, and the ability to process partial rows 
            in buffer-to-buffer processing. The result of the method is an inverted rectangle in the middle of the image.
            <!--RasterImage.GetRowColumnCompressed--></example>
      <objectivec>
        <pre>
-(ssize_t)getRowColumnCompressed:(unsigned char*)workBuffer 
                       runBuffer:(unsigned short*)runBuffer 
                             row:(int)row 
                          column:(int)column 
                           width:(unsigned int)pixels 
                           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public int getRowColumnCompressed(
  byte[] workBuffer, 
  short[] runBuffer, 
  int runBufferOffset, 
  int row, 
  int column, 
  int width            )</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRowColumnCompressed(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)">
      <summary>
            Retrieves (into an unmanaged memory buffer) a row (or part of a row) of 1-bit compressed data from an image that
            has been loaded in its compressed format.
            </summary>
      <param name="workBuffer">Pointer to optional unmanaged memory work buffer. Allocating the work buffer speeds
            processing if you call this method more than once, because if you do not allocate a work buffer, the method
            allocates and frees a temporary buffer each time it is called. The size of this buffer should be the same as the
            <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass IntPtr.Zero for <paramref name="workBuffer" /> if you do not want to use
            the work buffer</param>
      <param name="runBuffer">Pointer to the output unmanaged memory buffer, which will be filled with 1-bit compressed image data.
            Calculate the required size of this buffer as follows: bytes required = (<see cref="P:Leadtools.RasterImage.Width" /> + 3) * 2.</param>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image
            height.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column
            offset is 1 less than the image width.</param>
      <param name="width">The number of pixels to retrieve.</param>
      <returns>The number of pixels processed.</returns>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see>.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for
            faster loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>
            This example demonstrates the low-level methods for accessing 1-bit compressed bitmap data. 
            It demonstrates the ability to get and set partial rows, and the ability to process partial rows in 
            buffer-to-buffer processing. The result of the method is an inverted rectangle in the middle of the image.
            <!--RasterImage.GetRowColumnCompressed--></example>
      <java>
        <pre>
public int getRowColumnCompressed(
  byte[] workBuffer, 
  short[] runBuffer, 
  int row, 
  int column, 
  int width
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Retrieves one or more rows of 1-bit compressed data from an image that has been loaded in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you call this method
            more than once, because if you do not allocate a work buffer, the method allocates and frees a
            temporary buffer each time it is called. bytes required = <paramref name="lines" /> * ((<see cref="P:Leadtools.RasterImage.Width" /> + 3) * 2).
            Pass a null reference (Nothing in Visual Basic) to <paramref name="runBuffer" /> if you do not want to use a work buffer.</param>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.</param>
      <param name="runBufferOffset">Offset into <paramref name="runBuffer" /> where the copy operation should start.</param>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="lines">Number of rows to retrieve.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for faster
            loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>
            This example demonstrates the low-level methods for accessing 1-bit compressed image data. 
            It demonstrates the ability to get and put rows, and the ability to process rows in 
            buffer-to-buffer processing. The result of the function is an the first 50 lines are inverted.
            <!--RasterImage.GetRowCompressed--></example>
      <objectivec>
        <pre>
-(BOOL)getRowCompressed:(unsigned char*)workBuffer 
              runBuffer:(unsigned short*)runBuffer 
                    row:(unsigned int)row 
                  lines:(unsigned int)lines 
                  error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void getRowCompressed(
  byte[] workBuffer, 
  short[] runBuffer, 
  int runBufferOffset, 
  int row, 
  int lines
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetRowCompressed(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
      <summary>
            Retrieves (into an unmanaged memory buffer) one or more rows of 1-bit compressed data from an image that has been loaded
            in its compressed format.
            </summary>
      <param name="workBuffer">Pointer to optional work unmanaged memory buffer. Allocating the work buffer speeds processing
            if you call this method more than once, because if you do not allocate a work buffer, the method allocates and frees a
            temporary buffer each time it is called. bytes required = <paramref name="lines" /> * ((<see cref="P:Leadtools.RasterImage.Width" /> + 3) * 2).
            Pass IntPtr.Zero for <paramref name="workBuffer" /> if you do not want to use the work buffer</param>
      <param name="runBuffer">Pointer to the output unmanaged memory buffer, which will be filled with 1-bit compressed image
            data.</param>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="lines">Number of rows to retrieve.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for faster
            loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>
            This example demonstrates the low-level methods for accessing 1-bit compressed image data. 
            It demonstrates the ability to get and put rows, and the ability to process rows in 
            buffer-to-buffer processing. The result of the function is an the first 50 lines are inverted.
            <!--RasterImage.GetRowCompressed--></example>
      <java>
        <pre>
public void getRowCompressed(
  byte[] workBuffer, 
  short[] runBuffer, 
  int row, 
  int lines
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Puts a row (or part of a row) of 1-bit compressed data from a buffer into an image that is maintained in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you
            call this method more than once, because if you do not allocate a work buffer, the method 
            allocates and frees a temporary buffer each time it is called. The size of this buffer should 
            be the same as the image's <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass a null reference (Nothing in Visual Basic)
            to <paramref name="runBuffer" /> if you do not want to use a work buffer.</param>
      <param name="runBuffer">Input buffer, which contains 1-bit compressed image data.</param>
      <param name="runBufferOffset">Offset into <paramref name="runBuffer" /> where the set operation should start.</param>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to update. The first column offset is 0, and the last column
            offset is 1 less than the image width.</param>
      <param name="width">The number of pixels to retrieve.</param>
      <returns>The number of pixels processed.</returns>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for faster
            loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(ssize_t)setRowColumnCompressed:(unsigned char*)workBuffer 
                       runBuffer:(const unsigned short*)runBuffer 
                             row:(int)row 
                          column:(int)column 
                           width:(unsigned int)pixels 
                           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public int setRowColumnCompressed(
  byte[] workBuffer, 
  short[] runBuffer, 
  int runBufferOffset, 
  int row, 
  int column, 
  int width
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowColumnCompressed(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)">
      <summary>
            Puts a row (or part of a row) of 1-bit compressed data from an unmanaged memory buffer to an image that is maintained
            in its compressed format.
            </summary>
      <param name="workBuffer">Pointer to optional work unmanaged memory buffer. Allocating the work buffer speeds processing
            if you call this method more than once, because if you do not allocate a work buffer, the method 
            allocates and frees a temporary buffer each time it is called. The size of this buffer should 
            be the same as the image's <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass IntPtr.Zero for <paramref name="workBuffer" /> if you
            do not want to use the work buffer</param>
      <param name="runBuffer">Pointer to input unmanaged memory buffer, which contains 1-bit compressed image data.</param>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to update. The first column offset is 0, and the last column
            offset is 1 less than the image width.</param>
      <param name="width">The number of pixels to retrieve.</param>
      <returns>The number of pixels processed.</returns>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for faster
            loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
      <java>
        <pre>
public int setRowColumnCompressed(
  byte workBuffer[], 
  short runBuffer[], 
  int row, 
  int column, 
  int width
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Puts one or more rows of 1-bit compressed data from a buffer into an image that is maintained in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you 
            call this method more than once, because if you do not allocate a work buffer, the method 
            allocates and frees a temporary buffer each time it is called. The size of this buffer should 
            be the same as the image's <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass a null reference (Nothing in Visual Basic)
            to <paramref name="runBuffer" /> if you do not want to use a work buffer.</param>
      <param name="runBuffer">Input buffer, which contains 1-bit compressed image data.</param>
      <param name="runBufferOffset">Offset into <paramref name="runBuffer" /> where the set operation should start.</param>
      <param name="row">Number of the first row to update.</param>
      <param name="lines">Number of rows to update.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats 
            for faster loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(BOOL)setRowCompressed:(unsigned char*)workBuffer 
              runBuffer:(const unsigned short*)runBuffer 
                    row:(unsigned int)row 
                  lines:(unsigned int)lines 
                  error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setRowCompressed(
  byte[] workBuffer, 
  short[] runBuffer, 
  int runBufferOffset, 
  int row, 
  int lines
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetRowCompressed(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
      <summary>
            Puts one or more rows of 1-bit compressed data from an unmanaged memory buffer to an image that is maintained in
            its compressed format.
            </summary>
      <param name="workBuffer">Pointer to unmanaged memory optional work buffer. Allocating the work buffer speeds processing
            if you call this method more than once, because if you do not allocate a work buffer, the method allocates and frees a
            temporary buffer each time it is called. The size of this buffer should be the same as the image's
            <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass IntPtr.Zero to <paramref name="runBuffer" /> if you do not want to use a
            work buffer.</param>
      <param name="runBuffer">Input buffer, which contains 1-bit compressed image data.</param>
      <param name="row">Number of the first row to update.</param>
      <param name="lines">Number of rows to update.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats 
            for faster loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowCompressed(System.IntPtr,System.IntPtr,System.Int32,System.Int32)" />.</example>
      <java>
        <pre>
public void setRowCompressed(
  byte workBuffer[], 
  short runBuffer[], 
  int row, 
  int lines
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.ChangeCompression(Leadtools.RasterCompression)">
      <summary>
            Compresses or decompresses this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="compression">Indicates the type of compression to use on the image.</param>
      <remarks>
        <para>This method is available only in <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> toolkits.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
        <para>
            This method does not support signed images.
            </para>
      </remarks>
      <example>
            This example toggles image compression.
            <!--RasterImage.ChangeCompression--></example>
      <java>
        <pre>public void changeCompression(RasterCompression compression)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CreateAlphaImage">
      <summary>
            Creates a grayscale image from this <see cref="T:Leadtools.RasterImage" /> alpha channel data.
            </summary>
      <returns>The newly create image, which contains the source image alpha channel data.</returns>
      <remarks>
        <para>Only 16-, 32-, and 64-bit images can have an alpha channel. If the source image has another color resolution,
            the result is an image filled with zeros.</para>
        <para>Typically, the alpha channel contains a mask that is used for transparency.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingTransparency">Implementing Transparency</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.CreateAlphaImage-->
      </example>
      <objectivec>
        <pre>-(LTRasterImage*)createAlphaImage:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage createAlphaImage()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetAlphaImage(Leadtools.RasterImage)">
      <summary>
            Replaces existing alpha channel data or creates new alpha channel data.
            </summary>
      <param name="alphaImage">Source <see cref="T:Leadtools.RasterImage" /> which references the image that is used to create or
            replace the alpha channel data.</param>
      <remarks>
        <para>Typically, an alpha channel contains a mask that is used for transparency. This method, together with
            <see cref="M:Leadtools.RasterImage.CreateAlphaImage" /> and the LEADTOOLS region processing methods, lets you use the alpha channel to
            implement transparency.</para>
        <para>Only 16-, 32- and 64-bit images can have an alpha channel. If the image is of any other color resolution,
            this method converts the image to 32-bit before it replaces the alpha channel. (If you want 16-bit, you should change
            it using <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" />, if necessary, before calling this method.)</para>
        <para>For 64-bit images, the <paramref name="alphaImage" /> parameter is converted to 16 bit grayscale before replacing
            the alpha channel. If the image is 48-bit, it will be converted to 64-bit and then have the alpha information added to it.</para>
        <para>The <paramref name="alphaImage" /> parameter does not have to be grayscale. This method converts the data from the 
            <paramref name="alphaImage" /> parameter to the necessary grayscale or 1-bit format as it replaces the alpha channel 
            in the image. (The <paramref name="alphaImage" />, itself, remains unchanged.)</para>
        <p>
            This method does not support signed images.
            </p>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingTransparency">Implementing Transparency</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.CreateAlphaImage" />.</example>
      <objectivec>
        <pre>-(BOOL)setAlphaImage:(LTRasterImage*)alphaImage error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void setAlphaImage(RasterImage alphaImage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.TranslateColor(Leadtools.RasterImage,System.Int32)">
      <summary>
            Translates the specified color in the image, and returns the nearest matching color in the destination image.
            </summary>
      <param name="destImage">Destination <see cref="T:Leadtools.RasterImage" /> object.</param>
      <param name="rgb">Value that specifies the color in the image to be translated.</param>
      <returns>The color value or the palette index of the nearest matching color in the destination image. If the destination
            image is 8 bits per pixel or less, this is always the palette index. Otherwise, it is the color value.</returns>
      <remarks>
        <para>When creating a target image for animation, you can use this method to ensure that the correct color is specified as the background color.</para>
        <para>The reverse of this method (to get a true RGB color value from a palette index color), use <see cref="M:Leadtools.RasterImage.GetTrueColorValue(Leadtools.RasterColor)" />.</para>
      </remarks>
      <example>
        <!--RasterImage.TranslateColor-->
      </example>
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <seealso cref="M:Leadtools.RasterImage.GetTrueColorValue(Leadtools.RasterColor)" />
      <objectivec>
        <pre>
-(unsigned int)translateColorRgb:(LTRasterImage*)destImage 
                             rgb:(unsigned int)rgb;            </pre>
      </objectivec>
      <java>
        <pre>
public int translateColor(
  RasterImage destImage, 
  int rgb
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.TranslateColor(Leadtools.RasterImage,Leadtools.RasterColor)">
      <summary>
            Translates the specified color in the image, and returns the nearest matching color in the destination image.
            </summary>
      <param name="destImage">Destination <see cref="T:Leadtools.RasterImage" /> object.</param>
      <param name="color">Value that specifies the color in the image to be translated.</param>
      <returns>The color value or the palette index of the nearest matching color in the destination image. If the destination
            image is 8 bits per pixel or less, this is always the palette index (The value of the <see cref="P:Leadtools.RasterColor.IsPaletteIndex">RasterColor.IsPaletteIndex</see>
            is <strong>true</strong>). Otherwise, it is the color value.</returns>
      <remarks>
        <para>When creating a target image for animation, you can use this method to ensure that the correct color is specified as the background color.</para>
        <para>The reverse of this method (to get a true RGB color value from a palette index color), use <see cref="M:Leadtools.RasterImage.GetTrueColorValue(Leadtools.RasterColor)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.TransparentColor" /></example>
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <seealso cref="M:Leadtools.RasterImage.GetTrueColorValue(Leadtools.RasterColor)" />
      <objectivec>
        <pre>
-(LTRasterColor*)translateColor:(LTRasterImage*)destImage 
                          color:(LTRasterColor*)color;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterColor translateColor(
  RasterImage destImage, 
  RasterColor color
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.ChangeHeight(System.Int32)">
      <summary>
            Increases or decreases the allocated height of an image.
            </summary>
      <param name="height">New height in pixels.</param>
      <remarks>
            You can use this method in a callback routine to adjust the allocation when loading an image of unknown height.
            </remarks>
      <example>
        <!--RasterImage.ChangeHeight-->
      </example>
      <objectivec>
        <pre>-(BOOL)changeHeight:(int)newHeight error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void changeHeight(int height)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CopyPaletteTo(Leadtools.RasterImage)">
      <summary>
            Copies the palette of this <see cref="T:Leadtools.RasterImage" /> into a destination image.
            </summary>
      <param name="destImage">The destination image into which the palette will be copied. You must have a valid image loaded
            for this method to work.</param>
      <remarks>
        <para>Only the palette the image is copied.</para>
        <para>
          <paramref name="destImage" /> must be allocated and must be 8-bit or less before this method is called.
            The source image (this <see cref="T:Leadtools.RasterImage" /> object and <paramref name="destImage" /> must have the same
            <see cref="P:Leadtools.RasterImage.BitsPerPixel" />.</para>
        <para>
          <paramref name="destImage" /> existing palette will be destroyed before the copy is made.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CopyDataCommand" />.</example>
      <objectivec>
        <pre>-(BOOL)copyPaletteTo:(LTRasterImage*)destImage error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void copyPaletteTo(RasterImage destImage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetPixelColor(System.Int32,System.Int32)">
      <summary>
            Returns the color of the specified pixel.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel.</param>
      <returns>This method returns a <see cref="T:Leadtools.RasterColor" /> value which can represent an index into an image palette, a
            grayscale value (Medical Imaging only), or red, green, and blue color values.</returns>
      <remarks>
        <para>The standard Windows values for <see cref="T:Leadtools.RasterColor" /> represent either red, green, and blue color values, or an
            index into the image palette. A <see cref="T:Leadtools.RasterColor" /> value with the RGB value of 0x00BBGGRR represents the blue, green,
            and red color values for the specified pixel, where 0xBB is the blue value, 0xGG is the green value and 0xRR is the red
            value. If 0x01000000 is set in the RGB value of <see cref="T:Leadtools.RasterColor" /> (0x010000ZZ), the lower 8 bits (0xZZ) represent
            an index into the image palette which holds the color value.</para>
        <para>You can use the <see cref="M:Leadtools.RasterImage.SetPixelColor(System.Int32,System.Int32,Leadtools.RasterColor)" /> method to assign the returned value to another pixel.</para>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for the view perspective
            of the image.</para>
        <para>If you specify a pixel that is outside the image or outside the region (if the image has one), this method throws
            an exception.</para>
        <para>This method does not support alpha values for 32 and 64-bit color images and the alpha value of the returned color should not be used.
            Instead, use the <see cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" /> and <see cref="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)" /> methods.</para>
        <p>In the <span class="hs-buildflag-markup" data-build-flags="ABD6F2CC-F42B-4201-9677-852BBA847751"><a href="https://www.leadtools.com/Help/LEADTOOLS/v19/mapping/ExpressEd.html">Document and Medical</a></span> toolkits, 
            the COLORREF value can represent a 16 bit grayscale value if pBitmap is a 12 or 16-bit grayscale bitmap. 
            To avoid confusion with an RGB value, set the COLORREF_GRAY16 mask (0x04000000). In this case (0x0400YYYY), 
            the lower 16 bits (0xYYYY) of the COLORREF value represent the 16-bit grayscale value. (0x0400FFFF is 16-bit 
            white and 0x04000000 is 16-bit black.) This is not a standard Windows value. Therefore, although 
            LEADTOOLS functions will recognize a COLORREF having this format, but Windows functions will not. 
            </p>
        <para>This method supports signed/unsigned data images.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)" />
      <example>
            This example uses GetPixelColor and <see cref="M:Leadtools.RasterImage.SetPixelColor(System.Int32,System.Int32,Leadtools.RasterColor)" /> to invert the colors of the pixels in a line 
            in the upper left part of the displayed image. 
            <!--RasterImage.GetPixelColor--></example>
      <objectivec>
        <pre>
-(LTRasterColor*)getPixelColor:(int)row 
                        column:(int)column 
                         error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getPixelColor(
  int row, 
  int column
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetPixelColor(System.Int32,System.Int32,Leadtools.RasterColor)">
      <summary>
            Changes the color value of the specified pixel.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel.</param>
      <param name="color">The color to assign to the pixel.</param>
      <remarks>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for the view
            perspective of the image. If you specify a pixel that is outside the image or outside the region
            (if the image has one), this method throws an exception.</para>
        <para>Use the <see cref="M:Leadtools.RasterImage.GetPixelColor(System.Int32,System.Int32)" /> method to get the color value of a certain pixel.</para>
        <para>This method does not support alpha values for 32 and 64-bit color images and the alpha value of <paramref name="color" /> is not be used.
            Instead, use the <see cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" /> and <see cref="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)" /> methods.</para>
        <para>This method supports unsigned data images, but not signed ones.</para>
        <para>The SetPixelColor function can use the Extended Grayscale mask. 
            For more information, refer to 
            <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>In the <a href="https://www.leadtools.com/help/leadtools/v19/mapping/expressed.html">Document and Medical</a> toolkits, the COLORREF value 
            can represent a 16 bit grayscale value if <see cref="T:Leadtools.RasterImage" /> is a 12 or 16-bit grayscale bitmap. To avoid confusion with an RGB 
            value, set the COLORREF_GRAY16 mask (0x04000000). In this case (0x0400YYYY), the lower 16 bits (0xYYYY) of the COLORREF value represent the 16-bit 
            grayscale value. (0x0400FFFF is 16-bit white and 0x04000000 is 16-bit black.) This is not a standard Windows value. Therefore, although LEADTOOLS 
            methods will recognize a COLORREF having this format, but Windows methods will not.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)" />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetPixelColor(System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(BOOL)setPixelColor:(int)row 
              column:(int)column 
               color:(LTRasterColor*)color 
               error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setPixelColor(
  int row, 
  int column, 
  RasterColor color
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)">
      <summary>
            Returns the color of the specified pixel.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel.</param>
      <returns>This method returns a <see cref="T:Leadtools.RasterColor" /> value which may represent an index into an image palette, a
            grayscale value (Medical Imaging only), or red, green, and blue color values. Alpha value for 32 and 64-bit images are also returned.</returns>
      <remarks>
        <para>The standard Windows values for <see cref="T:Leadtools.RasterColor" /> represent either red, green, and blue color values, or an
            index into the image palette. A <see cref="T:Leadtools.RasterColor" /> value with the RGB value of 0x00BBGGRR represents the blue, green,
            and red color values for the specified pixel, where 0xBB is the blue value, 0xGG is the green value and 0xRR is the red
            value. If 0x01000000 is set in the RGB value of <see cref="T:Leadtools.RasterColor" /> (0x010000ZZ), the lower 8 bits (0xZZ) represent
            an index into the image palette which holds the color value.</para>
        <para>For 32 and 64-bit images, an alpha value is also available in the image. This method will return the alpha value in the returned
            <see cref="T:Leadtools.RasterColor" /> object <see cref="P:Leadtools.RasterColor.A" /> property. For 32-bit images, this will be the exact byte value of the alpha
            for the pixel. For 64-bit images, the alpha is 16-bit and since <see cref="P:Leadtools.RasterColor.A">RasterColor.A</see> is an 8-bit value, the returned
            alpha is normalized from its 16-bit value to 8-bit. For other bits/pixel values, the value returned from this method is identical to the value
            returned from <see cref="M:Leadtools.RasterImage.GetPixelColor(System.Int32,System.Int32)" />.</para>
        <para>You can use the <see cref="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)" /> method to assign the returned value to another pixel.</para>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for the view perspective
            of the image.</para>
        <para>If you specify a pixel that is outside the image or outside the region (if the image has one), this method throws
            an exception.</para>
        <para>This method supports signed/unsigned data images.</para>
        <para>The GetPixel function can use the Extended Grayscale mask. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)" />
      <example>
        <para>This example uses will load an image as 32-bit, use <see cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" /> and <see cref="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)" /> to set the alpha value for each
            pixel to 128 (half transparent) and save the result as PNG.</para>
        <!--RasterImage.GetPixel-->
      </example>
      <objectivec>
        <pre>
-(LTRasterColor*)getPixel:(int)row 
                   column:(int)column 
                    error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getPixel(
  int row, 
  int column
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetPixel(System.Int32,System.Int32,Leadtools.RasterColor)">
      <summary>
            Changes the color value of the specified pixel.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel.</param>
      <param name="color">The color to assign to the pixel. If the image has 32 or 64-bits per pixel, the alpha value of this parameter is used in the
            pixel data.</param>
      <remarks>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for the view
            perspective of the image. If you specify a pixel that is outside the image or outside the region
            (if the image has one), this method throws an exception.</para>
        <para>Use the <see cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" /> method to get the color value of a certain pixel.</para>
        <para>For 32 and 64-bit images, an alpha value is also available in the image. This method will use the alpha value in <paramref name="color" />
            (<see cref="P:Leadtools.RasterColor.A" />). For 32-bit images, this will be the exact byte value of the alpha
            for the pixel. For 64-bit images, the alpha is 16-bit and since <see cref="P:Leadtools.RasterColor.A">RasterColor.A</see> is an 8-bit value, the
            alpha is normalized from its 16-bit value to 8-bit. For other bits/pixel values, the method is identical to
            returned from <see cref="M:Leadtools.RasterImage.SetPixelColor(System.Int32,System.Int32,Leadtools.RasterColor)" />.</para>
        <para>This method supports unsigned data images, but not signed ones.</para>
        <para>The SetPixel function can use the Extended Grayscale mask. For more information, 
            refer to <a href="https://www.leadtools.com/help/leadtools/v19/dh/to/leadtools.topics~leadtools.topics.grayscaleimages.html">Grayscale Images</a></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetPixel(System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(BOOL)setPixel:(int)row 
         column:(int)column 
          color:(LTRasterColor*)color 
          error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setPixel(
  int row, 
  int column, 
  RasterColor color
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetPixelData(System.Int32,System.Int32)">
      <summary>
            Returns the pixel data of the specified pixel.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel</param>
      <returns>This method returns a byte array which may represent an index into an images's palette,
            a grayscale value <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see>, or red, green, and blue color values.
            </returns>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>No transformations are performed on the pixel data.</para>
        <para>This method should be called only for 8, 16, 24, 32, 48 and 64-bit images. It works as follows:</para>
        <para>
          <list type="bullet">
            <item>
              <description>For 8-bit images, this method will retrieve the palette index for the specified pixel.</description>
            </item>
            <item>
              <description>For 16-bit images, this method will retrieve the 2-byte value that forms the pixel.</description>
              <list type="bullet">
                <item>
                  <description>For grayscale 16-bit images, the data will contain the gray value. <see cref="P:Leadtools.RasterImage.LowBit" /> and
                 <see cref="P:Leadtools.RasterImage.HighBit" /> properties indicate the valid pixel data.</description>
                </item>
                <item>
                  <description>For color 16-bit images, the data contains packed 5-bit R, G and B values. The high bit contains
                 the alpha information. The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data is RGB or BGR.</description>
                </item>
              </list>
            </item>
            <item>
              <description>For 24-bit images, this method will retrieve the 3 bytes containing the pixel color.
            The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data is RGB or BGR.</description>
            </item>
            <item>
              <description>For 32-bit images, this method will retrieve the 4 bytes containing the pixel color and alpha
            information. The first 3 bytes contain the pixel color. The  The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data in the
            first 3 bytes is RGB or BGR. The 4th byte is the alpha channel information.</description>
            </item>
            <item>
              <description>For 48-bit images, this method will retrieve the 6 bytes containing the pixel color. The
            <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data is RGB or BGR. Each color component is stored as a 16-bit value, where
            0 corresponds to black and 0xFFFF corresponds to full white.</description>
            </item>
            <item>
              <description>For 64-bit images, this method will retrieve the 8 bytes containing the pixel color and alpha
            information. The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data in the first 6 bytes is RGB or BGR. Each color component
            is stored as a 16-bit value, where 0 corresponds to black and 0xFFFF corresponds to full white. The last two bytes
            contain the alpha information (also stored as a short value).</description>
            </item>
          </list>
        </para>
        <para>The minimum size of the returned byte array is calculated:</para>
        <para>
          <c>(<see cref="P:Leadtools.RasterImage.BitsPerPixel" /> + 7) / 8</c>
        </para>
        <para>You can use the <see cref="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.Byte[])" /> method to assign the returned value to another pixel.</para>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for the view perspective of
            the image.  If you specify a pixel that is outside the image or outside the region (if the image has one), this method
            throws an exception.</para>
        <para>The <see cref="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.Byte[])" /> method changes the data of the specified pixel.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <example>
             This example uses the GetPixelData and <see cref="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.Byte[])" /> methods to swap the R and G values for a particular pixel. 
            <!--RasterImage.GetPixelData--></example>
      <objectivec>
        <pre>
-(BOOL)getPixelData:(int)row 
             column:(int)column 
               data:(void*)pixelData 
           dataSize:(size_t)pixelDataSize 
              error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public byte[] getPixelData(
  int row, 
  int column
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.Byte[])">
      <summary>
            Changes the data of the specified pixel.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel.</param>
      <param name="data">Buffer that contains the pixel data to set. This buffer should contain
            <c>((BitsPerPixel + 7) / 8)</c> bytes.</param>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>No transformations are performed on the pixel data.</para>
        <para>This method should be called only for 8, 16, 24, 32, 48 and 64-bit images.</para>
        <para>Use the <see cref="M:Leadtools.RasterImage.GetPixelData(System.Int32,System.Int32)" /> method to get data of a specified pixel.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <seealso cref="P:Leadtools.RasterImage.BitsPerPixel">BitsPerPixel</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetPixelData(System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(BOOL)setPixelData:(int)row 
             column:(int)column 
               data:(const void*)pixelData 
           dataSize:(size_t)pixelDataSize 
              error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setPixelData(
  int row, 
  int column, 
  byte[] data
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetPixelData(System.Int32,System.Int32,System.IntPtr,System.Int32)">
      <summary>
            Copies the pixel data of the specified pixel into an unmanaged memory buffer.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel</param>
      <param name="data">Pointer to unmanaged memory buffer to copy the pixel data to.</param>
      <param name="dataSize">Size of bytes the buffer in <paramref name="data" />.</param>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>No transformations are performed on the pixel data.</para>
        <para>The pixel data copied may represent an index into an images's palette, a grayscale value
            (<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see>, or red, green, and blue color values.</para>
        <para>This method should be called only for 8, 16, 24, 32, 48 and 64-bit images. It works as follows:</para>
        <para>
          <list type="bullet">
            <item>
              <description>For 8-bit images, this method will retrieve the palette index for the specified pixel.</description>
            </item>
            <item>
              <description>For 16-bit images, this method will retrieve the 2-byte value that forms the pixel.</description>
              <list type="bullet">
                <item>
                  <description>For grayscale 16-bit images, the data will contain the gray value. <see cref="P:Leadtools.RasterImage.LowBit" /> and
                 <see cref="P:Leadtools.RasterImage.HighBit" /> properties indicate the valid pixel data.</description>
                </item>
                <item>
                  <description>For color 16-bit images, the data contains packed 5-bit R, G and B values. The high bit contains
                 the alpha information. The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data is RGB or BGR.</description>
                </item>
              </list>
            </item>
            <item>
              <description>For 24-bit images, this method will retrieve the 3 bytes containing the pixel color.
            The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data is RGB or BGR.</description>
            </item>
            <item>
              <description>For 32-bit images, this method will retrieve the 4 bytes containing the pixel color and alpha
            information. The first 3 bytes contain the pixel color. The  The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data in the
            first 3 bytes is RGB or BGR. The 4th byte is the alpha channel information.</description>
            </item>
            <item>
              <description>For 48-bit images, this method will retrieve the 6 bytes containing the pixel color. The
            <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data is RGB or BGR. Each color component is stored as a 16-bit value, where
            0 corresponds to black and 0xFFFF corresponds to full white.</description>
            </item>
            <item>
              <description>For 64-bit images, this method will retrieve the 8 bytes containing the pixel color and alpha
            information. The <see cref="P:Leadtools.RasterImage.Order" /> determines whether the data in the first 6 bytes is RGB or BGR. Each color component
            is stored as a 16-bit value, where 0 corresponds to black and 0xFFFF corresponds to full white. The last two bytes
            contain the alpha information (also stored as a short value).</description>
            </item>
          </list>
        </para>
        <para>The minimum size of the returned byte array is calculated:</para>
        <para>
          <c>(<see cref="P:Leadtools.RasterImage.BitsPerPixel" /> + 7) / 8</c>
        </para>
        <para>You can use the <see cref="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.IntPtr,System.Int32)" /> method to assign the returned value to another pixel.</para>
        <para>This method uses image coordinates to specify the pixel. Therefore, you must account for the view perspective of
            the image.  If you specify a pixel that is outside the image or outside the region (if the image has one), this method
            throws an exception.</para>
        <para>The <see cref="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.IntPtr,System.Int32)" /> method changes the data of the specified pixel.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <example>
             This example uses the GetPixelData and <see cref="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.Byte[])" /> methods to swap the R and G values for a particular pixel. 
            <!--RasterImage.GetPixelData--></example>
      <java>
        <pre>
public void getPixelData(
  int row, 
  int column, 
  byte data[], 
  int dataSize
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.IntPtr,System.Int32)">
      <summary>
            Changes the data of the specified pixel by copying from an unmanaged memory buffer.
            </summary>
      <param name="row">The zero-based row number of the pixel.</param>
      <param name="column">The zero-based column number of the pixel.</param>
      <param name="data">Pointer to an unmanaged memory buffer that contains the pixel data to set.
            This buffer should contain <c>((BitsPerPixel + 7) / 8)</c> bytes.</param>
      <param name="dataSize">Size of the <paramref name="data" /> unmanaged memory buffer.</param>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>No transformations are performed on the pixel data.</para>
        <para>This method should be called only for 8, 16, 24, 32, 48 and 64-bit images.</para>
        <para>Use the <see cref="M:Leadtools.RasterImage.GetPixelData(System.Int32,System.Int32,System.IntPtr,System.Int32)" /> method to get data of a specified pixel.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <seealso cref="P:Leadtools.RasterImage.BitsPerPixel">BitsPerPixel</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetPixelData(System.Int32,System.Int32,System.IntPtr,System.Int32)" />.</example>
      <java>
        <pre>
public void setPixelData(
  int row, 
  int column, 
  byte data[], 
  int dataSize
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CopyData(System.Byte[],System.Int32)">
      <summary>
            Updates the data of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="data">Buffer containing the image new data.</param>
      <param name="dataOffset">Offset into <paramref name="data" /> where the copy operation should begin.</param>
      <remarks>
        <para>The byte array that you specify will be copied.</para>
        <para>The data is copied as is into the internal memory of this <see cref="T:Leadtools.RasterImage" />.</para>
      </remarks>
      <example>
        <!--RasterImage.CopyData-->
      </example>
      <java>
        <pre>
public void copyData(
  byte[] data, 
  int dataOffset, 
  long size
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetUserData(System.IntPtr,System.Int64)">
      <summary>
            Sets the data for the image to the specified unmanaged memory buffer.
            </summary>
      <isnew>2/28/2009</isnew>
      <param name="data">Pointer to the unmanaged memory buffer containing the image new data.</param>
      <param name="size">Number of bytes in <paramref name="data" />.</param>
      <remarks>
        <para>
              The data that you specify will not be copied, but instead will be referenced by the image until the image is
              disposed, or until you call this method again.
            </para>
        <para>
              To set up a <see cref="T:Leadtools.RasterImage" /> object with unmanaged user data, call the
              <see cref="M:Leadtools.RasterImage.#ctor(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],System.IntPtr,System.Int64)" />
              constructor passing <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see> to the <i>flags</i> parameter.
              </para>
        <para>
              Some image processing commands, such as <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> and <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" />, need
              to re-allocate the image data. If you create an image with <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>,
              and pass it to these command, they will change the image to
              <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> and re-allocate memory.  Your original
              memory will no longer be used.
            </para>
        <para>
              You are responsible for managing the image data. <see cref="M:Leadtools.RasterImage.Dispose" /> will not free <paramref name="data" />.
            </para>
      </remarks>
      <example>
             This example uses GetPixelData and <see cref="M:Leadtools.RasterImage.SetPixelData(System.Int32,System.Int32,System.Byte[])" /> methods to swap the R and G values for a particular pixel. 
            <!--RasterImage.SetUserData--></example>
      <objectivec>
        <pre>
-(BOOL)setUserData:(unsigned char*)userData 
      userDataSize:(size_t)userDataSize 
             error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setUserData(
  byte data[], 
  long size
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.FlipViewPerspective(System.Boolean)">
      <summary>
            Flips this <see cref="T:Leadtools.RasterImage" /> image by changing its <see cref="P:Leadtools.RasterImage.ViewPerspective" />.
            </summary>
      <param name="horizontal">true to flip horizontally, false to flip vertically.</param>
      <remarks>
        <para>(<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> only).</para>
        <para>This method achieves fast flip by changing only the <see cref="P:Leadtools.RasterImage.ViewPerspective" />.</para>
        <para>After using this method, you can reverse the result by restoring the original
            <see cref="P:Leadtools.RasterImage.ViewPerspective" />.</para>
        <para>Some methods must account for the view perspective. For more information refer to
            <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed" />.</example>
      <objectivec>
        <pre>
-(BOOL)flipViewPerspective:(BOOL)horizontal 
                     error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void flipViewPerspective(boolean horizontal)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.RotateViewPerspective(System.Int32)">
      <summary>
            Rotates this <see cref="T:Leadtools.RasterImage" /> by changing its <see cref="P:Leadtools.RasterImage.ViewPerspective" />.
            </summary>
      <param name="degrees">Degrees of rotation. Valid values +-90, +-180, +-270, or +-360. Positive values are
            clockwise; negative values are counterclockwise.</param>
      <remarks>
        <para>(<see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> only).</para>
        <para>This method achieves fast rotation by changing only the <see cref="P:Leadtools.RasterImage.ViewPerspective" />.</para>
        <para>After using this method, you can reverse the result by restoring the original <see cref="P:Leadtools.RasterImage.ViewPerspective" />.</para>
        <para>Some methods must account for the view perspective. For more information refer to
            <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.RasterImage.Changed" />.</example>
      <objectivec>
        <pre>
-(BOOL)rotateViewPerspective:(int)degrees 
                       error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void rotateViewPerspective(int degrees)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.ChangeViewPerspective(Leadtools.RasterViewPerspective)">
      <summary>
            Rotates and flips the image data as necessary to achieve the desired view perspective.
            </summary>
      <param name="viewPerspective">Desired view perspective.</param>
      <remarks>
        <para>The <see cref="P:Leadtools.RasterImage.ViewPerspective" /> is the arrangement of pixels in the image. 
            This method references image coordinates, which are often different 
            from the display coordinates of an image. </para>
        <para>Use this method to change the data and the <see cref="P:Leadtools.RasterImage.ViewPerspective" /> to simplify
            calculations that involve image coordinates. 
            This method does not affect the image display. 
            For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>The following values for <paramref name="viewPerspective" /> are supported in <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> only:
            <list type="bullet"><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.RightTop</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft90</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.LeftBottom</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft270</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.LeftTop</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft90</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.RightBottom</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft270</see></description></item></list></para>
      </remarks>
      <example>
            This example demonstrates the low-level methods for accessing 1-bit compressed image data. 
            It demonstrates the ability to get and put rows, and the ability to process rows in 
            buffer-to-buffer processing. The result of the function is an the first 50 lines are inverted.
            <!--RasterImage.GetRowCompressed--></example>
      <objectivec>
        <pre>
-(BOOL)changeViewPerspective:(LTRasterViewPerspective)value 
                       error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void changeViewPerspective(RasterViewPerspective viewPerspective)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.PointFromImage(Leadtools.RasterViewPerspective,Leadtools.LeadPoint)">
      <summary>
            Translates a point (x,y) from this <see cref="T:Leadtools.RasterImage" /> view perspective to the specified view perspective.
            </summary>
      <param name="viewPerspective">Destination view perspective to which the point should be translated.</param>
      <param name="pt">The point to translate.</param>
      <returns>The translated point.</returns>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ChangingImageCoordinates">Changing Image Coordinates</see>.</para>
      </remarks>
      <example>
             This example finds out where the origin of the image should be. Then it converts a known point to bitmap coordinates. 
            <!--RasterImage.PointFromImage--></example>
      <objectivec>
        <pre>
-(LeadPoint)pointFromImage:(LTRasterViewPerspective)viewPerspectiveToUse 
                        pt:(LeadPoint)pt;            </pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint pointFromImage(
  RasterViewPerspective viewPerspective, 
  LeadPoint pt
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.PointToImage(Leadtools.RasterViewPerspective,Leadtools.LeadPoint)">
      <summary>
            Translates a point (x,y) from the specified view perspective to this <see cref="T:Leadtools.RasterImage" /> view perspective.
            </summary>
      <param name="viewPerspective">Source view perspective from which the point should be translated.</param>
      <param name="pt">The point to translate.</param>
      <returns>The translated point.</returns>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ChangingImageCoordinates">Changing Image Coordinates</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.PointFromImage(Leadtools.RasterViewPerspective,Leadtools.LeadPoint)" />.</example>
      <objectivec>
        <pre>
-(LeadPoint)pointToImage:(LTRasterViewPerspective)viewPerspectiveToUse 
                      pt:(LeadPoint)pt;            </pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint pointToImage(
  RasterViewPerspective viewPerspective, 
  LeadPoint pt
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.RectangleFromImage(Leadtools.RasterViewPerspective,Leadtools.LeadRect)">
      <summary>
            Translates a rectangle from this <see cref="T:Leadtools.RasterImage" /> view perspective to the specified view perspective.
            </summary>
      <param name="viewPerspective">Destination view perspective to which the rectangle should be translated.</param>
      <param name="rc">The rectangle to translate.</param>
      <returns>The translated rectangle.</returns>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ChangingImageCoordinates">Changing Image Coordinates</see>.</para>
      </remarks>
      <example>
             This example finds out where the selected rectangle of the image would be in a TopLeft ViewPerspective. 
            <!--RasterImage.RectangleFromImage--></example>
      <objectivec>
        <pre>
-(LeadRect)rectangleFromImage:(LTRasterViewPerspective)viewPerspectiveToUse 
                           rc:(LeadRect)rc;            </pre>
      </objectivec>
      <java>
        <pre>
public LeadRect rectangleFromImage(
  RasterViewPerspective viewPerspective, 
  LeadRect rc
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.RectangleToImage(Leadtools.RasterViewPerspective,Leadtools.LeadRect)">
      <summary>
            Translates a rectangle from a specified view perspective to this <see cref="T:Leadtools.RasterImage" /> view perspective.
            </summary>
      <param name="viewPerspective">Source view perspective from which the rectangle should be translated.</param>
      <param name="rc">The rectangle to translate.</param>
      <returns>The translated rectangle.</returns>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ChangingImageCoordinates">Changing Image Coordinates</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.RectangleFromImage(Leadtools.RasterViewPerspective,Leadtools.LeadRect)" />.</example>
      <objectivec>
        <pre>
-(LeadRect)rectangleToImage:(LTRasterViewPerspective)viewPerspectiveToUse 
                         rc:(LeadRect)rc;            </pre>
      </objectivec>
      <java>
        <pre>
public LeadRect rectangleToImage(
  RasterViewPerspective viewPerspective, 
  LeadRect rc
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)">
      <summary>
            Initializes the buffered dithering of an image.
            </summary>
      <keywords>Color resolution|Color depth|Dithering|Error diffusion|Floyd-Steinberg dithering|Stevenson and Arce dithering|Variations in Dithering Methods|Ordered dithering|Cluster dithering|Burkes|Stucki|Sierra|Jarvis|Palettes</keywords>
      <param name="palette">The palette this uses for dithering. You can specify your own palette, or use a null reference
            (Nothing in Visual Basic) for LEAD's fixed palette.</param>
      <param name="colors">Number of colors used in the palette. If the palette contains more colors, only the first
            <paramref name="colors" /> colors are used. Valid values are 2 to 256.</param>
      <remarks>
        <para>The following flow chart shows how the methods relate to each other:</para>
        <para>
          <img src="ditherflow.jpg" title="Dithering Flow Chart" />
        </para>
        <para>The following properties from the <see cref="T:Leadtools.RasterImage" /> are used to control the dithering operation:
            <list type="bullet"><item><description><see cref="P:Leadtools.RasterImage.Width" /></description></item><item><description><see cref="P:Leadtools.RasterImage.Height" /></description></item><item><description><see cref="P:Leadtools.RasterImage.BitsPerPixel" /></description></item><item><description><see cref="P:Leadtools.RasterImage.Order" /> - if <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> is greater than 8</description></item><item><description><see cref="P:Leadtools.RasterImage.DitheringMethod" /> - if <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> is less than 16</description></item></list></para>
        <p>
            This method does not support signed images.
            </p>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
             This example dithers each line in one image and writes it to another image.
            <!--RasterImage.StartDithering--></example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">Codecs.CodecsThumbnailOptions.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.DitheringMethod">ImageProcessing.ColorResolutionCommand.DitheringMethod property</seealso>
      <seealso cref="T:Leadtools.RasterDitheringMethod">RasterDitheringMethod enumeration</seealso>
      <seealso cref="P:Leadtools.RasterDefaults.DitheringMethod">RasterDefaults.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod property</seealso>
      <seealso cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)">RasterImage.DitherLine method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StopDithering">RasterImage.StopDithering method</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</seealso>
      <objectivec>
        <pre>
-(BOOL)startDithering:(NSArray*)palette 
               colors:(unsigned int)colors 
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void startDithering(
  RasterColor[] palette, 
  int colors
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)">
      <summary>
            Used in a loop, dithers the line in a specified input buffer, and writes it to an output buffer.
            </summary>
      <keywords>Color resolution|Color depth|Dithering|Error diffusion|Floyd-Steinberg dithering|Stevenson and Arce dithering|Variations in Dithering Methods|Ordered dithering|Cluster dithering|Burkes|Stucki|Sierra|Jarvis|Palettes</keywords>
      <param name="srcBuffer">The input buffer.</param>
      <param name="srcBufferOffset">Index to <paramref name="srcBuffer" /> where the source data is started.</param>
      <param name="destBuffer">The output buffer.</param>
      <param name="destBufferOffset">Index to <paramref name="destBuffer" /> where the destination data is started.</param>
      <remarks>
        <para>This method uses the dithering method specified in the <see cref="P:Leadtools.RasterImage.DitheringMethod" /> property. Therefore,
            it provides better 4- or 8-bit output than the
            <see cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</see> method.</para>
        <para>This method uses the palette that the <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" /> method specifies. The output of the
            <see cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)" /> method is made up of 1-, 4-, or 8-bit indexes to the specified palette.
            <see cref="M:Leadtools.RasterImage.StopDithering" /> cleans up the allocated variables and buffers. For a description of how the
            methods relate to each other, refer to the <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" />.</para>
        <para>This method does not support signed images.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" />.</example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">Codecs.CodecsThumbnailOptions.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.DitheringMethod">ImageProcessing.ColorResolutionCommand.DitheringMethod property</seealso>
      <seealso cref="T:Leadtools.RasterDitheringMethod">RasterDitheringMethod enumeration</seealso>
      <seealso cref="P:Leadtools.RasterDefaults.DitheringMethod">RasterDefaults.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod property</seealso>
      <seealso cref="M:Leadtools.RasterImage.StopDithering">RasterImage.StopDithering method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)">RasterImage.StartDithering method</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</seealso>
      <objectivec>
        <pre>
-(BOOL)ditherLine:(const unsigned char*)srcBuffer 
       destBuffer:(unsigned char*)destBuffer 
            error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void ditherLine(
  byte[] srcBuffer, 
  int srcBufferOffset, 
  byte[] destBuffer, 
  int destBufferOffset
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.DitherLine(System.IntPtr,System.IntPtr)">
      <summary>
            Used in a loop, dithers the line in a specified unmanaged memory input buffer, and writes it to an
            unmanaged memory output buffer.
            </summary>
      <keywords>Color resolution|Color depth|Dithering|Error diffusion|Floyd-Steinberg dithering|Stevenson and Arce dithering|Variations in Dithering Methods|Ordered dithering|Cluster dithering|Burkes|Stucki|Sierra|Jarvis|Palettes</keywords>
      <param name="srcBuffer">Pointer to the unmanaged memory input buffer.</param>
      <param name="destBuffer">Pointer to the unmanaged memory output buffer.</param>
      <remarks>
        <para>This method uses the dithering method specified in the <see cref="P:Leadtools.RasterImage.DitheringMethod" /> property. Therefore,
            it provides better 4- or 8-bit output than the
            <see cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</see> method.</para>
        <para>This method uses the palette that the <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" /> method specifies. The output of the
            <see cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)" /> method is made up of 1-, 4-, or 8-bit indexes to the specified palette.
            <see cref="M:Leadtools.RasterImage.StopDithering" /> cleans up the allocated variables and buffers. For a description of how the
            methods relate to each other, refer to the <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" />.</para>
        <para>This method does not support signed images.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" />.</example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">Codecs.CodecsThumbnailOptions.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.DitheringMethod">ImageProcessing.ColorResolutionCommand.DitheringMethod property</seealso>
      <seealso cref="T:Leadtools.RasterDitheringMethod">RasterDitheringMethod enumeration</seealso>
      <seealso cref="P:Leadtools.RasterDefaults.DitheringMethod">RasterDefaults.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod property</seealso>
      <seealso cref="M:Leadtools.RasterImage.StopDithering">RasterImage.StopDithering method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)">RasterImage.StartDithering method</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</seealso>
      <java>
        <pre>
public void ditherLine(
  byte srcBuffer[], 
  byte destBuffer[]
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.StopDithering">
      <summary>
            Cleans up all data variables and buffers allocated by the <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" /> and <see cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)" /> methods.
            </summary>
      <keywords>Color resolution|Color depth|Dithering|Error diffusion|Floyd-Steinberg dithering|Stevenson and Arce dithering|Variations in Dithering Methods|Ordered dithering|Cluster dithering|Burkes|Stucki|Sierra|Jarvis|Palettes</keywords>
      <remarks>
        <para>This method resets all internal variables to their default settings. For a description of how the methods relate to
            each other, refer to <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" /> method.</para>
        <p>
            This method does not support signed images.
            </p>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" />.</example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">Codecs.CodecsThumbnailOptions.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.DitheringMethod">ImageProcessing.ColorResolutionCommand.DitheringMethod property</seealso>
      <seealso cref="T:Leadtools.RasterDitheringMethod">RasterDitheringMethod enumeration</seealso>
      <seealso cref="P:Leadtools.RasterDefaults.DitheringMethod">RasterDefaults.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod property</seealso>
      <seealso cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)">RasterImage.DitherLine method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)">RasterImage.StartDithering method</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</seealso>
      <objectivec>
        <pre>-(BOOL)stopDithering:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void stopDithering()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">
      <summary>
            Sets up the paint or paint and image processing methods' window leveling options for this <see cref="T:Leadtools.RasterImage" /></summary>
      <keywords>Window Leveling</keywords>
      <param name="lowBit">Value indicating the low bit used for leveling.
            0 &lt;= <see cref="P:Leadtools.RasterImage.LowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.HighBit" /> &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="highBit">Value indicating the high bit used for leveling.
            0 &lt;= <see cref="P:Leadtools.RasterImage.LowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.HighBit" /> &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="palette">
            Optional 8-bit lookup table that can be used to implement a user defined conversion.  For every intensity value
            between 0 and 2 raised to the power of (<see cref="P:Leadtools.RasterImage.HighBit" /> - <see cref="P:Leadtools.RasterImage.LowBit" /> + 1)-1 there should be a
            corresponding entry in the lookup table that contains a color.  If <paramref name="palette" /> is null (Nothing in
            Visual Basic), the conversion is a normal shift (right or left) and the painted image is 8-bit grayscale.  If
            <paramref name="palette" /> is not null (Nothing in Visual Basic), the painted image is a 24-bit image.
            </param>
      <param name="mode">Value indicating whether <paramref name="palette" /> is used by the paint and image processing
            methods or only by the paint methods.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>Provides "on demand" window leveling for the paint methods and does not alter the image data. To convert the image
            data to a window leveled image, use <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />.</para>
        <para>If <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> is specified,
            then all image processing methods will take the <paramref name="palette" /> into account.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> for the 
            <paramref name="mode" /> parameter, by using the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file
            format that supports Window Leveling. If a window-leveled  image is saved as any other file format, the image data
            will be converted before being saved. For more information, refer to
            <para>For a version of this function that uses an 8-bit palette, see <see cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" />.</para><see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.WindowLevel-->
      </example>
      <seealso cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" />
      <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />
      <seealso cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" />
      <objectivec>
        <pre>
-(BOOL)windowLevel:(int)lowBitValue 
           highBit:(int)highBitValue 
           palette:(NSArray*)palette 
              mode:(LTRasterWindowLevelMode)mode 
             error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void windowLevel(
  int lowBit, 
  int highBit, 
  RasterColor[] palette, 
  RasterWindowLevelMode mode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)">
      <summary>
            Sets up the paint or paint and image processing methods' window leveling options for this <see cref="T:Leadtools.RasterImage" /></summary>
      <keywords>Window Leveling</keywords>
      <isnew>2/28/2009</isnew>
      <param name="lowBit">Value indicating the low bit used for leveling.
            0 &lt;= <see cref="P:Leadtools.RasterImage.LowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.HighBit" /> &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="highBit">Value indicating the high bit used for leveling.
            0 &lt;= <see cref="P:Leadtools.RasterImage.LowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.HighBit" /> &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale).</param>
      <param name="palette">
            Optional 16-bit lookup table that can be used to implement a user defined conversion.  For every intensity value
            between 0 and 2 raised to the power of (<see cref="P:Leadtools.RasterImage.HighBit" /> - <see cref="P:Leadtools.RasterImage.LowBit" /> + 1)-1 there should be a
            corresponding entry in the lookup table that contains a color.  If <paramref name="palette" /> is null (Nothing in
            Visual Basic), the conversion is a normal shift (right or left) and the painted image is 8 or 16-bit grayscale. If
            <paramref name="palette" /> is not null (Nothing in Visual Basic), the painted image is a 48-bit image.
            </param>
      <param name="mode">Value indicating whether <paramref name="palette" /> is used by the paint and image processing
            methods or only by the paint methods.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>Provides "on demand" window leveling for the paint methods and does not alter the image data. To convert the image
            data to a window leveled image, use <see cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" />.</para>
        <para>If <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> is specified,
            then all image processing methods will take the <paramref name="palette" /> into account.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" /> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see> for the 
            <paramref name="mode" /> parameter, by using the <see cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" /> or by loading an image from a file
            format that supports Window Leveling. If a window-leveled image is saved as any other file format, the image data
            will be converted before being saved. For more information, refer to
            <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>LEADTOOLS supports two types of LUTs for 10-16-bit grayscale images (8-bit LUT and 16-bit LUT). 
            Typical grayscale image display and processing is done using an 8-bit LUT.  But, you can also use a 16-bit LUT, which offers more precision. 
            Some special video cards and monitors also support display of grayscale images using a 16-bit LUT.</para>
        <para>For a version of this function that uses an 8-bit palette, see <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.WindowLevelExt-->
      </example>
      <seealso cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" />
      <seealso cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" />
      <seealso cref="M:Leadtools.RasterImage.WindowLevelExt(System.Int32,System.Int32,Leadtools.RasterColor16[],Leadtools.RasterWindowLevelMode)" />
      <objectivec>
        <pre>
-(BOOL)windowLevelExt:(int)lowBitValue 
              highBit:(int)highBitValue 
              palette:(NSArray*)palette 
                 mode:(LTRasterWindowLevelMode) mode 
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void windowLevelExt(
  int lowBit, 
  int highBit, 
  RasterColor16[] palette, 
  RasterWindowLevelMode mode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Underlay(Leadtools.RasterImage,Leadtools.RasterImageUnderlayFlags)">
      <summary>
            Combines two images so that one appears to be an underlying texture for the other.
            </summary>
      <param name="underlayImage">The image that will be used as the underlying image.
            This is the image that appears to be on bottom and is grayscaled as it is combined with
            the target image.</param>
      <param name="flags">Indicators of how the underlying image is to be positioned.</param>
      <remarks>
        <para>This is most effective when the underlying image is a filtered one, such as an embossed image.</para>
        <para>This method changes the colors of the underlay to grayscale as it combines the images. It updates this
            <see cref="T:Leadtools.RasterImage" />, leaving the <paramref name="underlayImage" /> unchanged. <paramref name="underlayImage" /> can
            either be stretched or tiled to fill the image, as shown in the following illustration:</para>
        <para>
          <img src="Underlay.gif" title="Underlay" />
        </para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ApplyingArtisticEffects">Applying Artistic Effects</see>.</para>
      </remarks>
      <example>
             This example draws an ellipse on the image. 
            <!--RasterImage.Underlay--></example>
      <objectivec>
        <pre>
-(BOOL)underlay:(LTRasterImage*)underlayImage 
          flags:(LTRasterImageUnderlayFlags)flags 
          error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void underlay(
  RasterImage underlayImage, 
  RasterImageUnderlayFlags flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CalculatePaintModeRectangle(System.Int32,System.Int32,Leadtools.LeadRect,Leadtools.RasterPaintSizeMode,Leadtools.RasterPaintAlignMode,Leadtools.RasterPaintAlignMode)">
      <summary>
            Adjusts the given rectangle based on the given paint mode properties.
            </summary>
      <param name="sourceWidth">The width of the source rectangle.</param>
      <param name="sourceHeight">The height of the source rectangle.</param>
      <param name="destinationRectangle">Destination rectangle.</param>
      <param name="sizeMode">Controls how the source rectangle is positioned inside the destination rectangle.</param>
      <param name="horizontalAlignMode">Controls how the source rectangle is aligned horizontally inside the destination rectangle.</param>
      <param name="verticalAlignMode">Controls how the source rectangle is aligned vertically inside the destination rectangle.</param>
      <returns>The new destination rectangle adjusted based on the size mode and alignment.</returns>
      <remarks>
        <para>This method allows you to calculate how a source rectangle can be adjusted into a destination rectangle based on 
            a size mode and alignment.</para>
      </remarks>
      <example>
        <!--RasterImage.CalculatePaintModeRectangle-->
      </example>
      <objectivec>
        <pre>
+(LeadRect)calculatePaintModeRectangle:(int)sourceWidth
                          sourceHeight:(int)sourceHeight
                  destinationRectangle:(LeadRect)destinationRectangle
                              sizeMode:(LTRasterPaintSizeMode)sizeMode
                   horizontalAlignMode:(LTRasterPaintAlignMode)horizontalAlignMode
                     verticalAlignMode:(LTRasterPaintAlignMode)verticalAlignMode;            </pre>
      </objectivec>
      <java>
        <pre>
public static LeadRect calculatePaintModeRectangle(
  int sourceWidth, 
  int sourceHeight, 
  LeadRect destinationRectangle, 
  RasterPaintSizeMode sizeMode, 
  RasterPaintAlignMode horizontalAlignMode, 
  RasterPaintAlignMode verticalAlignMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.FromDib(System.IntPtr)">
      <summary>
            Creates a new image from the specified Windows device independent bitmap (DIB) stored in an unmanaged pointer.
            </summary>
      <param name="hdib">Handle to the Windows DIB.</param>
      <returns>The newly created <see cref="T:Leadtools.RasterImage" /> object.</returns>
      <remarks>
        <para> When this method is completed, there are two copies of the image in memory: the original DIB and the
            <see cref="T:Leadtools.RasterImage" /> it creates. Freeing one will not affect the other.</para>
        <para>This method supports the standard DIB formats (BI_RGB and BI_BITFIELDS) as well as some FOURCC (Four Character Code)
            formats that some capture cards output.</para>
        <para>These are the FOURCC that LEADTOOLS supports at the moment:</para>
        <para>YVU9 (YUV9), I420 (YUV12), YUV2 , YV12 , IF09 , IYUV , UYVY , cyuv, YUY2, YVYU, Y41P, Y211, Y41T, Y42T.</para>
        <para>
            This method does not support signed images.
            </para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.UsingDibsDdbsAndTheClipboard">Using DIBs, DDBs, and the Clipboard</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.ToDib(Leadtools.RasterConvertToDibType)" /></example>
    </member>
    <member name="M:Leadtools.RasterImage.FromDibArray(System.Byte[],System.Int32)">
      <summary>
            Creates a new image from the specified Windows device independent bitmap (DIB) stored in a managed array.
            </summary>
      <param name="hdib">Data containing the Windows DIB.</param>
      <param name="offset">Byte offset into <paramref name="hdib" /> where the data starts.</param>
      <returns>The newly created <see cref="T:Leadtools.RasterImage" /> object.</returns>
      <remarks>
        <para> When this method is completed, there are two copies of the image in memory: the original DIB and the
            <see cref="T:Leadtools.RasterImage" /> it creates. Freeing one will not affect the other.</para>
        <para>This method supports the standard DIB formats (BI_RGB and BI_BITFIELDS) as well as some FOURCC (Four Character Code)
            formats that some capture cards output.</para>
        <para>These are the FOURCC that LEADTOOLS supports at the moment:</para>
        <para>YVU9 (YUV9), I420 (YUV12), YUV2 , YV12 , IF09 , IYUV , UYVY , cyuv, YUY2, YVYU, Y41P, Y211, Y41T, Y42T.</para>
        <para>
            This method does not support signed images.
            </para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.UsingDibsDdbsAndTheClipboard">Using DIBs, DDBs, and the Clipboard</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.ToDibArray(Leadtools.RasterConvertToDibType)" /></example>
    </member>
    <member name="M:Leadtools.RasterImage.FromDibPtr(System.IntPtr)">
      <summary>
            Creates a new image from the specified Windows device independent bitmap (DIB) stored in an unmanaged pointer.
            </summary>
      <param name="hdib">Handle to the Windows DIB.</param>
      <returns>The newly created <see cref="T:Leadtools.RasterImage" /> object.</returns>
      <remarks>
        <para> When this method is completed, there are two copies of the image in memory: the original DIB and the
            <see cref="T:Leadtools.RasterImage" /> it creates. Freeing one will not affect the other.</para>
        <para>This method supports the standard DIB formats (BI_RGB and BI_BITFIELDS) as well as some FOURCC (Four Character Code)
            formats that some capture cards output.</para>
        <para>These are the FOURCC that LEADTOOLS supports at the moment:</para>
        <para>YVU9 (YUV9), I420 (YUV12), YUV2 , YV12 , IF09 , IYUV , UYVY , cyuv, YUY2, YVYU, Y41P, Y211, Y41T, Y42T.</para>
        <para>
            This method does not support signed images.
            </para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.UsingDibsDdbsAndTheClipboard">Using DIBs, DDBs, and the Clipboard</see>.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.ToDib(Leadtools.RasterConvertToDibType)">
      <summary>
            Gets an unmanaged pointer containing a Windows device independent bitmap (DIB) version of this image.
            </summary>
      <param name="type">Type of DIB to create.</param>
      <returns>A handle to the Windows DIB.</returns>
      <br />
      <remarks>
        <para>When this method is completed, there are two copies of the image in memory: the DIB and the original
            <see cref="T:Leadtools.RasterImage" />. Freeing one will not affect the other.</para>
        <para>This methods allocates a DIB bitmap and copies the <see cref="T:Leadtools.RasterImage" /> to the DIB.</para>
        <para>
          <strong>NOTE:</strong> This method returns the data in an unmanaged buffer. The caller is responsible for freeing the DIB's IntPtr when it is no longer needed. You can use <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">Marshal.FreeHGlobal</see>.</para>
        <para>A DIB consists of one of the following:</para>
        <para>
          <list type="bullet">
            <item>
              <description>a BITMAPFILEHEADER</description>
            </item>
            <item>
              <description>a BITMAPV4HEADER(introduced in Windows 95 and Windows NT 4.0)</description>
            </item>
            <item>
              <description>or a BITMAPV5HEADER (introduced in Windows 2000 and Windows 98)</description>
            </item>
          </list>
        </para>
        <para>followed by a color table and then the bitmap data. The resulting DIB type is determined by the value of the
            <paramref name="type" /> parameter.</para>
        <para>The orientation of the image and color order will depend on how the image was loaded into the
            <see cref="T:Leadtools.RasterImage" />.</para>
        <para>When you no longer need the DIB, you can free it using the Windows GlobalFree function or
            <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.IntroductionDIBsDDBsAndTheClipboard">Introduction: DIBs, DDBs, and the Clipboard</see>.</para>
        <para>This function does not support signed images.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.FromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.RasterImage.FromDibArray(System.Byte[],System.Int32)" />
      <seealso cref="M:Leadtools.RasterImage.ToDibArray(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.FromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.FromHBitmap</seealso>
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ToHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeFromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeFromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.ChangeFromHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeToDib(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ChangeToHBitmap</seealso>
      <example>
        <!--RasterImage.ToDib-->
      </example>
      <objectivec>
        <pre>-(LTHandle*)toDib:(LTRasterConvertToDibType)type;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterImage.ToDibArray(Leadtools.RasterConvertToDibType)">
      <summary>
            Gets a managed buffer containing a Windows device independent bitmap (DIB) version of this image.
            </summary>
      <param name="type">Type of DIB to create.</param>
      <returns>An array of <see cref="T:System.Byte" /> that contains the handle to the Windows DIB.</returns>
      <br />
      <remarks>
        <para>When this method is completed, there are two copies of the image in memory: the DIB and the original
            <see cref="T:Leadtools.RasterImage" />. Freeing one will not affect the other.</para>
        <para>This methods allocates a DIB bitmap and copies the <see cref="T:Leadtools.RasterImage" /> to the DIB.</para>
        <para>A DIB consists of one of the following:</para>
        <para>
          <list type="bullet">
            <item>
              <description>a BITMAPFILEHEADER</description>
            </item>
            <item>
              <description>a BITMAPV4HEADER(introduced in Windows 95 and Windows NT 4.0)</description>
            </item>
            <item>
              <description>or a BITMAPV5HEADER (introduced in Windows 2000 and Windows 98)</description>
            </item>
          </list>
        </para>
        <para>followed by a color table and then the bitmap data. The resulting DIB type is determined by the value of the
            <paramref name="type" /> parameter.</para>
        <para>The orientation of the image and color order will depend on how the image was loaded into the
            <see cref="T:Leadtools.RasterImage" />.</para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.IntroductionDIBsDDBsAndTheClipboard">Introduction: DIBs, DDBs, and the Clipboard</see>.</para>
        <para>This function does not support signed images.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.FromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.RasterImage.FromDibArray(System.Byte[],System.Int32)" />
      <seealso cref="M:Leadtools.RasterImage.ToDib(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.FromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.FromHBitmap</seealso>
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ToHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeFromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeFromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.ChangeFromHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeToDib(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ChangeToHBitmap</seealso>
      <example>
        <!--RasterImage.ToDibArray-->
      </example>
    </member>
    <member name="M:Leadtools.RasterImage.ChangeFromDib(System.IntPtr)">
      <summary>
             Changes a Windows device independent bitmap (DIB) to a LEAD <see cref="T:Leadtools.RasterImage" /> object.
             </summary>
      <keywords>DDB|DIB|Device independent bitmap|Device dependent bitmap|Palettes|FOURCC|Four Character Code | YVU9|DIB|I420|YUV12|YUV9|YUV2|YV12|IF09 | IYUV|UYVY|cyuv|YUY2|YVYU|Y41P|Y211|Y41T|Y42T</keywords>
      <param name="hdib">The DIB handle to be changed.</param>
      <returns>The newly created <see cref="T:Leadtools.RasterImage" /> object.</returns>
      <remarks>
        <para>This method results in only one copy of the image, and it invalidates the DIB handle.</para>
        <para>This method supports the standard DIB formats (BI_RGB and BI_BITFIELDS) 
             as well as some FOURCC (Four Character Code) formats that some capture cards output.</para>
        <para>The following formats are the FOURCC formats that LEADTOOLS currently supports:</para>
        <list type="bullet">
          <item>
            <description>
             YVU9 (YUV9)
             </description>
          </item>
          <item>
            <description>
             I420 (YUV12)
             </description>
          </item>
          <item>
            <description>
             YUV2 
             </description>
          </item>
          <item>
            <description>
             YV12
             </description>
          </item>
          <item>
            <description>
             IF09
             </description>
          </item>
          <item>
            <description>
             IYUV
             </description>
          </item>
          <item>
            <description>
             UYVY
             </description>
          </item>
          <item>
            <description>
             cyuv
             </description>
          </item>
          <item>
            <description>
             YUY2
             </description>
          </item>
          <item>
            <description>
             YVYU
             </description>
          </item>
          <item>
            <description>
             Y41P
             </description>
          </item>
          <item>
            <description>
             Y211
             </description>
          </item>
          <item>
            <description>
             Y41T 
             </description>
          </item>
          <item>
            <description>
             Y42T
             </description>
          </item>
        </list>
        <para>This function does not support signed images.</para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.UsingDibsDdbsAndTheClipboard">Using DIBs, DDBs, and the Clipboard</see>.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.FromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.RasterImage.FromDibArray(System.Byte[],System.Int32)" />
      <seealso cref="M:Leadtools.RasterImage.ToDibArray(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.FromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.FromHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ToDib(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ToHBitmap</seealso>
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeFromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.ChangeFromHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeToDib(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ChangeToHBitmap</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.ChangeToDib(Leadtools.RasterConvertToDibType)" />.</example>
    </member>
    <member name="M:Leadtools.RasterImage.ChangeToDib(Leadtools.RasterConvertToDibType)">
      <summary>
            Changes a LEAD <see cref="T:Leadtools.RasterImage" /> object to a Windows Device Independent Bitmap (DIB).
            </summary>
      <keywords>DDB|DIB|Device independent bitmap|Device dependent bitmap|Palettes|Clipboards|Copying|Pasting</keywords>
      <param name="type">
            Type of DIB to create. Possible values are:
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term><see cref="T:Leadtools.RasterConvertToDibType">RasterConvertToDibType.BitmapInfoHeader</see></term><description>DIB that uses a BITMAPINFOHEADER</description></item><item><term><see cref="T:Leadtools.RasterConvertToDibType">RasterConvertToDibType.BitmapV4Header</see></term><description>DIB that uses a BITMAPV4HEADER. (Introduced in Windows 95 and Windows NT 4.0)</description></item><item><term><see cref="T:Leadtools.RasterConvertToDibType">RasterConvertToDibType.BitmapV5Header</see></term><description>DIB that uses a BITMAPV5HEADER (Introduced in Windows 2000 and Windows 98)</description></item></list></param>
      <returns>A handle to the device independent bitmap (DIB) this method creates.</returns>
      <remarks>
        <para>A DIB consists of one of the following:
            <list type="bullet"><item><description>a BITMAPFILEHEADER,</description></item><item><description>a BITMAPV4HEADER (introduced in Windows 95 and Windows NT 4.0),</description></item><item><description>or a BITMAPV5HEADER (introduced in Windows 2000 and Windows 98),</description></item></list></para>
        <para>followed by a color table and then the bitmap data. 
            The resulting DIB type is determined by the value of the <paramref name="type" /> parameter.</para>
        <para>The orientation of the image and color order will depend on how the 
            image was loaded into the <see cref="T:Leadtools.RasterImage" />.</para>
        <para>When you no longer need the DIB, you can free it using the 
            Windows <strong>GlobalFree</strong> function.</para>
        <para>This method does not support signed data images. It will throw 
            an exception of type <see cref="T:Leadtools.RasterException" /> with code value
            <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.SignedDataNotSupported</see> if this <see cref="T:Leadtools.RasterImage" /> has a signed data image.</para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.UsingDibsDdbsAndTheClipboard">Using DIBs, DDBs, and the Clipboard</see>.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.FromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.RasterImage.FromDibArray(System.Byte[],System.Int32)" />
      <seealso cref="M:Leadtools.RasterImage.ToDibArray(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.FromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.FromHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ToDib(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ToHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeFromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeFromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.ChangeFromHBitmap</seealso>
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ChangeToHBitmap</seealso>
      <example>
            This example loads a <see cref="T:Leadtools.RasterImage" />, changes it to a V5 DIB and writes out the DIB as a bitmap file.
            <!--RasterImage.ChangeToDib--></example>
    </member>
    <member name="M:Leadtools.RasterImage.CopyMetadataTo(Leadtools.RasterImage,Leadtools.RasterMetadataFlags)">
      <summary>
            Copies the metadata (tags, comments, and markers) to the given image.
            </summary>
      <param name="image">Destination image</param>
      <param name="flags">Type of metadata to copy</param>
      <remarks>
        <para>This methods copies the metadata found in the <see cref="P:Leadtools.RasterImage.Tags" />, <see cref="P:Leadtools.RasterImage.Comments" /> and/or
            <see cref="P:Leadtools.RasterImage.Markers" /> collections of this <see cref="T:Leadtools.RasterImage" /> to <paramref name="image" />.</para>
        <para>Before the copy operation, this method will clear any metadata already found in <paramref name="image" />.</para>
        <para>For more information on GeoKeys, refer to <see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.CopyMetadataTo-->
      </example>
      <objectivec>
        <pre>
-(void)copyMetadataTo:(LTRasterImage*)image 
                flags:(LTRasterMetadataFlags)flags;            </pre>
      </objectivec>
      <java>
        <pre>
public void copyMetadataTo(
  RasterImage image, 
  int flags
)            </pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterImage.MaxOverlays">
      <summary>
            Gets the maximum number of overlays allowed in a <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>extern const unsigned int LTRasterImage_MaxOverlays;</pre>
      </objectivec>
      <java>
        <pre>public static final int MAX_OVERLAYS = DefineConstants.MAX_OVERLAYS;</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)">
      <summary>
            Gets the overlay image for the specified index.
            </summary>
      <param name="index">The index of the overlay being retrieved.  This index is zero-based and should be less or equal
            than <see cref="F:Leadtools.RasterImage.MaxOverlays" />.</param>
      <param name="mode">Determines how to retreive the image, possible values are:
            <list type="table"><listheader><term>
                    Mode
                 </term><description>
                    Description
                 </description></listheader><item><term><see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Copy</see></term><description>
                    A copy of the overlay image is retrieved from the overlay list.
                 </description></item><item><term><see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.NoCopy</see></term><description>
                    The actual overlay image is retrieved. No copy is made. You should be careful when
                    modifying the returned overlay image because you can modify/invalidate the entry in the overlay bitmap list.
                    </description></item><item><term><see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Move</see></term><description>
                    The actual overlay image is retrieved. The image is also removed from the overlay list. This is recommended
                    over <see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.NoCopy</see>.
                 </description></item></list></param>
      <returns>A <see cref="T:Leadtools.RasterImage" /> object that represents the overlay image of the specified index.</returns>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method can be used to get a copy of the overlay image
            (<see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Copy</see>) or to get the image without making a copy
            (<see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.NoCopy</see> or
            <see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Move</see>).</para>
        <para>The quickest way to get the overlay image is to avoid making a copy. For more information on using
            <see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.NoCopy</see>, refer to the "Remarks" section of
            <see cref="M:Leadtools.RasterImage.SetOverlayImage(System.Int32,Leadtools.RasterImage,Leadtools.RasterGetSetOverlayImageMode)" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.GetOverlayImage-->
      </example>
      <objectivec>
        <pre>
-(LTRasterImage*)getOverlayImage:(int)index 
                            mode:(LTRasterGetSetOverlayImageMode)mode 
                           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getOverlayImage(
  int index, 
  RasterGetSetOverlayImageMode mode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetOverlayImage(System.Int32,Leadtools.RasterImage,Leadtools.RasterGetSetOverlayImageMode)">
      <summary>
            Sets the overlay image for a certain index.
            </summary>
      <param name="index">The index of the overlay for which to set the image.  This index is zero-based and
            should be less than or equal to <see cref="F:Leadtools.RasterImage.MaxOverlays" />.</param>
      <param name="overlayImage">The new overlay image. This can be null (Nothing in Visual Basic), in which case
            the corresponding overlay image will be freed.</param>
      <param name="mode">Determines how to insert the image, possible values are:
            <list type="table"><listheader><term>
                    Mode
                 </term><description>
                    Description
                 </description></listheader><item><term><see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Copy</see></term><description>
                    A copy of <paramref name="overlayImage" /> is inserted in the overlay list.
                 </description></item><item><term><see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.NoCopy</see></term><description><paramref name="overlayImage" /> is set into the overlay list without making a copy.  You should be careful when
                    modifying <paramref name="overlayImage" /> because you can modify/invalidate the entry in the overlay image list.
                    </description></item><item><term><see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Move</see></term><description><paramref name="overlayImage" /> is moved into the overlay list. It will also be disposed, so you cannot make changes to
                    it.  This is recommended over <see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.NoCopy</see>.
                 </description></item></list></param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>Calling this method with a valid image set in <paramref name="overlayImage" /> frees the old overlay image at the specified index
            and sets the overlay image at the index to the new image referenced by <paramref name="overlayImage" />.</para>
        <para>If <paramref name="overlayImage" /> is null (Nothing in Visual Basic), the old overlay image is freed and the size is reset to:</para>
        <para>
          <c>
            OverlayWidth = Image.ImageWidth - OverlayImage.Origin.X<br />
            OverlayHeight = Image.ImageHeight - OverlayImage.Origin.Y<br /></c>
        </para>
        <para>If <paramref name="mode" /> is <see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.NoCopy</see> and <paramref name="overlayImage" />
            is not null (Nothing), the image is inserted as is into the overlay array. This means whenever you update the data from
            <paramref name="overlayImage" />, the overlay image is changed too. Great care should be taken when using this flag because you can
            invalidate the overlay image stored in the array. For example, if you dispose the overlay image, the data pointed to
            by the overlay image from the internal array is also freed, but the array does not know that this has happened and
            thinks the data pointer is still valid. If the overlay image is accessed in some way, a crash will occur. A safer way
            of quickly setting the data is to use <see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Move</see>.</para>
        <para>If <paramref name="mode" /> is <see cref="T:Leadtools.RasterGetSetOverlayImageMode">RasterGetSetOverlayImageMode.Move</see>, the data from the
            <paramref name="overlayImage" /> is copied into the overlay array and then the <paramref name="overlayImage" /> object is disposed. This means
            that you can do anything with the <paramref name="overlayImage" /> object and the overlay image stored in the array will be
            unaffected. This is the most efficient way of setting the overlay image, because no copy will take place.</para>
        <para>
          <paramref name="overlayImage" /> must reference an image that is 1-bit, overwise, this method will throw an exception.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)" /></example>
      <objectivec>
        <pre>
-(BOOL)setOverlayImage:(int)index 
          overlayImage:(LTRasterImage*)overlayImage 
                  mode:(LTRasterGetSetOverlayImageMode)mode 
                 error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setOverlayImage(
  int index, 
  RasterImage overlayImage, 
  RasterGetSetOverlayImageMode mode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.SetOverlayImageSize(System.Int32,System.Int32,System.Int32)">
      <summary>
            Changes the size of the overlay image for a certain index.
            </summary>
      <param name="index">The index of the overlay for which to set the image size.  This index is zero-based and
            should be less than or equal to <see cref="F:Leadtools.RasterImage.MaxOverlays" />.</param>
      <param name="width">New image width in pixels</param>
      <param name="height">New image height in pixels.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>Sets the size of the overlay image for a certain index.  If the image already has an overlay image at <paramref name="index" />,
            it will be freed and the overlay size will be set to <paramref name="width" /> by <paramref name="height" /> pixels.  
            If the image has no overlay image at <paramref name="index" />, a
            new empty overlay image will be created with size of <paramref name="width" /> and <paramref name="height" />.
            After calling SetOverlayImageSize, you must call <see cref="M:Leadtools.RasterImage.UpdateOverlayBits(System.Int32,Leadtools.RasterUpdateOverlayBitsFlags)" /> to allocate the overlay bitmap and set the data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)" /></example>
      <objectivec>
        <pre>
-(BOOL)setOverlayImageSize:(int)index 
              overlayWidth:(unsigned int)overlayWidth 
             overlayHeight:(unsigned int)overlayHeight 
                     error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void setOverlayImageSize(
  int index, 
  int width, 
  int height
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.UpdateOverlayBits(System.Int32,Leadtools.RasterUpdateOverlayBitsFlags)">
      <summary>
            Updates the overlay image pixels with the bits from the corresponding bitplane of the main image.
            </summary>
      <param name="index">The index of the overlay used in the process.</param>
      <param name="flags">Flags that determine whether the main image or the overlay image should be updated.</param>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>This method can also update the main image's bitplane with the data from the overlay image.</para>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>The overlay at <paramref name="index" /> must have the corresponding bitplane set: otherwise, this method will throw a
            <see cref="T:Leadtools.RasterException" /> with <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.OverlayIndex</see>.
            This index is zero-based and should be less than or equal to <see cref="F:Leadtools.RasterImage.MaxOverlays" />.</para>
        <para>If <see cref="T:Leadtools.RasterUpdateOverlayBitsFlags">RasterUpdateOverlayBitsFlags.FromOverlay</see> is set in <paramref name="flags" />, the bitplane in
            the main image will be updated to match the overlay image data. The left and top coordinates for the overlay image are
            used. If <see cref="T:Leadtools.RasterUpdateOverlayBitsFlags">RasterUpdateOverlayBitsFlags.Clear</see> is set, the bits from the bitplane associated with
            the overlay are set to 0 if they are not covered by the overlay. If <see cref="T:Leadtools.RasterUpdateOverlayBitsFlags">RasterUpdateOverlayBitsFlags.Clear</see>
            is not set, the bits from the bitplane associated with the overlay that are not covered by the overlay image are left
            unchanged.</para>
        <para>If <see cref="T:Leadtools.RasterUpdateOverlayBitsFlags">RasterUpdateOverlayBitsFlags.FromImage</see> is set in <paramref name="flags" />, the overlay image
            will be updated with the bits from the corresponding bitplane. The size of the overlay image is unchanged if it has
            ever been set. If the overlay image has never been set, the overlay image will be from left, top coordinate to the
            bottom-right corner of the image:</para>
        <para>
          <c>
            OverlayWidth = Image.ImageWidth - OverlayImage.Origin.X
            OverlayHeight = Image.ImageHeight - OverlayImage.Origin.Y
            </c>
        </para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)" />.</example>
      <objectivec>
        <pre>
-(BOOL)updateOverlayBits:(int)index 
                   flags:(LTRasterUpdateOverlayBitsFlags)flags 
                   error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void updateOverlayBits(
  int index, 
  RasterUpdateOverlayBitsFlags flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">
      <summary>
            Gets one or more overlay attributes for the specified index.
            </summary>
      <param name="index">The zero-based index of the overlay for which to get the attributes.</param>
      <param name="flags">Flags that determine which attributes to retrieve.</param>
      <returns>An <see cref="T:Leadtools.RasterOverlayAttributes" /> object filled with the attribute data requested or null (
            Nothing in Visual Basic) if the image does not have an overlay attribute at the specific index.</returns>
      <remarks>
        <para>Only the members specified by <paramref name="flags" /> will contain valid values in returned <see cref="T:Leadtools.RasterOverlayAttributes" /> retrieved by
            the method will be updated. The other values are left to the defult value.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)" /> example.
            </example>
      <objectivec>
        <pre>
-(LTRasterOverlayAttributes*)getOverlayAttributes:(int)index 
                                            flags:(LTRasterGetSetOverlayAttributesFlags)flags 
                                            error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterOverlayAttributes getOverlayAttributes(
  int index, 
  int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">
      <summary>
            Updates the overlay attributes for the overlay at the specified index.
            </summary>
      <param name="index">The zero-based index of the overlay for which the attributes are being set.</param>
      <param name="attributes">An <see cref="T:Leadtools.RasterOverlayAttributes" /> object containing the overlay attributes to set.</param>
      <param name="flags">Flags that determine which attributes to set.</param>
      <remarks>
        <para>This method can be used to set some or all the overlay attributes.  Before calling this method, initialize
            the <paramref name="attributes" /> object members with all the attributes to be set or changed.</para>
        <para>You do not need to initialize the object variables that you are not setting or changing.  For example, if 
            <see cref="T:Leadtools.RasterGetSetOverlayAttributesFlags">RasterGetSetOverlayAttributesFlags.Origin</see> is not set in
            <paramref name="flags" />, you do not need to initialize <see cref="P:Leadtools.RasterOverlayAttributes.Origin">RasterOverlayAttributes.Origin</see>
            member of <paramref name="attributes" />.</para>
        <para>There are several attributes in <paramref name="flags" /> and you cannot change only one flag. If you want to change only one
            flag, you will first have to get all the flags and change only the flag you want. See the example for more information.
            </para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)" />.</example>
      <objectivec>
        <pre>
-(BOOL)updateOverlayAttributes:(int)index 
                    attributes:(LTRasterOverlayAttributes*)attributes 
                         flags:(LTRasterGetSetOverlayAttributesFlags)flags 
                         error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void updateOverlayAttributes(
  int index, 
  RasterOverlayAttributes attributes, 
  int flags
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            This constructor is required by <see cref="T:System.Runtime.Serialization.ISerializable" />.
            </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> class supports standard .NET serialization.  Serialization of a 
            <see cref="T:Leadtools.RasterImage" /> is the process of converting the state of a <see cref="T:Leadtools.RasterImage" /> object into a
            form that can be persisted or transported. The complement of serialization is deserialization, which converts a
            stream into an <see cref="T:Leadtools.RasterImage" /> object. Together, these processes allow the image data to be easily stored and
            transferred.</para>
        <para>When you serialize an <see cref="T:Leadtools.RasterImage" /> object, all the data inside the object are saved.  This
            includes the image data of all pages as well as the current page number, region information, low bit/high bit,
            palette data, metadata (tags, markers and comments), etc.  In other words, the <see cref="T:Leadtools.RasterImage" /> can
            be constructed back to its original state from the stream.</para>
        <para>For more information and examples regarding serialization of an <see cref="T:Leadtools.RasterImage" /> object, refer
            to <see cref="T:Leadtools.Topics.RasterImageSerialization">RasterImage Serialization</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Serialize-->
      </example>
    </member>
    <member name="M:Leadtools.RasterImage.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize this object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The contextual information about the source or destination of the serialization.</param>
      <remarks>
        <para>This method implements <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">ISerializable.GetObjectData</see>.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> class supports standard .NET serialization.  Serialization a <see cref="T:Leadtools.RasterImage" />
            is the process of converting the state of an <see cref="T:Leadtools.RasterImage" /> object into a form that can be persisted or
            transported. The complement of serialization is deserialization, which converts a stream into an <see cref="T:Leadtools.RasterImage" />
            object. Together, these processes allow the image data to be easily stored and transferred.</para>
        <para>When you serialize an <see cref="T:Leadtools.RasterImage" /> object, all the data inside the object are saved.  This
            include the image data of all pages as well as the current page number, region information, low bit/high bit,
            palette data, metadata (tags, markers and comments), etc.  In other words, the <see cref="T:Leadtools.RasterImage" /> can
            be constructed back to its original state from the stream.</para>
        <para>For more information and examples regarding serialization of an <see cref="T:Leadtools.RasterImage" /> object, refer
            to <see cref="T:Leadtools.Topics.RasterImageSerialization">RasterImage Serialization</see>.</para>
        <para>This method will use the value of <see cref="P:Leadtools.RasterDefaults.CompressOnSerialize">RasterDefaults.CompressOnSerialize</see> to determine
            whether to use compression when serializing the <see cref="T:Leadtools.RasterImage" /> object.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</example>
    </member>
    <member name="M:Leadtools.RasterImage.GetTrueColorValue(Leadtools.RasterColor)">
      <summary>
            Gets the true (RGB) value of the specified color based on the current image palette.
            </summary>
      <param name="color">a <see cref="T:Leadtools.RasterColor" /> that specifies the source color</param>
      <returns>A <see cref="T:Leadtools.RasterColor" /> that is guaranteed to be a true color (has RGB value)</returns>
      <remarks>
        <para>Use this method to translate a color that is really a palette index (the value of the <see cref="P:Leadtools.RasterColor.IsPaletteIndex">RasterColor.IsPaletteIndex</see>
            property is <strong>true</strong>) to a true RGB color value</para>
        <para>The apposite of this method is <see cref="M:Leadtools.RasterImage.TranslateColor(Leadtools.RasterImage,System.Int32)" />.</para>
      </remarks>
      <example>
        <para>This example will create transparent GIF file</para>
        <!--CreateTransparentGifExample-->
      </example>
      <seealso cref="M:Leadtools.RasterImage.TranslateColor(Leadtools.RasterImage,System.Int32)" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>-(LTRasterColor*)getTrueColorValue:(LTRasterColor*)color;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor getTrueColorValue(RasterColor color)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Create(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor)">
      <summary>
            Creates a new <strong>RasterImage</strong> using the specified parameters.
            </summary>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 16, 24, 32, 48, and 64.</para>
      </param>
      <param name="resolution">Value to be used as the x and y resolution for the image.</param>
      <param name="backgroundColor">
        <see cref="T:Leadtools.RasterColor" /> which will be used to fill the new image.</param>
      <returns>The newly created RasterImage object.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>
+(id)createColoredWithWidth:(unsigned int)inWidth
                     height:(unsigned int)inHeight
               bitsPerPixel:(unsigned int)inBitsPerPixel
                 resolution:(unsigned int)resolution
            backgroundColor:(LTRasterColor*)backgroundColor
                      error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public static RasterImage create(
  int width, 
  int height, 
  int bitsPerPixel, 
  int resolution, 
  RasterColor backgroundColor
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.CreateGrayscale(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new grayscale <strong>RasterImage</strong> using the specified parameters.
            </summary>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 8, 12, 16.</para>
      </param>
      <param name="resolution">Value to be used as the x and y resolution for the image.</param>
      <returns>The newly created grayscale RasterImage object.</returns>
      <remarks>
            For more information about creating and working with grayscale images, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.
            </remarks>
      <noexample />
      <objectivec>
        <pre>
+(id)createGrayscaleWithWidth:(unsigned int)inWidth
                       height:(unsigned int)inHeight
                 bitsPerPixel:(unsigned int)inBitsPerPixel
                   resolution:(unsigned int)resolution
                        error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public static RasterImage createGrayscale(
  int width, 
  int height, 
  int bitsPerPixel, 
  int resolution
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.Initialize(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.Create(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor)">
      <summary>
            Creates a new <strong>RasterImage</strong> using the specified parameters.
            </summary>
      <param name="grayscale">true to create the image as grayscale, false to create the image as color.</param>
      <param name="width">Width of the image in pixels.</param>
      <param name="height">Height of the image in pixels.</param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 8, 12, 16.</para>
      </param>
      <param name="resolution">Value to be used as the x and y resolution for the image.</param>
      <param name="backgroundColor">
        <see cref="T:Leadtools.RasterColor" /> which will be used to fill the new image.</param>
      <returns>The newly created <strong>RasterImage</strong> object.</returns>
      <noremarks />
      <noexample />
      <winrt />
      <java>
        <pre>
private static RasterImage create(
  boolean grayscale, 
  int width, 
  int height, 
  int bitsPerPixel, 
  int resolution, 
  RasterColor backgroundColor
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterImage.#ctor(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[])">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterImage" /> object using the specified parameters and optional managed memory.
            </summary>
      <param name="flags">
            A combination of the <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members indicating the type of memory to allocate
            for the image data.
            </param>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48, and 64.</para>
        <para>Use 0 to create an 8-bit grayscale image. In that case, the method ignores the <paramref name="order" /> and
            the <paramref name="palette" /> parameters.</para>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48- and 64-bit images.</para>
        <para>If the resultant image is less than 16 bits per pixel, this will have no effect since palletized images have
            no order.</para>
      </param>
      <param name="viewPerspective">
        <para>Specifies where the beginning of the image is stored.</para>
        <para>Most file formats start in the lower left corner while some formats start in the upper left corner.</para>
      </param>
      <param name="palette">
            The palette that the image will use. You can specify your own palette, or use null
            (Nothing in Visual Basic) for LEAD's fixed palette.  The <paramref name="palette" /> member is used only when 
            <paramref name="bitsPerPixel" /> is less than or equal to 8.
            </param>
      <remarks>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>There is some speed penalty (loss) for accessing <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images. Therefore, it is not
            recommended for use with all images.</para>
        <para>The <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images are not used by default. LEADTOOLS will create them only if it
            failed to create <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> images and <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.NoTiled</see> was not
            specified.</para>
        <para>The following lists the distinct types of bitmaps:
            <list type="bullet"><item><description>Conventional (uncompressed and contiguous) This is the most common type.</description></item><item><description>Compressed (1-bit only)</description></item><item><description>Tiled (uncompressed, stored internally as up to 64MB tiles)</description></item></list></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <winrt />
      <objectivec>
        <pre>
-(id)initWithFlags:(LTRasterMemoryFlags)flags
             width:(unsigned int)inWidth
            height:(unsigned int)inHeight
      bitsPerPixel:(unsigned int)inBitsPerPixel
             order:(LTRasterByteOrder)inOrder
   viewPerspective:(LTRasterViewPerspective)inViewPerspective
           palette:(NSArray*)palette
             error:(NSError**)outError;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterImage.CreateFromIntPtr(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],System.IntPtr,System.Int64)">
      <summary>
            Creates a new <strong>RasterImage</strong> using the specified parameters.
            </summary>
      <param name="flags">
            A combination of the <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members indicating the type of memory to allocate
            for the image data.
            </param>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48, and 64.</para>
        <para>Use 0 to create an 8-bit grayscale image. In that case, the method ignores the <paramref name="order" /> and
            the <paramref name="palette" /> parameters.</para>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48- and 64-bit images.</para>
        <para>If the resultant image is less than 16 bits per pixel, this will have no effect since palletized images have
            no order.</para>
      </param>
      <param name="viewPerspective">
        <para>Specifies where the beginning of the image is stored.</para>
        <para>Most file formats start in the lower left corner while some formats start in the upper left corner.</para>
      </param>
      <param name="palette">
            The palette that the image will use. You can specify your own palette, or use null
            (Nothing in Visual Basic) for LEAD's fixed palette.  The <paramref name="palette" /> member is used only when 
            <paramref name="bitsPerPixel" /> is less than or equal to 8.
            </param>
      <param name="userData">
        <para>Unmanaged data pointer that will contain the image data when <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.</para>
        <para>This data must be aligned on a four byte boundary. If <paramref name="userData" /> is IntPtr.Zero, the data pointer 
            must be passed later, by calling the <see cref="M:Leadtools.RasterImage.SetUserData(System.IntPtr,System.Int64)" /> method, before the image can be used.</para>
      </param>
      <param name="userDataLength">Length in bytes of the data passed to <paramref name="userData" />. Only when used when 
            <paramref name="userData" /> is not IntPtr.Zero and <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.
            </param>
      <returns>The newly created <strong>RasterImage</strong> object.</returns>
      <remarks>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>There is some speed penalty (loss) for accessing <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images. Therefore, it is not
            recommended for use with all images.</para>
        <para>The <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images are not used by default. LEADTOOLS will create them only if it
            failed to create <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> images and <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.NoTiled</see> was not
            specified.</para>
        <para>The following lists the distinct types of bitmaps:
            <list type="bullet"><item><description>Conventional (uncompressed and contiguous) This is the most common type.</description></item><item><description>Compressed (1-bit only)</description></item><item><description>Tiled (uncompressed, stored internally as up to 64MB tiles)</description></item></list></para>
        <para>If you pass <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, you are responsible for freeing the image data.</para>
        <para>Creating an image of type <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see> does not allocate memory for the image data.
            Instead, the data pointer <paramref name="userData" /> is used. When you create a <see cref="T:Leadtools.RasterImage" /> with user data, 
            the <see cref="P:Leadtools.RasterImage.IsConventionalMemory" /> and
            <see cref="P:Leadtools.RasterImage.IsMirrored" /> flags will both be set to <strong>true</strong>. Some image processing commands, such as 
            <see cref="T:Leadtools.ImageProcessing.RotateCommand" />, need to re-allocate the image data. If you
            create an image with <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, and pass it to these methods, the data will be re-allocated internally
            by LEADTOOLS and the image object will stop using the data in <paramref name="userData" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.CreateFromArray(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],System.Byte[],System.Int32)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterImage" /> object using the specified parameters and optional managed memory.
            </summary>
      <param name="flags">
            A combination of the <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members indicating the type of memory to allocate
            for the image data.
            </param>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48, and 64.</para>
        <para>Use 0 to create an 8-bit grayscale image. In that case, the method ignores the <paramref name="order" /> and
            the <paramref name="palette" /> parameters.</para>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48- and 64-bit images.</para>
        <para>If the resultant image is less than 16 bits per pixel, this will have no effect since palletized images have
            no order.</para>
      </param>
      <param name="viewPerspective">
        <para>Specifies where the beginning of the image is stored.</para>
        <para>Most file formats start in the lower left corner while some formats start in the upper left corner.</para>
      </param>
      <param name="palette">
            The palette that the image will use. You can specify your own palette, or use null
            (Nothing in Visual Basic) for LEAD's fixed palette.  The <paramref name="palette" /> member is used only when 
            <paramref name="bitsPerPixel" /> is less than or equal to 8.
            </param>
      <param name="userData">
        <para>Managed data array that will contain the image data when <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.</para>
        <para>This data must be aligned on a four byte boundary. If <paramref name="userData" /> is null (Nothing in Visual Basic), the data pointer 
            must be passed later, by calling the <see cref="M:Leadtools.RasterImage.SetUserData(System.IntPtr,System.Int64)" /> method, before the image can be used.</para>
      </param>
      <param name="userDataLength">Length in bytes of the data passed to <paramref name="userData" />. Only when used when 
            <paramref name="userData" /> is not null and <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.
            </param>
      <remarks>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>There is some speed penalty (loss) for accessing <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images. Therefore, it is not
            recommended for use with all images.</para>
        <para>The <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images are not used by default. LEADTOOLS will create them only if it
            failed to create <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> images and <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.NoTiled</see> was not
            specified.</para>
        <para>The following lists the distinct types of bitmaps:
            <list type="bullet"><item><description>Conventional (uncompressed and contiguous) This is the most common type.</description></item><item><description>Compressed (1-bit only)</description></item><item><description>Tiled (uncompressed, stored internally as up to 64MB tiles)</description></item></list></para>
        <para>Creating an image of type <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see> does not allocate memory for the image data.
            Instead, the data pointer <paramref name="userData" /> is used. When you create a <see cref="T:Leadtools.RasterImage" /> with user data, the <see cref="P:Leadtools.RasterImage.IsConventionalMemory" /> and
            <see cref="P:Leadtools.RasterImage.IsMirrored" /> flags will both be set to <strong>true</strong>. Some image processing commands, such as <see cref="T:Leadtools.ImageProcessing.RotateCommand" />, need to re-allocate the image data. If you
            create an image with <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, and pass it to these methods, the data will be re-allocated internally
            by LEADTOOLS and the image object will stop using the data in <paramref name="userData" />.</para>
        <para>
          <strong>Important:</strong> The above discussion is valid only for the LEADTOOLS Silverlight toolkit. LEADTOOLS for .NET does not support
            user memory of type array of <see cref="T:System.Byte" />. Instead, calling this method in LEADTOOLS for .NET will create a regular conventional 
            memory image then copy the data passed through <paramref name="userData" /> to the internal image data. <paramref name="userData" /> will
            not be used after this method returns. To create a true user-memory raster images in LEADTOOLS for .NET, use the
            <see cref="M:Leadtools.RasterImage.#ctor(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],System.IntPtr,System.Int64)">RasterImage(..., IntPtr userData, ...)</see> constructor.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.CreateFromBuffer(Leadtools.RasterMemoryFlags,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,Leadtools.RasterColor[],Leadtools.Junk.IBuffer,System.Int32)">
      <summary>
            Creates a new <strong>RasterImage</strong> using the specified parameters.
            </summary>
      <param name="flags">
            A combination of the <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members indicating the type of memory to allocate
            for the image data.
            </param>
      <param name="width">
            Width of the image in pixels.
            </param>
      <param name="height">
            Height of the image in pixels.
            </param>
      <param name="bitsPerPixel">
        <para>The number of bits per pixel.</para>
        <para>Valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48, and 64.</para>
        <para>Use 0 to create an 8-bit grayscale image. In that case, the method ignores the <paramref name="order" /> and
            the <paramref name="palette" /> parameters.</para>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48- and 64-bit images.</para>
        <para>If the resultant image is less than 16 bits per pixel, this will have no effect since palletized images have
            no order.</para>
      </param>
      <param name="viewPerspective">
        <para>Specifies where the beginning of the image is stored.</para>
        <para>Most file formats start in the lower left corner while some formats start in the upper left corner.</para>
      </param>
      <param name="palette">
            The palette that the image will use. You can specify your own palette, or use null
            (Nothing in Visual Basic) for LEAD's fixed palette.  The <paramref name="palette" /> member is used only when 
            <paramref name="bitsPerPixel" /> is less than or equal to 8.
            </param>
      <param name="userData">
        <para>Unmanaged data buffer that will contain the image data when <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.</para>
        <para>This data must be aligned on a four byte boundary. If <paramref name="userData" /> is null, the data buffer 
            must be passed later, by calling the <see cref="M:Leadtools.RasterImage.SetUserData(System.IntPtr,System.Int64)" /> method, before the image can be used.</para>
      </param>
      <param name="userDataLength">Length in bytes of the data passed to <paramref name="userData" />. Only when used when 
            <paramref name="userData" /> is not null and <paramref name="flags" /> is <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>.
            </param>
      <returns>The newly created <strong>RasterImage</strong> object.</returns>
      <remarks>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>There is some speed penalty (loss) for accessing <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images. Therefore, it is not
            recommended for use with all images.</para>
        <para>The <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Tiled</see> images are not used by default. LEADTOOLS will create them only if it
            failed to create <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.Conventional</see> images and <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.NoTiled</see> was not
            specified.</para>
        <para>The distinct types of bitmaps are as follows:
            <list type="bullet"><item><description>Conventional (uncompressed and contiguous) This is the most common type.</description></item><item><description>Compressed (1-bit only)</description></item><item><description>Tiled (uncompressed, stored internally as up to 64MB tiles)</description></item></list></para>
        <para>If you pass <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, you are responsible for freeing the image data.</para>
        <para>Creating an image of type <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see> does not allocate memory for the image data.
            Instead, the data pointer <paramref name="userData" /> is used. When you create a <see cref="T:Leadtools.RasterImage" /> with user data, the <see cref="P:Leadtools.RasterImage.IsConventionalMemory" /> and
            <see cref="P:Leadtools.RasterImage.IsMirrored" /> flags will both be set to <strong>true</strong>. Some image processing commands, such as <see cref="T:Leadtools.ImageProcessing.RotateCommand" />, need to re-allocate the image data. If you
            create an image with <see cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.User</see>, and pass it to these methods, the data will be re-allocated internally
            by LEADTOOLS and the image object will stop using the data in <paramref name="userData" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.CreateFromBitmapHandle(System.IntPtr,System.Boolean)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.CreateFromBitmapHandle(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.InitFromBitmapHandle(System.IntPtr,System.Boolean)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.InitFromBitmapHandle(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.CreateFromBitmapList(System.IntPtr,System.Boolean)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.CreateFromBitmapList(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.UpdateCurrentBitmapHandle">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.GetBitmapHandle(System.IntPtr,System.Int32)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.UpdateBitmapHandle(System.IntPtr,System.Int32)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.AccessData">
      <summary>
            Provides exclusive access to the image data contained in this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <remarks>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> object is stored in a global Windows handle, then use the
            <see cref="M:Leadtools.RasterImage.AccessData" /> method to lock the memory. If you do not call this method before accessing the data with a low-level
            method like <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /> or <see cref="M:Leadtools.RasterImage.SetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" />the application might fail.</para>
        <para>To make the most of available system resources, you should only keep a <see cref="T:Leadtools.RasterImage" /> object locked when
            you need to access the image data. Call <see cref="M:Leadtools.RasterImage.Release" /> to unlock the image data for more efficient use of
            system memory resources.</para>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> is not stored in a global Windows handle, then this method
            will do nothing and calling it will not have any effect on the <see cref="T:Leadtools.RasterImage" />.</para>
        <para>Use <see cref="P:Leadtools.RasterImage.IsGlobalMemory" /> to determine whether the image data of this <see cref="T:Leadtools.RasterImage" /> is stored
            in a global Windows handle.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.ReleaseData">
      <summary>
            Releases memory locked with <see cref="M:Leadtools.RasterImage.AccessData" /> back to the system.
            </summary>
      <remarks>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> object is stored in a global Windows handle, then use the
            <see cref="M:Leadtools.RasterImage.ReleaseData" /> method along with <see cref="M:Leadtools.RasterImage.AccessData" /> to control the access to image data in memory. Any attempt
            to access the image data after calling <see cref="M:Leadtools.RasterImage.ReleaseData" /> will result in an application error.</para>
        <para>To make the most of available system resources, you should only keep a <see cref="T:Leadtools.RasterImage" /> object locked when
            you need to access the image data. Call <see cref="M:Leadtools.RasterImage.ReleaseData" /> to unlock the image data for more efficient use of
            system memory resources.</para>
        <para>You should call this method whenever the image is not used, so that Windows can manage its memory properly.</para>
        <para>If the image data of this <see cref="T:Leadtools.RasterImage" /> is not stored in a global Windows handle, then this method
            will do nothing and calling it will not have any effect on the <see cref="T:Leadtools.RasterImage" />.</para>
        <para>Use <see cref="P:Leadtools.RasterImage.IsGlobalMemory" /> to determine if the image data of this <see cref="T:Leadtools.RasterImage" /> is stored
            in a global Windows handle or not.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.GetRow(System.Int32,Leadtools.Junk.WriteOnlyArray{System.Byte},System.Int32,System.Int32)">
      <summary>
            Retrieves one or more rows of image data from this <see cref="T:Leadtools.RasterImage" /> into a managed memory buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the
            image height.</param>
      <param name="buffer">Buffer to hold the image data that this method gets.  The size of this buffer must be large
            enough to hold the image data.</param>
      <param name="bufferIndex">The zero-based index into the <paramref name="buffer" /> where the get operation should start.</param>
      <param name="bufferCount">
        <para>The number of bytes in the row to retrieve. To get a full row, use the value in the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property</para>
        <para>When getting less than full row, you must consider the bits per pixel. For a 1-bit image, each byte represents 8
            pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit image, each byte represents 1 pixel. For a 16-bit image,
            every 2 bytes represents one pixel. For 24-bit images, every three bytes represents one pixel. For a 32-bit image,
            every four bytes represents one pixel. For 48-bit images, every six bytes represents one pixel. For 64-bit images,
            every eight bytes represents one pixel.</para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed for a
            particular number of pixels. For example:</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>
            This method copies image data from the <see cref="T:Leadtools.RasterImage" /> object to a buffer that you specify. The data is copied exactly as it is stored in the image.
            </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>
          <strong>Note</strong>: The data in the buffer will be padded to <see cref="P:Leadtools.RasterImage.BytesPerLine" />.</para>
        <para>Use the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property of the <see cref="T:Leadtools.RasterImage" /> object to determine the byte count of
            each line. Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property. This value can be
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images. Support for
            12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
      </remarks>
      <example>
            This example uses Get/SetRow to flip the image data.
            <!--RasterImage.GetRow--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.GetRow(System.Int32,Leadtools.Junk.IBuffer,System.Int32,System.Int32)">
      <summary>
            Retrieves one or more rows of image data from this <see cref="T:Leadtools.RasterImage" /> into a managed memory buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the
            image height.</param>
      <param name="buffer">Buffer to hold the image data that this method gets.  The size of this buffer must be large
            enough to hold the image data.</param>
      <param name="bufferIndex">The zero-based index into the <paramref name="buffer" /> where the get operation should start.</param>
      <param name="bufferCount">
        <para>The number of bytes in the row to retrieve. To get a full row, use the value in the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property</para>
        <para>When getting less than full row, you must consider the bits per pixel. For a 1-bit image, each byte represents 8
            pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit image, each byte represents 1 pixel. For a 16-bit image,
            every 2 bytes represents one pixel. For 24-bit images, every three bytes represents one pixel. For a 32-bit image,
            every four bytes represents one pixel. For 48-bit images, every six bytes represents one pixel. For 64-bit images,
            every eight bytes represents one pixel.</para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed for a
            particular number of pixels. For example:</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>
            This method copies image data from the <see cref="T:Leadtools.RasterImage" /> object to a buffer that you specify. The data is copied exactly as it is stored in the image.
            </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>
          <strong>Note</strong>: The data in the buffer will be padded to <see cref="P:Leadtools.RasterImage.BytesPerLine" />.</para>
        <para>Use the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property of the <see cref="T:Leadtools.RasterImage" /> object to determine the byte count of
            each line. Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property. This value can be
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images. Support for
            12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
      </remarks>
      <example>
            This example uses Get/SetRow to flip the image data.
            <!--RasterImage.GetRow--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.SetRow(System.Int32,Leadtools.Junk.IBuffer,System.Int32,System.Int32)">
      <summary>
            Copies one or more rows of image data to this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="buffer">Buffer containing the image data. The data is copied exactly as it is stored in the buffer. The buffer
            should contain uncompressed data regardless of whether the image is compressed or not.</param>
      <param name="bufferIndex">The zero-based index into the <paramref name="buffer" /> where the set operation should start.</param>
      <param name="bufferCount">Number of bytes to set. Use the <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property of this
            <see cref="T:Leadtools.RasterImage" /> to determine the byte count of each line.</param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>You can use the <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property of the image to determine the number of bytes to set the
            <paramref name="bufferCount" /> parameter. If the image is 8-bit then each byte is an index to the palette. If the image is
            a 24-bit image, then each three bytes represents one pixel element. Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" />
            property of the <see cref="T:Leadtools.RasterImage" /> object. This value can be
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <strong>Note</strong>: To calculate the correct size for a single row of image data:
            WinRT
            (((Width * BitsPerPixel) + 31) &gt;&gt; 3)) ~3
            </para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.GetRowColumn(System.Int32,System.Int32,Leadtools.Junk.WriteOnlyArray{System.Byte},System.Int32,System.Int32)">
      <summary>
            Accepts a column offset to retrieve data from an image and place it in a buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column offset
            is 1 less than the image width</param>
      <param name="buffer">Buffer to hold the image data that this method gets. The buffer will be filled with uncompressed data.</param>
      <param name="bufferIndex">0-based index into the output buffer. This is the start location of output data.</param>
      <param name="bufferCount">
        <para>The number of bytes to retrieve. Consider the bits per pixel, and avoid specifying a number that goes past the end of
            the row.</para>
        <para>For a 1-bit image, each byte represents 8 pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit
            image, each byte represents 1 pixel. For a 16-bit image, every 2 bytes represents one pixel. For 24-bit images, every
            three bytes represents one pixel. For a 32-bit image, every four bytes represents one pixel. For 48-bit images, every six
            bytes represents one pixel. For 64-bit images, every eight bytes represents one pixel.</para>
        <para>You can use the image <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed
            for a particular number of pixels. For example</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>By using this low-level method to get any part of a row, you can write a procedure that accesses a single pixel or a
            rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length
            (<paramref name="bufferCount" />) in bytes. Therefore, you must consider the bits per pixel of the image when specifying
            these parameters. The rules are listed in the following table:</para>
        <para>
          <table>
            <tr>
              <th>Bits Per Pixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0, 8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property of the <see cref="T:Leadtools.RasterImage" /> object. This value
            can be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example is designed to work with images that have a bottom-left or top-left view perspective. 
            This example uses GetRowColumn and <see cref="M:Leadtools.RasterImage.SetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" /> to invert the colors of a rectangle in the upper 
            left part of the displayed image.
            <!--RasterImage.GetRowColumn--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.GetRowColumn(System.Int32,System.Int32,Leadtools.Junk.IBuffer,System.Int32,System.Int32)">
      <summary>
            Accepts a column offset to retrieve data from an image and place it in a buffer.
            </summary>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column offset
            is 1 less than the image width</param>
      <param name="buffer">Buffer to hold the image data that this method gets. The buffer will be filled with uncompressed data.</param>
      <param name="bufferIndex">0-based index into the output buffer. This is the start location of output data.</param>
      <param name="bufferCount">
        <para>The number of bytes to retrieve. Consider the bits per pixel, and avoid specifying a number that goes past the end of
            the row.</para>
        <para>For a 1-bit image, each byte represents 8 pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit
            image, each byte represents 1 pixel. For a 16-bit image, every 2 bytes represents one pixel. For 24-bit images, every
            three bytes represents one pixel. For a 32-bit image, every four bytes represents one pixel. For 48-bit images, every six
            bytes represents one pixel. For 64-bit images, every eight bytes represents one pixel.</para>
        <para>You can use the image <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> property with integer math to calculate the number of bytes needed
            for a particular number of pixels. For example</para>
        <para>
          <code>
            NumberOfBytes = (Image.BitsPerPixel * NumberOfPixels) / 8;
            if((Image.BitsPerPixel * NumberOfPixels) % 8)
               NumberOfBytes = NumberOfBytes + 1; // Round up if necessary for a 1- or 4-bit image
            </code>
        </para>
      </param>
      <returns>The number of bytes copied.</returns>
      <remarks>
        <para>By using this low-level method to get any part of a row, you can write a procedure that accesses a single pixel or a
            rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length
            (<paramref name="bufferCount" />) in bytes. Therefore, you must consider the bits per pixel of the image when specifying
            these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>Bits Per Pixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0, 8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property of the <see cref="T:Leadtools.RasterImage" /> object. This value
            can be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>
            This example is designed to work with images that have a bottom-left or top-left view perspective. 
            This example uses GetRowColumn and <see cref="M:Leadtools.RasterImage.SetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" /> to invert the colors of a rectangle in the upper 
            left part of the displayed image.
            <!--RasterImage.GetRowColumn--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.SetRowColumn(System.Int32,System.Int32,Leadtools.Junk.IBuffer,System.Int32,System.Int32)">
      <summary>
            Copies data from a buffer into an image, with an offset to the image.
            </summary>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to update. The first column offset is 0, and the last column offset
            is 1 less than the image width.</param>
      <param name="buffer">Buffer containing the image data. The buffer should contain uncompressed data regardless of whether
            the image is compressed or not.</param>
      <param name="bufferIndex">0-based index into the output buffer. This is the start location of input data.</param>
      <param name="bufferCount">
        <para>The number of bytes to update. Consider the bits per pixel, and avoid specifying a number that goes past the end
            of the row.</para>
        <para>For a 1-bit image, each byte represents 8 pixels. For a 4-bit image, each byte represents 2 pixels. For an 8-bit image,
            each byte represents 1 pixel. For a 16-bit image, every 2 bytes represents one pixel. For 24-bit images, every three bytes
            represents one pixel. For a 32-bit image, every four bytes represents one pixel. For a 48-bit image, every six bytes
            represents one pixel. For a 64-bit image, every eight bytes represents one pixel.</para>
      </param>
      <returns>The number of bytes put.</returns>
      <remarks>
        <para>By using this low-level method to update any part of a row, you can write a procedure that updates a single pixel or a
            rectangular area within the image.</para>
        <para>This method accepts an offset parameter (<paramref name="column" />) in pixels and a length
            (<paramref name="bufferCount" />) in bytes. Therefore, you must consider the bits per pixel of the image when specifying
            these parameters. The following table describes the rules:</para>
        <para>
          <table>
            <tr>
              <th>Bits Per Pixel</th>
              <th>Column Offset (in Pixels)</th>
              <th>Bytes to Get</th>
            </tr>
            <tr>
              <td>1</td>
              <td>Must be a multiple of 8 (such as 0, 8, or 16).</td>
              <td>Can be any number up to the end of the row. Consider that there are 8 pixels per byte.</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Must be an even number (such as 0, 2, or 4).</td>
              <td>Can be any number up to the end of the row. Consider that there are 2 pixels per byte.</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Can be any column within the image.</td>
              <td>Can be any number up to the end of the row. Consider that there is 1 pixel per byte.</td>
            </tr>
            <tr>
              <td>16</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 2 (such as 2, 4, or 6), because there are 2 bytes per pixel.</td>
            </tr>
            <tr>
              <td>24</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 3 (such as 3, 6, or 9), because there are 3 bytes per pixel.</td>
            </tr>
            <tr>
              <td>32</td>
              <td>Can be any column within the image.</td>
              <td>Must be a multiple of 4 (such as 4, 8, or 12), because there are 4 bytes per pixel.</td>
            </tr>
          </table>
        </para>
        <para>
            The image memory must be locked when you use this method. Normally, you can call <see cref="M:Leadtools.RasterImage.Access" /> to lock the memory before starting an operation that uses this method. Then call <see cref="M:Leadtools.RasterImage.Release" /> when the operation is finished.
            </para>
        <para>Color order is determined by the <see cref="P:Leadtools.RasterImage.Order" /> property of the <see cref="T:Leadtools.RasterImage" /> object. This value
            can be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>, <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>,
            or <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see>.</para>
        <para>
          <strong>Note</strong>: To calculate the correct size for a single row of image data:
            WinRT
            (((Width * BitsPerPixel) + 31) &gt;&gt; 3)) ~3
            </para>
        <para>
          <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowColumn(System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.GetRowColumnCompressed(Leadtools.Junk.WriteOnlyArray{System.Byte},Leadtools.Junk.WriteOnlyArray{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Retrieves a row (or part of a row) of 1-bit compressed data from an image that has been loaded in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you call this method
            more than once, because if you do not allocate a work buffer, the method allocates and frees a
            temporary buffer each time it is called. The size of this buffer should be the same as the
            <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass a null reference (Nothing in Visual Basic) to <paramref name="runBuffer" />
            if you do not want to use a work buffer.</param>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.
            Calculate the required size of this buffer as follows: bytes required = (<see cref="P:Leadtools.RasterImage.Width" /> + 3) * 2.</param>
      <param name="runBufferOffset">Index into <paramref name="runBuffer" /> where the get operation should start.</param>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image
            height.</param>
      <param name="column">The column offset within the row to retrieve. The first column offset is 0, and the last column
            offset is 1 less than the image width.</param>
      <param name="width">The number of pixels to retrieve.</param>
      <returns>The number of pixels processed.</returns>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see>.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for
            faster loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>
            This example demonstrates the low-level methods for accessing 1-bit compressed bitmap data. 
            It demonstrates the ability to get and set partial rows, and the ability to process partial rows 
            in buffer-to-buffer processing. The result of the method is an inverted rectangle in the middle of the image.
            <!--RasterImage.GetRowColumnCompressed--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.GetRowCompressed(Leadtools.Junk.WriteOnlyArray{System.Byte},Leadtools.Junk.WriteOnlyArray{System.UInt16},System.Int32,System.Int32,System.Int32)">
      <summary>
            Retrieves one or more rows of 1-bit compressed data from an image that has been loaded in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you call this method
            more than once, because if you do not allocate a work buffer, the method allocates and frees a
            temporary buffer each time it is called. bytes required = <paramref name="lines" /> * ((<see cref="P:Leadtools.RasterImage.Width" /> + 3) * 2).
            Pass a null reference (Nothing in Visual Basic) to <paramref name="runBuffer" /> if you do not want to use a work buffer.</param>
      <param name="runBuffer">The output buffer, which will be filled with 1-bit compressed image data.</param>
      <param name="runBufferOffset">Offset into <paramref name="runBuffer" /> where the copy operation should start.</param>
      <param name="row">The number of the row to retrieve. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="lines">Number of rows to retrieve.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for faster
            loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>
            This example demonstrates the low-level methods for accessing 1-bit compressed image data. 
            It demonstrates the ability to get and put rows, and the ability to process rows in 
            buffer-to-buffer processing. The result of the function is an the first 50 lines are inverted.
            <!--RasterImage.GetRowCompressed--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.SetRowColumnCompressed(Leadtools.Junk.WriteOnlyArray{System.Byte},System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Puts a row (or part of a row) of 1-bit compressed data from a buffer into an image that is maintained in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you
            call this method more than once, because if you do not allocate a work buffer, the method 
            allocates and frees a temporary buffer each time it is called. The size of this buffer should 
            be the same as the image's <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass a null reference (Nothing in Visual Basic)
            to <paramref name="runBuffer" /> if you do not want to use a work buffer.</param>
      <param name="runBuffer">Input buffer, which contains 1-bit compressed image data.</param>
      <param name="runBufferOffset">Offset into <paramref name="runBuffer" /> where the set operation should start.</param>
      <param name="row">The number of the row to update. The first row is 0, and the last row is 1 less than the image height.</param>
      <param name="column">The column offset within the row to update. The first column offset is 0, and the last column
            offset is 1 less than the image width.</param>
      <param name="width">The number of pixels to retrieve.</param>
      <returns>The number of pixels processed.</returns>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats for faster
            loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowColumnCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.SetRowCompressed(Leadtools.Junk.WriteOnlyArray{System.Byte},System.UInt16[],System.Int32,System.Int32,System.Int32)">
      <summary>
            Puts one or more rows of 1-bit compressed data from a buffer into an image that is maintained in its compressed format.
            </summary>
      <param name="workBuffer">Optional work buffer. Allocating the work buffer speeds processing if you 
            call this method more than once, because if you do not allocate a work buffer, the method 
            allocates and frees a temporary buffer each time it is called. The size of this buffer should 
            be the same as the image's <see cref="P:Leadtools.RasterImage.BytesPerLine" /> property. Pass a null reference (Nothing in Visual Basic)
            to <paramref name="runBuffer" /> if you do not want to use a work buffer.</param>
      <param name="runBuffer">Input buffer, which contains 1-bit compressed image data.</param>
      <param name="runBufferOffset">Offset into <paramref name="runBuffer" /> where the set operation should start.</param>
      <param name="row">Number of the first row to update.</param>
      <param name="lines">Number of rows to update.</param>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method is useful for working with 1-bit images that are loaded in their compressed formats 
            for faster loading and display.</para>
        <para>For more information, refer to <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRowCompressed(System.Byte[],System.UInt16[],System.Int32,System.Int32,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.CopyData(Leadtools.Junk.IBuffer,System.Int32)">
      <summary>
            Updates the data of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <param name="data">Buffer containing the image new data.</param>
      <param name="dataOffset">Offset into <paramref name="data" /> where the copy operation should begin.</param>
      <remarks>
        <para>The byte array that you specify will be copied.</para>
        <para>The data is copied as is into the internal memory of this <see cref="T:Leadtools.RasterImage" />.</para>
      </remarks>
      <example>
        <!--RasterImage.CopyData-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.FromDib(Leadtools.Junk.IBuffer,System.Int32)">
      <summary>
            Creates a new image from the specified Windows device independent bitmap (DIB) stored in a managed array.
            </summary>
      <param name="hdib">Data containing the Windows DIB.</param>
      <param name="offset">Byte offset into <paramref name="hdib" /> where the data starts.</param>
      <returns>The newly created <see cref="T:Leadtools.RasterImage" /> object.</returns>
      <remarks>
        <para> When this method is completed, there are two copies of the image in memory: the original DIB and the
            <see cref="T:Leadtools.RasterImage" /> it creates. Freeing one will not affect the other.</para>
        <para>This method supports the standard DIB formats (BI_RGB and BI_BITFIELDS) as well as some FOURCC (Four Character Code)
            formats that some capture cards output.</para>
        <para>These are the FOURCC that LEADTOOLS supports at the moment:</para>
        <para>YVU9 (YUV9), I420 (YUV12), YUV2 , YV12 , IF09 , IYUV , UYVY , cyuv, YUY2, YVYU, Y41P, Y211, Y41T, Y42T.</para>
        <para>
            This method does not support signed images.
            </para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.UsingDibsDdbsAndTheClipboard">Using DIBs, DDBs, and the Clipboard</see>.</para>
      </remarks>
      <noexample />
      <winrt />
      <objectivec>
        <pre>+(LTRasterImage*)fromDib:(LTHandle*)dib error:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterImage.ToDib_WinRT(Leadtools.RasterConvertToDibType)">
      <summary>
            Gets an unmanaged pointer containing a Windows device independent bitmap (DIB) version of this image.
            </summary>
      <param name="type">Type of DIB to create.</param>
      <returns>A handle to the Windows DIB.</returns>
      <br />
      <remarks>
        <para>When this method is completed, there are two copies of the image in memory: the DIB and the original
            <see cref="T:Leadtools.RasterImage" />. Freeing one will not affect the other.</para>
        <para>This methods allocates a DIB bitmap and copies the <see cref="T:Leadtools.RasterImage" /> to the DIB.</para>
        <para>
          <strong>NOTE:</strong> This method returns the data in an unmanaged buffer. The caller is responsible for freeing the DIB's IntPtr when it is no longer needed. 
            You can use <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">Marshal.FreeHGlobal</see>.</para>
        <para>A DIB consists of one of the following:</para>
        <para>
          <list type="bullet">
            <item>
              <description>a BITMAPFILEHEADER</description>
            </item>
            <item>
              <description>a BITMAPV4HEADER(introduced in Windows 95 and Windows NT 4.0)</description>
            </item>
            <item>
              <description>or a BITMAPV5HEADER (introduced in Windows 2000 and Windows 98)</description>
            </item>
          </list>
        </para>
        <para>followed by a color table and then the bitmap data. The resulting DIB type is determined by the value of the
            <paramref name="type" /> parameter.</para>
        <para>The orientation of the image and color order will depend on how the image was loaded into the
            <see cref="T:Leadtools.RasterImage" />.</para>
        <para>When you no longer need the DIB, you must free it.</para>
        <para>For more information on DDBs and DIBs, refer to <see cref="T:Leadtools.Topics.IntroductionDIBsDDBsAndTheClipboard">Introduction: DIBs, DDBs, and the Clipboard</see>.</para>
        <para>This function does not support signed images.</para>
      </remarks>
      <seealso cref="M:Leadtools.RasterImage.FromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.RasterImage.FromDibArray(System.Byte[],System.Int32)" />
      <seealso cref="M:Leadtools.RasterImage.ToDibArray(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.FromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.FromHBitmap</seealso>
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ToHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeFromDib(System.IntPtr)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeFromHBitmap(System.IntPtr,System.IntPtr,System.IntPtr)">RasterImageConverter.ChangeFromHBitmap</seealso>
      <seealso cref="M:Leadtools.RasterImage.ChangeToDib(Leadtools.RasterConvertToDibType)" />
      <seealso cref="M:Leadtools.Drawing.RasterImageConverter.ChangeToHBitmap(Leadtools.RasterImage,System.IntPtr)">RasterImageConverter.ChangeToHBitmap</seealso>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterImage.AddPolygonToRegion(Leadtools.RasterRegionXForm,Leadtools.Junk.IVector{Leadtools.LeadPoint},Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)">
      <summary>
            Creates or updates the image region by adding a polygonal region.
            </summary>
      <param name="xform">
        <see cref="T:Leadtools.RasterRegionXForm" /> object that LEADTOOLS uses to translate
            between display coordinates and image coordinates. If you specify null (Nothing in Visual Basic) in this parameter,
            the scalar fields default to 1, the offsets default to 0, and the view perspective defaults
            to the image view perspective.</param>
      <param name="pts">Array of <see cref="T:Leadtools.LeadPoint" /> objects. The points in the array must be in the order in which
            the vertices of the polygon are connected. To create the line that closes the polygon,
            the last point in the array is connected to the first point of the array.</param>
      <param name="fillMode">
        <para>Indicates how to handle complex crossing lines.</para>
        <para>
          <table>
            <tr>
              <th>Value</th>
              <th>Meaning</th>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Winding</see>
              </td>
              <td>All pixels that are inside the resulting exterior lines are in the region.</td>
            </tr>
            <tr>
              <td>
                <see cref="T:Leadtools.LeadFillMode">LeadFillMode.Alternate</see>
              </td>
              <td>The region includes the area between odd-numbered and even-numbered polygon sides on each scan line.</td>
            </tr>
          </table>
          <para>
            <img src="FillMode.gif" title="Fill Mode" />
          </para>
        </para>
      </param>
      <param name="combineMode">The action to take regarding the existing image region, if one is defined.</param>
      <remarks>
        <para>To update an existing region, you specify how the new region is to be combined with the existing one using the
            <paramref name="combineMode" /> parameter.  For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
            This example will load an image, add a polygon region to it, and run the <see cref="T:Leadtools.ImageProcessing.Color.InvertCommand">InvertCommand</see> to show the affected area before saving the image back to disk.
            <!--RasterImage.AddPolygonToRegion--></example>
    </member>
    <member name="F:Leadtools.RasterImage.RasterImageDataFormat">
      <summary>
            Get the name of the data format used when copying a raster image to the clipboard
            </summary>
      <value>
            A string containing the data format used when copying a raster image to the clipboard.
            </value>
      <remarks>
        <para>This property returns the following: "Leadtools.RasterImage MAJOR_VERSION.MINOR_VERSION". For example, for LEADTOOLS v19.0, this
            property will return "Leadtools.RasterImage 19.0".</para>
      </remarks>
      <noexample />
    </member>
    <member name="E:Leadtools.RasterImage.Changed">
      <summary>
            Occurs when the image data or attributes has changed.
            </summary>
      <event>
            The event handler receives an argument of type <see cref="T:Leadtools.RasterImageChangedEventArgs" /> containing data related to this
            event.
            </event>
      <remarks>
        <para>When the data or attributes of a <see cref="T:Leadtools.RasterImage" /> object changes, the <see cref="E:Leadtools.RasterImage.Changed" /> event is fired
            with information of what has changed.  For example, you can subscribe to this event to get notified when the
            <see cref="T:Leadtools.RasterImage" /> object has been changed and need to be updated in your user interface by re-painting it.</para>
        <para>For more information, refer to <see cref="T:Leadtools.RasterImageChangedEventArgs" />.</para>
      </remarks>
      <example>
        <!--RasterImage.Changed-->
      </example>
      <objectivec>
        <pre>
NSNotification
    name:LTRasterImageChangedNotification
  object:self
userInfo:NSDictionary
         key:LTRasterImageChangedNotification_flags obj:LTRasterImageChangedFlags (Number)            </pre>
      </objectivec>
      <java>
        <pre>
synchronized public void addChangedListener(RasterImageChangedListener listener)
synchronized public void removeChangedListener(RasterImageChangedListener listener)            </pre>
      </java>
    </member>
    <member name="E:Leadtools.RasterImage.PagesChanged">
      <summary>
            Occurs when pages are added, inserted or removed from this <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <event>
            The event handler receives an argument of type <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" /> containing data related to this
            event.
            </event>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImagePagesChangedEventArgs" />.</example>
      <objectivec>
        <pre>
NSNotification
    name:LTRasterImagePagesChangedNotification
  object:self
userInfo:NSDictionary
         key:LTRasterImagePagesChangedNotification_action obj:LTRasterImagePagesChangedAction (Number)
         key:LTRasterImagePagesChangedNotification_startIndex obj:StartIndex (Number)
         key:LTRasterImagePagesChangedNotification_count obj:Count (Number)            </pre>
      </objectivec>
      <java>
        <pre>
synchronized public void addPageChangedListener(RasterImagePagesChangedListener listener)
synchronized public void removePageChangedListener(RasterImagePagesChangedListener listener)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.PageCount">
      <summary>
            Gets the total number of pages in the this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <value>
            The total number of pages in the this <see cref="T:Leadtools.RasterImage" />.
            </value>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.Page" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int pageCount;</pre>
      </objectivec>
      <java>
        <pre>public int getPageCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Page">
      <summary>
            Gets or sets the current active page for this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <value>
            The 1-based index of the current page for this <see cref="T:Leadtools.RasterImage" />.
            </value>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> object can hold multiple pages with different sizes.  The
            <see cref="M:Leadtools.RasterImage.AddPage(Leadtools.RasterImage)" />, <see cref="M:Leadtools.RasterImage.AddPages(Leadtools.RasterImage,System.Int32,System.Int32)" />, <see cref="M:Leadtools.RasterImage.InsertPage(System.Int32,Leadtools.RasterImage)" /> and
            <see cref="M:Leadtools.RasterImage.InsertPages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" /> methods allows adding new pages to an existing <see cref="T:Leadtools.RasterImage" />.</para>
        <para>The <see cref="M:Leadtools.RasterImage.RemovePageAt(System.Int32)" />, <see cref="M:Leadtools.RasterImage.RemovePages(System.Int32,System.Int32)" /> and
            <see cref="M:Leadtools.RasterImage.RemoveAllPages" /> methods allows removing existing pages from a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="M:Leadtools.RasterImage.ReplacePage(System.Int32,Leadtools.RasterImage)" /> and <see cref="M:Leadtools.RasterImage.ReplacePages(System.Int32,Leadtools.RasterImage,System.Int32,System.Int32)" />
            methods allows replace existing pages in a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>The <see cref="P:Leadtools.RasterImage.PageCount" /> property holds the total number of pages in a <see cref="T:Leadtools.RasterImage" /> object while
            the <see cref="P:Leadtools.RasterImage.Page" /> property allows you to change the current active page.</para>
        <para>The current active page (The page indicated by the <see cref="P:Leadtools.RasterImage.Page" /> property) is used by default when
            accessing the data of a <see cref="T:Leadtools.RasterImage" /> object unless otherwise indicated.</para>
      </remarks>
      <example>
            This example demonstrates how to deal with multi-page <see cref="T:Leadtools.RasterImage" /> objects.
            <!--RasterImage.Page--></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int page;</pre>
      </objectivec>
      <java>
        <pre>
public int getPage()
public void setPage(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Width">
      <summary>
            Gets the width of this <see cref="T:Leadtools.RasterImage" /> in pixels.
            </summary>
      <value>The width of this <see cref="T:Leadtools.RasterImage" /> in pixels.</value>
      <remarks>
        <para>This is the actual width of the image data scanline.</para>
        <para>Use <see cref="P:Leadtools.RasterImage.ImageWidth" /> to get the width of the image taking the <see cref="P:Leadtools.RasterImage.ViewPerspective" /> into account. For
            more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting For View Perspective</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>public int getWidth()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Height">
      <summary>
            Gets the height of this <see cref="T:Leadtools.RasterImage" /> in pixels.
            </summary>
      <value>The height of this <see cref="T:Leadtools.RasterImage" /> in pixels.</value>
      <remarks>
        <para>This is the actual number of scanlines of image data.</para>
        <para>Use <see cref="P:Leadtools.RasterImage.ImageHeight" /> to get the height of the image taking the <see cref="P:Leadtools.RasterImage.ViewPerspective" /> into account. For
            more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting For View Perspective</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>public int getHeight()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.ImageWidth">
      <summary>
            Gets the width of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> into account.
            </summary>
      <value>The width of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> into account.</value>
      <remarks>
        <para>Use <see cref="P:Leadtools.RasterImage.Width" /> to get the actual width of the image data scanlines.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting For View Perspective</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int imageWidth;</pre>
      </objectivec>
      <java>
        <pre>public int getImageWidth()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.ImageHeight">
      <summary>
            Gets the height of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> into account.
            </summary>
      <value>The height of this <see cref="T:Leadtools.RasterImage" /> in pixels, taking <see cref="P:Leadtools.RasterImage.ViewPerspective" /> into account.</value>
      <remarks>
        <para>Use <see cref="P:Leadtools.RasterImage.Height" /> to get the actual number of scanlines of image data.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting For View Perspective</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int imageHeight;</pre>
      </objectivec>
      <java>
        <pre>public int getImageHeight()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.ImageSize">
      <summary>
            Gets the size in pixels of this <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <value>The size in pixels of this <see cref="T:Leadtools.RasterImage" /> object.</value>
      <remarks>
            The size in pixels is <see cref="P:Leadtools.RasterImage.Width" /> by <see cref="P:Leadtools.RasterImage.Height" /> pixels.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LeadSize imageSize;</pre>
      </objectivec>
      <java>
        <pre>public LeadSize getImageSize()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.BitsPerPixel">
      <summary>
            Gets the number of bits per pixel of this <see cref="T:Leadtools.RasterImage" /></summary>
      <value>Number of bits per pixel of this <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> object supports image data of 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 24, 32, 48 and 64 bits
            per pixel</para>
        <para>A 16-bpp image may be color or grayscale. If you are working with a 16-bit grayscale image, then use
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see> when creating the image. By default, the Order for a 16-bit image will be set to
            <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>public int getBitsPerPixel()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.BytesPerLine">
      <summary>
            Gets the number of bytes per scanline for the image data of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <value>Number of bytes per per scanline for the image data of this <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.RasterImage.BytesPerLine" /> value is rounded upward to the nearest multiple of four.</para>
        <para>You can use this property to allocate the buffer size when manipulating the scanline data of a <see cref="T:Leadtools.RasterImage" />
            directly through the <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:Leadtools.RasterImage.SetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /> methods.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int bytesPerLine;</pre>
      </objectivec>
      <java>
        <pre>public int getBytesPerLine()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.ViewPerspective">
      <summary>
            Gets or sets the view perspective of the image data of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <value>The view perspective of the image data of this <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The view perspective indicates where the beginning of the image is stored.  For more information,
            see <see cref="T:Leadtools.RasterViewPerspective" />.</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting For View Perspective</see>.</para>
        <para>Note: You should be careful when setting the view-perspective of an image using this property since it will not change the orientation of
            the data of the image. To do that, use <see cref="M:Leadtools.RasterImage.ChangeViewPerspective(Leadtools.RasterViewPerspective)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ChangeViewPerspectiveCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterViewPerspective viewPerspective;</pre>
      </objectivec>
      <java>
        <pre>public RasterViewPerspective getViewPerspective()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Order">
      <summary>
            Gets or sets the color order of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <value>The color order of this <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> object supports storing the image data in one of the following color orders:
            <list type="table"><listheader><term>Order</term><description>Notes</description></listheader><item><term><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see></term><description>
                 The image data contains the color in the RGB order.  For example, for 24-bits per pixel images
                 the data is stored as the 3 bytes representing the red, green and blue component respectively.  Palettized images
                 (with bits per pixel less than or equal to 8) will also report a byte order of RGB although the image data stored is
                 really indices into the palette.
                 <para>16-bit bitmaps use 5 bits for R, G and B components and one bit for alpha</para></description></item><item><term><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see></term><description>
                 The image data contains the color in the BGR order.  For example, for 24-bits per pixel images
                 the data is stored as the 3 bytes representing the blue, green and red component respectively.
                 </description></item><item><term><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb565</see></term><description>
                 The image data contains the color in RGB color order with 5 bits for red and blue component and 6 bits for green component (16 bits per pixel).
                 There is no alpha information.
                 </description></item><item><term><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Gray</see></term><description>
                 The image data contains the grayscale colors.  For 12 and 16-bits per pixel images, the image data contains the 
                 grayscale values of the pixel, for 8-bits per pixel gray scale images, the image data contains an index into the
                 grayscale palette.
                 </description></item><item><term><see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Romm</see></term><description>
                 The image data is compressed in memory using ROMM.  Only valid for 24-bits per pixel images.
                 </description></item></list></para>
      </remarks>
      <example>
        <!--RasterImage.Order-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterByteOrder order;</pre>
      </objectivec>
      <java>
        <pre>public RasterByteOrder getOrder()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.HasRegion">
      <summary>
            Determines whether this <see cref="T:Leadtools.RasterImage" /> has a region.
            </summary>
      <value>true if this <see cref="T:Leadtools.RasterImage" /> has a region; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>When an image has a region, the LEADTOOLS methods that modify the pixel values (for example
            <see cref="T:Leadtools.ImageProcessing.Color.PosterizeCommand" />) act on the region, rather than the whole image. In addition, the LEADTOOLS methods that
            flip, reverse, rotate, shear, or resize an image also transform the region to match the image. For example, if you were to
            shear the image that had a rectangular region, the region would become a parallelogram.</para>
        <para>To remove an image region, use <see cref="M:Leadtools.RasterImage.MakeRegionEmpty" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Region-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readwrite) BOOL hasRegion;</pre>
      </objectivec>
      <java>
        <pre>public boolean hasRegion()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.XResolution">
      <summary>
            Gets or sets the image horizontal resolution, in dots per inch (DPI).
            </summary>
      <value>Horizontal resolution in dots per inch (DPI).</value>
      <remarks>Some file formats save this value in the file header.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getXResolution()
public void setXResolution(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.YResolution">
      <summary>
            Gets or sets the image vertical resolution, in dots per inch (DPI).
            </summary>
      <value>Vertical resolution in dots per inch (DPI).</value>
      <remarks>Some file formats save this value in the file header.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getYResolution()
public void setYResolution(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.LowBit">
      <summary>
            Gets or sets the image window level low bit value.
            </summary>
      <value>Value indicating the low bit used for window leveling.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.RasterImage.LowBit" /> value will be: 0 &lt;= <see cref="P:Leadtools.RasterImage.LowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.HighBit" />
            &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale). A value of -1 will be treated as 0.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) int lowBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getLowBit()
public void setLowBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.HighBit">
      <summary>
            Gets or sets the image window level high bit value.
            </summary>
      <value>Value indicating the high bit used for window leveling.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.RasterImage.LowBit" /> value will be: 0 &lt;= <see cref="P:Leadtools.RasterImage.LowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.HighBit" />
            &lt;= (11 for 12-bit grayscale or 15 for 16-bit grayscale). A value of -1 will be treated as 0.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) int highBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getHighBit()
public void setHighBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.MinValue">
      <summary>
            Gets or sets the images minimum grayscale value.
            </summary>
      <value>Minimum grayscale value.</value>
      <remarks>
        <para>For every value between 0 and <see cref="P:Leadtools.RasterImage.MinValue" />, Black (RGB(0,0,0)) will be used.  For values between
            <see cref="P:Leadtools.RasterImage.MinValue" /> and <see cref="P:Leadtools.RasterImage.MaxValue" />, the gray value to be displayed is calculated by :
            gray = (index - <see cref="P:Leadtools.RasterImage.MinValue" />) * 255 / (<see cref="P:Leadtools.RasterImage.MaxValue" /> - <see cref="P:Leadtools.RasterImage.MinValue" />).</para>
        <para>index is the intensity value of the pixel.  If the intensity value is &gt; <see cref="P:Leadtools.RasterImage.MaxValue" />, the color will be
            White.  If the intensity value is &lt; <see cref="P:Leadtools.RasterImage.MinValue" />, the color will be Black.  For those intensity values between
            <see cref="P:Leadtools.RasterImage.MinValue" /> and <see cref="P:Leadtools.RasterImage.MaxValue" />, the above equation is used to determine the color, with index equal to
            the intensity value.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) int minValue;</pre>
      </objectivec>
      <java>
        <pre>
public int getMinValue()
public void setMinValue(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.MaxValue">
      <summary>
            Gets or sets the images maximum grayscale value.
            </summary>
      <value>Maximum grayscale value.</value>
      <remarks>
        <para>For every value between 0 and <see cref="P:Leadtools.RasterImage.MinValue" />, Black (RGB(0,0,0)) will be used.  For values between
            <see cref="P:Leadtools.RasterImage.MinValue" /> and <see cref="P:Leadtools.RasterImage.MaxValue" />, the gray value to be displayed is calculated by :
            gray = (index - <see cref="P:Leadtools.RasterImage.MinValue" />) * 255 / (<see cref="P:Leadtools.RasterImage.MaxValue" /> - <see cref="P:Leadtools.RasterImage.MinValue" />).</para>
        <para>index is the intensity value of the pixel.  If the intensity value is &gt; <see cref="P:Leadtools.RasterImage.MaxValue" />, the color will be
            White.  If the intensity value is &lt; <see cref="P:Leadtools.RasterImage.MinValue" />, the color will be Black.  For those intensity values between
            <see cref="P:Leadtools.RasterImage.MinValue" /> and <see cref="P:Leadtools.RasterImage.MaxValue" />, the above equation is used to determine the color, with index equal to
            the intensity value.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /> and <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) int maxValue;</pre>
      </objectivec>
      <java>
        <pre>
public int getMaxValue()
public void setMaxValue(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.PaintLowBit">
      <summary>
            Gets or sets the image paint low bit value.
            </summary>
      <value>Value indicating the low bit used for painting.</value>
      <remarks>
        <para>The low bit value will be: 0 &lt;= <see cref="P:Leadtools.RasterImage.PaintLowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.PaintHighBit" /> &lt;=
            (11 for 12-bit grayscale or 15 for 16-bit grayscale). A value of -1 will be treated as 0.</para>
        <para>This property along with <see cref="P:Leadtools.RasterImage.PaintHighBit" /> are used internally by LEADTOOLS when
            <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /> is called.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) int paintLowBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getPaintLowBit()
public void setPaintLowBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.PaintHighBit">
      <summary>
            Gets or sets the image paint low bit value.
            </summary>
      <value>Value indicating the low bit used for painting.</value>
      <remarks>
        <para>The low bit value will be: 0 &lt;= <see cref="P:Leadtools.RasterImage.PaintLowBit" /> &lt;= <see cref="P:Leadtools.RasterImage.PaintHighBit" /> &lt;=
            (11 for 12-bit grayscale or 15 for 16-bit grayscale). A value of -1 will be treated as 0.</para>
        <para>This property along with <see cref="P:Leadtools.RasterImage.PaintLowBit" /> are used internally by LEADTOOLS when
            <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /> is called.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) int paintHighBit;</pre>
      </objectivec>
      <java>
        <pre>
public int getPaintHighBit()
public void setPaintHighBit(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.PaintGamma">
      <summary>
            Gets or sets the current gamma correction value for the image.
            </summary>
      <value>The current gamma correction value.</value>
      <remarks>
        <para>The paint gamma value can be any number greater than 0. The default value is 100.</para>
        <para>Because this is an unsigned integer, it is 100 times the actual gamma value. For example, use 235 to set a gamma
            value of 2.35. Intensity values ideally follow a logarithmic progression, because the eye perceives changes in intensity
            as being equal when the ratio of change is equal. For example, we would see a change from 0.1 to 0.2 as being equal to a
            change from 0.2 to 0.4.</para>
        <para>Gamma is a standard constant that is used to calculate the progression. For most CRTs the gamma constant is in the
            range of 2.2 to 2.5.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Intensity-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int paintGamma;</pre>
      </objectivec>
      <java>
        <pre>
public int getPaintGamma()
public void setPaintGamma(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.PaintContrast">
      <summary>
            Gets or sets the current contrast value for the image.
            </summary>
      <value>The current contrast value.</value>
      <remarks>
        <para>Amount of contrast change. Valid values are -1000 to +1000.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.PaintGamma" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int paintContrast;</pre>
      </objectivec>
      <java>
        <pre>
public int getPaintContrast()
public void setPaintContrast(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.PaintIntensity">
      <summary>
            Gets or sets the current intensity value for the image.
            </summary>
      <value>The current intensity value.</value>
      <remarks>
        <para>Amount to change the intensity. Valid values are -1000 to +1000. A positive value increases (or lightens)
            the brightness of the display. A negative values decreases (or darkens) the brightness of the display.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ChangingBrightnessAndContrast">Changing Brightness and Contrast</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.PaintGamma" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int paintIntensity;</pre>
      </objectivec>
      <java>
        <pre>
public int getPaintIntensity()
public void setPaintIntensity(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.TransparentColor">
      <summary>
            Gets or sets the transparent color used when painting this image.
            </summary>
      <value>The transparent color used when painting this image.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.RasterImage.TransparentColor" /> of a <see cref="T:Leadtools.RasterImage" /> is used when the <see cref="P:Leadtools.RasterImage.Transparent" />
            property value is set to true.</para>
        <para>Note, transparent paint does not work with <see cref="T:Leadtools.Drawing.RasterPaintEngine">RasterPaintEngine.Gdi</see>.  For more information, refer to
            <see cref="T:Leadtools.Drawing.RasterPaintProperties" />.</para>
        <para>If this <see cref="T:Leadtools.RasterImage" /> has a <see cref="P:Leadtools.RasterImage.BitsPerPixel" /> value of 8 or less, then the image has a palette. For palettized images, the value
            of the <see cref="P:Leadtools.RasterImage.TransparentColor" /> can be an RGB value or a palette index.</para>
        <para>To set a palette index as the transparent color, use the <see cref="M:Leadtools.RasterColor.FromPaletteIndex(System.Int32)">RasterColor.FromPaletteIndex</see> method.</para>
        <para>If the color passed is a true RGB value(The value of see <see cref="P:Leadtools.RasterColor.IsPaletteIndex">RasterColor.IsPaletteIndex</see> is <strong>false</strong>
            and the image has a palette, then this <see cref="T:Leadtools.RasterImage" /> object will call <see cref="M:Leadtools.RasterImage.GetTrueColorValue(Leadtools.RasterColor)" /> on the <see cref="P:Leadtools.RasterImage.TransparentColor" /> to
            translate it into the nearest palette index entry before using it to determine the actual transparent color in the image when painting.</para>
        <para>For more information, refer to <see cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</see>.</para>
      </remarks>
      <example>
        <para>For an example of how to use this property when loading/saving images with transparent colors such as GIF, refer to <see cref="M:Leadtools.RasterImage.GetTrueColorValue(Leadtools.RasterColor)" />.</para>
        <!--RasterImage.TransparentColor-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* transparentColor;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getTransparentColor()
public void setTransparentColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.DitheringMethod">
      <summary>
            Gets or sets the default dithering method, referenced by some internal LEADTOOLS methods.
            </summary>
      <value>The default dithering method used.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)" />.</example>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <seealso cref="T:Leadtools.Topics.DitheringMethods">Dithering Methods</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">Codecs.CodecsThumbnailOptions.DitheringMethod property</seealso>
      <seealso cref="P:Leadtools.ImageProcessing.ColorResolutionCommand.DitheringMethod">ImageProcessing.ColorResolutionCommand.DitheringMethod property</seealso>
      <seealso cref="T:Leadtools.RasterDitheringMethod">RasterDitheringMethod enumeration</seealso>
      <seealso cref="P:Leadtools.RasterDefaults.DitheringMethod">RasterDefaults.DitheringMethod property</seealso>
      <seealso cref="M:Leadtools.RasterImage.DitherLine(System.Byte[],System.Int32,System.Byte[],System.Int32)">RasterImage.DitherLine method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StartDithering(Leadtools.RasterColor[],System.Int32)">RasterImage.StartDithering method</seealso>
      <seealso cref="M:Leadtools.RasterImage.StopDithering">RasterImage.StopDithering method</seealso>
      <seealso cref="M:Leadtools.RasterBufferConverter.Convert(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterByteOrder,Leadtools.RasterColor[],Leadtools.RasterColor[],System.Int32,System.Int32,System.Int32,Leadtools.RasterConvertBufferFlags)">RasterBufferConverter.Convert</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterDitheringMethod ditheringMethod;</pre>
      </objectivec>
      <java>
        <pre>
public RasterDitheringMethod getDitheringMethod()
public void setDitheringMethod(RasterDitheringMethod value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Data">
      <summary>
            Gets the data for the image in native format.
            </summary>
      <value>The data for the image.</value>
      <remarks>
        <para>This value should only be used with images created with user-defined data.  Other type of images will return an
            undefined internal value.</para>
      </remarks>
      <example>
        <!--RasterImage.Data-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) const NSData* data;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterImage.DataSize">
      <summary>
            Gets the size, in bytes, of the image data buffer.
            </summary>
      <value>The size, in bytes of the image data buffer.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.ChangeCompression(Leadtools.RasterCompression)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) size_t dataSize;</pre>
      </objectivec>
      <java>
        <pre>public long getDataSize()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsConventionalMemory">
      <summary>
            Determines if the memory allocated for the image data is in conventional memory.
            </summary>
      <value>true if the memory allocated for the image data is in conventional memory; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>
            This example creates images with different RasterMemoryFlags types.
            <!--RasterImage.IsConventionalMemory--></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isConventionalMemory;</pre>
      </objectivec>
      <java>
        <pre>public boolean isConventionalMemory()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsCompressed">
      <summary>
            Determines if the memory allocated for the image data is compressed memory.
            </summary>
      <value>true if the memory allocated for the image data is compressed memory; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.ChangeCompression(Leadtools.RasterCompression)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isCompressed;</pre>
      </objectivec>
      <java>
        <pre>public boolean isCompressed()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsDiskMemory">
      <summary>
            Determines if the memory allocated for the image data is allocated as a disk file rather than in physical memory.
            </summary>
      <value>true if the memory allocated for the image data is allocated as a disk file rather than in physical memory; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.IsConventionalMemory" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isDiskMemory;</pre>
      </objectivec>
      <java>
        <pre>public boolean isDiskMemory()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsTiled">
      <summary>
            Determines if the memory allocated for the image data is allocated in tiles.
            </summary>
      <value>true if the memory allocated for the image data is allocated in tiles.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.IsConventionalMemory" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isTiled;</pre>
      </objectivec>
      <java>
        <pre>public boolean isTiled()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsSuperCompressed">
      <summary>
            Determines if the memory allocated for the image data is super-compressed memory.
            </summary>
      <value>true if the memory allocated for the image data is super-compressed memory; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.ChangeCompression(Leadtools.RasterCompression)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isSuperCompressed;</pre>
      </objectivec>
      <java>
        <pre>public boolean isSuperCompressed()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsGlobalMemory">
      <summary>
            Determines if the memory allocated for the image data is a global Windows handle.
            </summary>
      <value>true if the memory allocated for the image data is a global Windows handle; <strong>false</strong>, otherwise.</value>
      <remarks>
            If the value of this property is set, you must use <see cref="M:Leadtools.RasterImage.Access" /> and <see cref="M:Leadtools.RasterImage.Release" /> when using low level
            methods that access the image data directly.  For more information, refer to <see cref="M:Leadtools.RasterImage.Access" />.<para>
            In Silverlight, a value of True indicates that the RasterImage object has stored the image data internally using a Silverlight WritableBitmap.
             For more information, see <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">CodecsLoadOptions.UseWriteableBitmap</see> and <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseNativeLoad">UseNativeLoad</see></para></remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.GetRow(System.Int32,System.Byte[],System.Int32,System.Int32)" /></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isGlobalMemory;</pre>
      </objectivec>
      <java>
        <pre>public boolean isGlobalMemory()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Transparent">
      <summary>
            Gets or sets a value that indicates whether to use the transparent color.
            </summary>
      <value>true to use the transparent color; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.RasterImage.TransparentColor" /> of a <see cref="T:Leadtools.RasterImage" /> is used when the <see cref="P:Leadtools.RasterImage.Transparent" />
            property value is set to true.</para>
        <para>Note, transparent paint does not work with <see cref="T:Leadtools.Drawing.RasterPaintEngine">RasterPaintEngine.Gdi</see>.  For more information, refer to
            <see cref="T:Leadtools.Drawing.RasterPaintProperties" />.</para>
        <para>For more information, refer to <see cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.TransparentColor" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL transparent;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getTransparent()
public void setTransparent(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Signed">
      <summary>
            Determines if the image data contains signed values.
            </summary>
      <value>true if the image data contains signed (i.e. positive and negative) values; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.ClearNegativePixelsCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL signedData;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSigned()
public void setSigned(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsMirrored">
      <summary>
            Determines whether the image data is mirrored.
            </summary>
      <value>true if the image data is mirrored; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>Mirrored data means the data is shared between this <see cref="T:Leadtools.RasterImage" /> and another object. When creating user-memory images for example,
            the <see cref="P:Leadtools.RasterImage.IsMirrored" /> and the <see cref="P:Leadtools.RasterImage.IsConventionalMemory" /> properties will both be <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.IsBasic" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isMirrored;</pre>
      </objectivec>
      <java>
        <pre>public boolean isMirrored()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.UseLookupTable">
      <summary>
            Enables or disables using the lookup table (LUT) of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <keywords>LUT|Lookup Table</keywords>
      <value>true to enable using the lookup table (LUT), false to disable it.</value>
      <remarks>
            You can access the lookup table (LUT) with the <see cref="M:Leadtools.RasterImage.GetLookupTable" /> and <see cref="M:Leadtools.RasterImage.SetLookupTable(Leadtools.RasterColor[])" /> methods.
            <para>LUT is only used for 10-16 bit extended grayscale image or 10-16 bit palette color image. To update the palette in 1-8 bit image use <see cref="M:Leadtools.RasterImage.SetPalette(Leadtools.RasterColor[],System.Int32,System.Int32)" />. For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para><para>If the value is true, the LUT will be used in all image processing commands and save. If the value is false, the LUT will be used only when painting and the LUT will be ignored when an image processing command is applied or when a file is saved.</para></remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.SetLookupTable(Leadtools.RasterColor[])" />.</example>
      <seealso cref="T:Leadtools.Drawing.RasterPaintCallbacks" />
      <seealso cref="T:Leadtools.Topics.ImplementingCustomPaint">Implementing custom paint</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useLookupTable;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseLookupTable()
public void setUseLookupTable(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.UsePaintLookupTable">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <value>
            For internal use by LEADTOOLS.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL usePaintLookupTable;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUsePaintLookupTable()
public void setUsePaintLookupTable(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.NoRegionClip">
      <summary>
            Enables or disables clipping the image to the region.
            </summary>
      <value>true to clip the image to the region; <strong>false</strong>, otherwise.</value>
      <remarks>
            This property is used internally by LEADTOOLS.
            </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noRegionClip;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoRegionClip()
public void setNoRegionClip(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.PremultiplyAlpha">
      <summary>
            Enables or disables automatic handling of premultiplied alpha channel values when using Silverlight <see cref="T:Leadtools.RasterMemoryFlags">WriteableBitmap</see>.
            </summary>
      <value>true to allow LEADTOOLS to automatically handle premultiplied alpha channel values; false, otherwise.</value>
      <remarks>
        <para>
            This property only applies to 32-bit images.  This property only has an effect when using <see cref="T:Leadtools.RasterMemoryFlags">WriteableBitmap</see> for memory storage of the image data.
            </para>
        <para>
            When this property is set to True, LEADTOOLS will automatically do the required conversions to store premultipled alpha values into the <see cref="T:Leadtools.RasterMemoryFlags">WriteableBitmap</see>.  If you are dealing with 32-bit images that do not have meaningful alpha channel values, you should simply set this property to false.
            </para>
        <para>
            Setting this property to True will slow down image processing functions.  You should only use this if you know your images have meaningful alpha channel values.
            </para>
      </remarks>
      <seealso cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.WriteableBitmap</seealso>
      <seealso cref="M:Leadtools.Windows.Media.RasterImageConverter.ConvertToSource(Leadtools.RasterImage,Leadtools.Windows.Media.ConvertToSourceOptions)">RasterImageConverter.ConvertToSource</seealso>
      <seealso cref="T:Leadtools.Windows.Media.ConvertToSourceOptions">ConvertToSourceOptions.AutoDetectAlpha</seealso>
      <seealso cref="T:Leadtools.Windows.Media.ConvertFromSourceOptions">ConvertFromSourceOptions.AutoDetectAlpha</seealso>
      <seealso cref="T:Leadtools.ImageProcessing.DetectAlphaCommand">DetectAlphaCommand</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">CodecsLoadOptions.UseWriteableBitmap</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.AutoDetectAlpha">CodecsLoadOptions.AutoDetectAlpha</seealso>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL premultiplyAlpha;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getPremultiplyAlpha()
public void setPremultiplyAlpha(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsBasic">
      <summary>
            Determines whether the image data is basic.
            </summary>
      <value>true if the image data is basic; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>The image data is considered basic if the value of the <see cref="P:Leadtools.RasterImage.ViewPerspective" /> is one of the following:
            <list type="bullet"><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft</see></description></item></list></para>
        <para>Otherwise, the image is either rotated (<see cref="P:Leadtools.RasterImage.IsRotated" />) or flipped (<see cref="P:Leadtools.RasterImage.IsFlipped" />).</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <example>
            This example tests the various Image Info properties.
            <!--RasterImage.IsBasic--></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isBasic;</pre>
      </objectivec>
      <java>
        <pre>public boolean isBasic()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsRotated">
      <summary>
            Determines whether the image has a rotated <see cref="P:Leadtools.RasterImage.ViewPerspective" />.
            </summary>
      <value>true if the image has a rotated <see cref="P:Leadtools.RasterImage.ViewPerspective" />; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>The image data is considered rotated if the value of the <see cref="P:Leadtools.RasterImage.ViewPerspective" /> is one of the following:
            <list type="bullet"><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.RightTop</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft90</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.LeftBottom</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft270</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.LeftTop</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft90</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.RightBottom</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft270</see></description></item></list></para>
        <para>Otherwise, the image is either basic (<see cref="P:Leadtools.RasterImage.IsBasic" />) or flipped (<see cref="P:Leadtools.RasterImage.IsFlipped" />).</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.IsBasic" /></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isRotated;</pre>
      </objectivec>
      <java>
        <pre>public boolean isRotated()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsFlipped">
      <summary>
            Determines whether the image has a a flipped <see cref="P:Leadtools.RasterImage.ViewPerspective" />.
            </summary>
      <value>true if the image has a flipped <see cref="P:Leadtools.RasterImage.ViewPerspective" />; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>The image data is considered flipped if the value of the <see cref="P:Leadtools.RasterImage.ViewPerspective" /> is one of the following:
            <list type="bullet"><item><description><see cref="T:Leadtools.RasterViewPerspective">BottomLeft</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">LeftTop</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">BottomLeft90</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">TopRight</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">BottomLeft180</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">RightBottom</see></description></item><item><description><see cref="T:Leadtools.RasterViewPerspective">BottomLeft270</see></description></item></list></para>
        <para>Otherwise, the image is either basic (<see cref="P:Leadtools.RasterImage.IsBasic" />) or rotated (<see cref="P:Leadtools.RasterImage.IsRotated" />).</para>
        <para>For more information refer to <see cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.IsBasic" /></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isFlipped;</pre>
      </objectivec>
      <java>
        <pre>public boolean isFlipped()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsGray">
      <summary>
            Determines whether the image has a grayscale byte order.
            </summary>
      <value>true if the image has a grayscale byte order; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>This property is used internally by LEADTOOLS and checks if the image has a grayscale byte order.</para>
        <para>To determine if the image data is grayscale, use the <see cref="P:Leadtools.RasterImage.GrayscaleMode" /> property.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isGray;</pre>
      </objectivec>
      <java>
        <pre>public boolean isGray()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.DitherData">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <value>
            For internal use by LEADTOOLS.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) const void* ditherData;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterImage.GrayscaleMode">
      <summary>
            Determines if this <see cref="T:Leadtools.RasterImage" /> is a grayscale image.
            </summary>
      <value>A <see cref="T:Leadtools.RasterGrayscaleMode" /> enumeration member to determine if this <see cref="T:Leadtools.RasterImage" /> is a
            grayscale image.</value>
      <remarks>
        <para>Use this property to determine if the data inside this <see cref="T:Leadtools.RasterImage" /> object is grayscale before
            calling methods and properties that rely on grayscale data.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.GrayScaleImages">Grayscale Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.GrayscaleCommand" />.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LTRasterGrayscaleMode grayscaleMode;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterImage.OriginalFormat">
      <summary>
            Gets or sets the original image format of this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <value>The original image format of this <see cref="T:Leadtools.RasterImage" />.</value>
      <remarks>
        <para>When a <see cref="T:Leadtools.RasterImage" /> object is created by loading it from an image file, this property will hold
            the format type of the file as a <see cref="T:Leadtools.RasterImageFormat" /> enumeration member.</para>
        <para>If the <see cref="T:Leadtools.RasterImage" /> was created by other means (for example, through the <see cref="T:Leadtools.RasterImage" />
            constructor or scanning), the value of this property will be <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Unknown</see>.</para>
      </remarks>
      <example>
            This example displays the OriginalFormat of the loaded image.
            <!--RasterImage.OriginalFormat--></example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterImageFormat originalFormat;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImageFormat getOriginalFormat()
public void setOriginalFormat(RasterImageFormat value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.MemoryInformation">
      <summary>
            Gets or sets information about the memory allocated for the image data.
            </summary>
      <value>
            Information about the memory allocated for the image data.
            </value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.RasterImageMemoryInformation" /> for description of the different memory modules used
            by LEADTOOLS when allocating images.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.MemoryStorageTypesForImages">Memory Storage Types for Images</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.ImageProcessing.CloneCommand" />.</example>
      <java>
        <pre>
public RasterImageMemoryInformation getMemoryInformation()
public void setMemoryInformation(RasterImageMemoryInformation value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Tags">
      <summary>
            The collection of tag data used when reading and writing certain file formats (including TIFF).
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> used when reading and writing certain file formats (including TIFF).
            </value>
      <remarks>
        <para>Several formats allow you to store non-image data such as comments, tags, and markers.</para>
        <para>You can manipulate the tags of an image by adding/removing <see cref="T:Leadtools.RasterTagMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.Tags">CodecsSaveOptions.Tags</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the tags in this collection when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTags(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">RasterCodecs.WriteTags</see>
            method to save the tags directly to an existing file and the <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.IO.Stream,System.Int32)">RasterCodecs.EnumTags</see>
            to load the tags stored in an existing file.</para>
        <para>
          <strong>Note:</strong> To write tags to a TIFF file, use <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTags(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">RasterCodecs.WriteTags</see> 
            instead of using <strong>RasterImage.Tags</strong> followed by <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Tags-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) NSMutableArray* tags;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterTagMetadata&gt; getTags()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.GeoKeys">
      <summary>
            The collection of GeoKeys used when reading and writing Geo TIFF files.
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> GeoKeys used when reading and writing Geo TIFF files.
            </value>
      <remarks>
        <para>GeoTIFF files are TIFF files containing a few extra TIFF tags describing the image location, scale at
            which the picture was taken and many other information useful for topographic applications.</para>
        <para>Any GeoTIFF file that you save will include the GeoKey data set until you clear the GeoKey data. To save this data
            to  a file, save <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.GeoTiff</see> files.</para>
        <para>For more information, refer to <see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
        <para>To write the GeoKey data directly to an existing file, call
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteGeoKey(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)">RasterCodecs.WriteGeoKey</see>. Note that LEADTOOLS does not verify the validity of
            the GeoKeys that you set. It is your responsibility to make sure you write correct values according to the GeoTIFF
            specification.</para>
        <para>You can manipulate the GeoKeys of an image by adding/removing <see cref="T:Leadtools.RasterTagMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.GeoKeys">CodecsSaveOptions.GeoKeys</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the GeoKeys in this collection when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteGeoKeys(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">RasterCodecs.WriteGeoKeys</see>
            method to save GeoKeys tags directly to an existing file and the
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.IO.Stream,System.Int32)">RasterCodecs.EnumGeoKeys</see> to load the GeoKeys stored in an existing file.</para>
        <para>For more information on GeoKeys, refer to <see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.GeoKeys-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) NSMutableArray* geoKeys;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterTagMetadata&gt; getGeoKeys()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Comments">
      <summary>
            The collection of comment data used when reading and writing certain file formats (including GIF).
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterCommentMetadata" /> used when reading and writing certain file formats
            (including GIF).
            </value>
      <remarks>
        <para>Several formats allow you to store non-image data such as comments, tags, and markers.</para>
        <para>You can manipulate the comments of an image by adding/removing <see cref="T:Leadtools.RasterCommentMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.Comments">CodecsSaveOptions.Comments</see> 
            property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the comments in this collection 
            when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property 
            to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into 
            this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">RasterCodecs.WriteMarkers</see>
            method to save the markers directly to an existing file.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see> and 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Comments-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) NSMutableArray* comments;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterCommentMetadata&gt; getComments()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.Markers">
      <summary>
            The collection of marker data used when reading and writing certain file formats (including JPEG).
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> used when reading and writing certain file formats
            (including JPEG).
            </value>
      <remarks>
        <para>Several formats allow you to store non-image data such as comments, tags, and markers.</para>
        <para>You can manipulate the markers of an image by adding/removing <see cref="T:Leadtools.RasterMarkerMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.Markers">CodecsSaveOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the markers in this collection when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.ReadMarkers(System.IO.Stream)">RasterCodecs.ReadMarkers</see> method to load the markers
            directly from an existing file and the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">RasterCodecs.WriteMarkers</see>
            method to save the markers to an existing file.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Markers-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) NSMutableArray* markers;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterMarkerMetadata&gt; getMarkers()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.OverlayCount">
      <summary>
            Gets the number of overlays that have been defined for this <see cref="T:Leadtools.RasterImage" />.
            </summary>
      <value>
            The number of overlays that have been defined for this <see cref="T:Leadtools.RasterImage" />.
            </value>
      <remarks>
        <para>This method is available in the <see cref="T:Leadtools.Topics.RasterProDocMed">(Document/Medical only)</see> Toolkits.</para>
        <para>This method will count how many overlays have been defined.  The overlays are defined by calling
            <see cref="M:Leadtools.RasterImage.SetOverlayImage(System.Int32,Leadtools.RasterImage,Leadtools.RasterGetSetOverlayImageMode)" /> or <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)" />.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayImage(System.Int32,Leadtools.RasterGetSetOverlayImageMode)" />.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int overlayCount;</pre>
      </objectivec>
      <java>
        <pre>public int getOverlayCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationWaitUserInput">
      <summary>
            Gets or sets a value indicating whether the <see cref="T:Leadtools.RasterImageAnimator" /> object should wait for user input in the current frame.
            </summary>
      <value>
        <strong>true</strong> if the <see cref="T:Leadtools.RasterImageAnimator" /> object should wait for user input in the current frame; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>The "Wait for user input" is supported by GIF89a and later standard. This flag gets set to the corresponding value if this image was loaded from
            a GIF file. Also, the value set in this property will be used if this image is saved as a GIF file. Otherwise, the LEADTOOLS toolkit will not use
            the value of this property.</para>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>
            There is currently no example for this property.
            </example>
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay" />
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL animationWaitUserInput;</pre>
      </objectivec>
      <java>
        <pre>public boolean getAnimationWaitUserInput()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationOffset">
      <summary>
            Gets or sets a value indicating the animation offset for the current frame.
            </summary>
      <value>
            A <see cref="T:Leadtools.LeadPoint" /> structure containing the animation offset for the current frame in <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see>
            view perspective.
            </value>
      <remarks>
        <para>The value of this property is used by the <see cref="T:Leadtools.RasterImageAnimator" /> class to properly update the correct portion of the target image when rendering
            the current frame.</para>
        <para>GIF files can contain multiple frames of different size. The <see cref="P:Leadtools.RasterImage.AnimationGlobalSize" /> property contains the "global" size of the animated GIF image.
            Individual frames should be rendered inside this global size offseted by the value of <see cref="P:Leadtools.RasterImage.AnimationOffset" /> property.</para>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop" /></example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay" />
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadPoint animationOffset;</pre>
      </objectivec>
      <java>
        <pre>public LeadPoint getAnimationOffset()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationDelay">
      <summary>
            Gets or sets a value indicating the animation delay in milliseconds (ms) for the current frame.
            </summary>
      <value>An integer value indicating the animation delay in milliseconds (ms) for the current frame</value>
      <remarks>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop" /></example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput" />
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset" />
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int animationDelay;</pre>
      </objectivec>
      <java>
        <pre>public int getAnimationDelay()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationBackground">
      <summary>
            Gets or sets a value indicating the animation background color for the current frame.
            </summary>
      <value>A <see cref="T:Leadtools.RasterColor" /> structure that indicate the animation background color for the current frame.</value>
      <remarks>
        <para>This is the background color used for the current frame. To get the global background color for the whole animation see <see cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />.</para>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop" /></example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput" />
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* animationBackground;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getAnimationBackground()
public void setAnimationBackground(RasterColor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationDisposalMethod">
      <summary>
            Gets or sets a value indicating the animation disposal method for the current frame.
            </summary>
      <value>A <see cref="T:Leadtools.RasterImageAnimationDisposalMethod" /> enumeration member that indicate the animation disposal method for the current frame.</value>
      <remarks>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop" /></example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput" />
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay" />
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterImageAnimationDisposalMethod animationDisposalMethod;</pre>
      </objectivec>
      <java>
        <pre>public RasterImageAnimationDisposalMethod getAnimationDisposalMethod()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationGlobalLoop">
      <summary>
            Gets or sets a value indicating the global loop count for animated images.
            </summary>
      <value>
            An integer value that indicates the global loop count for animated images. The following are valid values:
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term>-1</term><description>No looping. This is the default value and it means this image is not animated. This is the case with multi-page TIF files, for example.</description></item><item><term>0</term><description>Continuous looping. The animation should repeat itself indefinitely.</description></item><item><term>&lt; 0</term><description>N looping. The animation should repeat itself N times.</description></item></list></value>
      <remarks>
        <para>An image is considered to have animation if the value of <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop" /> is not -1 and the image has more than one
            frame (<see cref="P:Leadtools.RasterImage.PageCount" /> is greater than 1).</para>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>
        <para>This example will create an animated GIF file that shows the frame number moving into the four corners</para>
        <!--AnimatedGIFExample-->
      </example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput" />
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay" />
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) int animationGlobalLoop;</pre>
      </objectivec>
      <java>
        <pre>
public int getAnimationGlobalLoop()
public void setAnimationGlobalLoop(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationGlobalSize">
      <summary>
            Gets or sets a value indicating the global size of the animation image.
            </summary>
      <value>A <see cref="T:Leadtools.LeadSize" /> structure that indicates the global size of the animation image. Default value is 0,0 meaning same size as the image</value>
      <remarks>
        <para>The value of this property is used by the <see cref="T:Leadtools.RasterImageAnimator" /> class to properly update the correct portion of the target image.</para>
        <para>GIF files can contain multiple frames of different size. The <see cref="P:Leadtools.RasterImage.AnimationGlobalSize" /> property contains the "global" size of the animated GIF image.
            Individual frames should be rendered inside this global size offseted by the value of <see cref="P:Leadtools.RasterImage.AnimationOffset" /> property.</para>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop" /></example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput" />
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay" />
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalBackground" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadSize animationGlobalSize;</pre>
      </objectivec>
      <java>
        <pre>
public LeadSize getAnimationGlobalSize()
public void setAnimationGlobalSize(LeadSize value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.AnimationGlobalBackground">
      <summary>
            Gets or sets a value indicating the global background color of the animation image.
            </summary>
      <value>A <see cref="T:Leadtools.LeadSize" /> structure that indicates global background color of the animation image.</value>
      <remarks>
        <para>This is the global background color used for entire image. For the background color used in individual frames, see <see cref="P:Leadtools.RasterImage.AnimationBackground" />.</para>
        <para>When the value of this property is changed, the <see cref="E:Leadtools.RasterImage.Changed" /> event will fire with <see cref="T:Leadtools.RasterImageChangedFlags" /> set to RasterImageChangedFlags.AnimationProperties.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop" /></example>
      <seealso cref="P:Leadtools.RasterImage.AnimationWaitUserInput" />
      <seealso cref="P:Leadtools.RasterImage.AnimationOffset" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDelay" />
      <seealso cref="P:Leadtools.RasterImage.AnimationBackground" />
      <seealso cref="P:Leadtools.RasterImage.AnimationDisposalMethod" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalLoop" />
      <seealso cref="P:Leadtools.RasterImage.AnimationGlobalSize" />
      <seealso cref="T:Leadtools.RasterImageAnimator" />
      <seealso cref="T:Leadtools.Topics.ImplementingAnimation">Implementing Animation</seealso>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* animationGlobalBackground;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getAnimationGlobalBackground()
public void setAnimationGlobalBackground(RasterColor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterImage.IsDisposed">
      <summary>
            Gets a value indicating whether the <see cref="T:Leadtools.RasterImage" /> object has been disposed of.
            </summary>
      <isnew>2/28/2009</isnew>
      <value>
        <strong>true</strong> if the <see cref="T:Leadtools.RasterImage" /> object has been disposed of; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>When this property returns <strong>true</strong>, the <see cref="T:Leadtools.RasterImage" /> object is disposed of and can no longer be referenced as a valid object. Even though the
            instance of an object is disposed of, it is still maintained in memory until it is removed from memory through garbage collection. When an object is disposed, you should not
            check any other properties or call any other methods in the control or an <see cref="T:System.NullReferenceException" /> error will occur.</para>
        <para>If it is required to track when a <see cref="T:Leadtools.RasterImage" /> object is disposed, use the <see cref="E:Leadtools.RasterImage.Disposed" /> event.</para>
        <para>The <see cref="T:Leadtools.RasterImage" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterImage" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN.</para>
      </remarks>
      <example>
        <para>This example will show the use of the <see cref="P:Leadtools.RasterImage.IsDisposed" /> property of a <see cref="T:Leadtools.RasterImage" /> object.</para>
        <!--RasterImage.IsDisposed-->
      </example>
    </member>
    <member name="E:Leadtools.RasterImage.Disposed">
      <summary>
            Occurs when the image is disposed by a call to the <see cref="M:Leadtools.RasterImage.Dispose" /> method.
            </summary>
      <event>
            The event handler receives an argument of type <see cref="T:System.EventArgs" /> containing data related to this event.
            </event>
      <remarks>
        <para>When you create a <see cref="E:Leadtools.RasterImage.Disposed" /> delegate, you identify the method that handles the event. To associate the event with your event
            handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate.</para>
        <para>The <see cref="E:Leadtools.RasterImage.Disposed" /> event will fire whenever the <see cref="M:Leadtools.RasterImage.Dispose" /> method of this object is called. After this event occurs, the
            <see cref="T:Leadtools.RasterImage" /> object is disposed and should not be used anymore. It is recommended that you remove the handler to the
            <see cref="M:Leadtools.RasterImage.Dispose" /> event so the .NET Garbage Collector runtime can remove the object from its internal use and mark it as "unused".</para>
        <para>If the <see cref="T:Leadtools.RasterImage" /> is being freed as a result of the .NET Garbage Collector, in other worlds, the object finalizer is being
            called, then this event will not occur.</para>
      </remarks>
      <example>
        <!--RasterImage.Disposed-->
      </example>
    </member>
    <member name="P:Leadtools.RasterImage.IsLoading">
      <summary>
            Gets a value that determines whether this <see cref="T:Leadtools.RasterImage" /> object is still loading.
            </summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.RasterImage" /> object is still loading; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>It is recommended that you do not poll for the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> property to check when the
            image is finished loaded, instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation is completed and if any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see>.</example>
      <java>
        <pre>public boolean isLoading()</pre>
      </java>
    </member>
    <member name="E:Leadtools.RasterImage.LoadCompleted">
      <summary>
            For internal use by LEADTOOLS
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.RasterImage.BitmapList">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterImage.CurrentBitmapHandle">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterImage.NoFreeDataOnDispose">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterImage.Tags_WinRT">
      <summary>
            The collection of tag data used when reading and writing certain file formats (including TIFF).
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> used when reading and writing certain file formats (including TIFF).
            </value>
      <remarks>
        <para>Several formats allow you to store non-image data such as comments, tags, and markers.</para>
        <para>You can manipulate the tags of an image by adding/removing <see cref="T:Leadtools.RasterTagMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.Tags">CodecsSaveOptions.Tags</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the tags in this collection when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTags(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">RasterCodecs.WriteTags</see>
            method to save the tags directly to an existing file and the <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.IO.Stream,System.Int32)">RasterCodecs.EnumTags</see>
            to load the tags stored in an existing file.</para>
        <para>
          <strong>Note:</strong> To write tags to a TIFF file, use <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTags(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">RasterCodecs.WriteTags</see> 
            instead of using <strong>RasterImage.Tags</strong> followed by <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Tags-->
      </example>
      <winrt />
    </member>
    <member name="P:Leadtools.RasterImage.GeoKeys_WinRT">
      <summary>
            The collection of GeoKeys used when reading and writing Geo TIFF files.
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> GeoKeys used when reading and writing Geo TIFF files.
            </value>
      <remarks>
        <para>GeoTIFF files are TIFF files containing a few extra TIFF tags describing the image location, scale at
            which the picture was taken and many other information useful for topographic applications.</para>
        <para>Any GeoTIFF file that you save will include the GeoKey data set until you clear the GeoKey data. To save this data
            to  a file, save <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.GeoTiff</see> files.</para>
        <para>For more information, refer to <see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
        <para>To write the GeoKey data directly to an existing file, call
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteGeoKey(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)">RasterCodecs.WriteGeoKey</see>. Note that LEADTOOLS does not verify the validity of
            the GeoKeys that you set. It is your responsibility to make sure you write correct values according to the GeoTIFF
            specification.</para>
        <para>You can manipulate the GeoKeys of an image by adding/removing <see cref="T:Leadtools.RasterTagMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.GeoKeys">CodecsSaveOptions.GeoKeys</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the GeoKeys in this collection when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteGeoKeys(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">RasterCodecs.WriteGeoKeys</see>
            method to save GeoKeys tags directly to an existing file and the
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.IO.Stream,System.Int32)">RasterCodecs.EnumGeoKeys</see> to load the GeoKeys stored in an existing file.</para>
        <para>For more information on GeoKeys, refer to <see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.GeoKeys-->
      </example>
      <winrt />
    </member>
    <member name="P:Leadtools.RasterImage.Comments_WinRT">
      <summary>
            The collection of comment data used when reading and writing certain file formats (including GIF).
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterCommentMetadata" /> used when reading and writing certain file formats
            (including GIF).
            </value>
      <remarks>
        <para>Several formats allow you to store non-image data such as comments, tags, and markers.</para>
        <para>You can manipulate the comments of an image by adding/removing <see cref="T:Leadtools.RasterCommentMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.Comments">CodecsSaveOptions.Comments</see> 
            property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the comments in this collection 
            when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property 
            to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into 
            this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">RasterCodecs.WriteMarkers</see>
            method to save the markers directly to an existing file.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see> and 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Comments-->
      </example>
      <winrt />
    </member>
    <member name="P:Leadtools.RasterImage.Markers_WinRT">
      <summary>
            The collection of marker data used when reading and writing certain file formats (including JPEG).
            </summary>
      <value>A collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> used when reading and writing certain file formats
            (including JPEG).
            </value>
      <remarks>
        <para>Several formats allow you to store non-image data such as comments, tags, and markers.</para>
        <para>You can manipulate the markers of an image by adding/removing <see cref="T:Leadtools.RasterMarkerMetadata" /> objects to
            this collection.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsSaveOptions.Markers">CodecsSaveOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">RasterCodecs.Save</see>, you can save the markers in this collection when the image is
            saved into a file.</para>
        <para>By setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> property to true before calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">RasterCodecs.Load</see>, you can load all the markers (if any) into this collection when an
            image is loaded from a file.</para>
        <para>You can use the <see cref="M:Leadtools.Codecs.RasterCodecs.ReadMarkers(System.IO.Stream)">RasterCodecs.ReadMarkers</see> method to load the markers
            directly from an existing file and the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">RasterCodecs.WriteMarkers</see>
            method to save the markers to an existing file.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NonImageData">Non Image Data</see>.</para>
      </remarks>
      <example>
        <!--RasterImage.Markers-->
      </example>
      <winrt />
    </member>
    <member name="T:Leadtools.RasterColor">
      <summary>
            Describes a color consisting of relative intensities of alpha, red, green, and blue.
            </summary>
      <remarks>
        <para>The LEADTOOLS <see cref="T:Leadtools.RasterColor" /> class provides a platform independent representation of an ARGB color that can be used in any platform
            supported by LEADTOOLS such as GDI, GDI+, WPF and Silverlight.</para>
        <para>To convert a LEADTOOLS <see cref="T:Leadtools.RasterColor" /> object to/from a device dependent color, you can either use the various properties of methods
            of this class (such as the <see cref="P:Leadtools.RasterColor.A" />, <see cref="P:Leadtools.RasterColor.R" />, <see cref="P:Leadtools.RasterColor.G" />, <see cref="P:Leadtools.RasterColor.B" /> properties and
            the <see cref="M:Leadtools.RasterColor.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">RasterColor(int alpha, int red, int green, int blue)</see> constructor) directly, or
            use the following helper classes:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:Leadtools.Drawing.RasterColorConverter">Leadtools.Drawing.RasterColorConverter</see> to convert to/from a System.Drawing (GDI+) <see cref="T:System.Drawing.Color">System.Drawing.Color</see> object.</description>
          </item>
          <item>
            <description>
              <see cref="T:Leadtools.Windows.Media.RasterColorConverter">Leadtools.Windows.Media.RasterColorConverter</see> to convert to/from a System.Windows.Media.Color (WPF and Silverlight) <see cref="T:System.Windows.Media.Color">System.Windows.Media.Color</see> object.</description>
          </item>
        </list>
            In the <a href="https://www.leadtools.com/help/leadtools/v19/mapping/expressed.html">Document and Medical</a> toolkits, the COLORREF value can represent a 16 
            bit grayscale value if <see cref="T:Leadtools.RasterImage" /> is a 12 or 16-bit grayscale bitmap. To avoid confusion with an RGB value, set the COLORREF_GRAY16 
            mask (0x04000000). In this case (0x0400YYYY), the lower 16 bits (0xYYYY) of the COLORREF value represent the 16-bit grayscale value. (0x0400FFFF is 16-bit 
            white and 0x04000000 is 16-bit black.) This is not a standard Windows value. Therefore, although LEADTOOLS methods will recognize a COLORREF having this format, 
            but Windows methods will not.
            </remarks>
      <example>
            Converts a .NET color to a RasterColor and back.
            <!--RasterColor--></example>
      <objectivec>
        <pre>@interface LTRasterColor : NSObject&lt;NSCopying&gt;</pre>
      </objectivec>
      <java>
        <pre>public final class RasterColor</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor.Equals(Leadtools.RasterColor,Leadtools.RasterColor)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.RasterColor" /> objects contain the same values.
            </summary>
      <param name="color1">
            The first <see cref="T:Leadtools.RasterColor" /> object to use in the comparison.
            </param>
      <param name="color2">
            The second <see cref="T:Leadtools.RasterColor" /> object to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.RasterColor" /> objects have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.Create(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> with the specified values.
            </summary>
      <param name="alpha">Alpha component</param>
      <param name="red">Red component</param>
      <param name="green">Green component</param>
      <param name="blue">Blue component</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> object this method creates.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>
+(id)colorWithRed:(int)red 
            green:(int)green 
             blue:(int)blue 
            alpha:(int)alpha;
                                    </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterColor.Create_ObjectiveC(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> with the specified values.
            </summary>
      <param name="red">Red component</param>
      <param name="green">Green component</param>
      <param name="blue">Blue component</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> object this method creates.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>
+(id)colorWithRed:(int)red 
            green:(int)green 
             blue:(int)blue;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterColor.Clone">
      <summary>
            Creates an exact copy of this <see cref="T:Leadtools.RasterColor" /></summary>
      <returns>Exact copy of this <see cref="T:Leadtools.RasterColor" />.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(id)copyWithZone:(NSZone*)zone;</pre>
      </objectivec>
    </member>
    <member name="F:Leadtools.RasterColor.MaximumComponent">
      <summary>
            Maximum value for the alpha, red, green, blue component.
            </summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterColor.FromRgb(System.Int32)" /></example>
    </member>
    <member name="F:Leadtools.RasterColor.MinimumComponent">
      <summary>
            Minimum value for the alpha, red, green, blue component.
            </summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterColor.FromRgb(System.Int32)" /></example>
    </member>
    <member name="F:Leadtools.RasterColor.ReservedColor">
      <exclude />
    </member>
    <member name="F:Leadtools.RasterColor.EmptyColor">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColor.FromArgb(System.Int32)">
      <summary>
            Creates a <see cref="T:Leadtools.RasterColor" /> from an a rgb value.
            </summary>
      <param name="argb">The a rgb value.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> structure that this method creates.</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>static public RasterColor fromArgb(int argb)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor.FromRgb(System.Int32)">
      <summary>
            Creates a <see cref="T:Leadtools.RasterColor" /> from an rgb value.
            </summary>
      <param name="rgb">The rgb value.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> structure that this method creates.</returns>
      <noremarks />
      <example>
            This example will create an array of <see cref="T:Leadtools.RasterColor" /> containing 256 shades of gray.
            <!--RasterColor.FromRgb--></example>
    </member>
    <member name="M:Leadtools.RasterColor.FromRgba(System.Int32)">
      <summary>
            Creates a <see cref="T:Leadtools.RasterColor" /> from an rgba value.
            </summary>
      <param name="rgba">The rgba value.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> structure that this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.RasterColor" /> structure with specific values for red, green and blue.
            </summary>
      <param name="red">The red component value for the new Color structure.
            Valid values are <see cref="F:Leadtools.RasterColor.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor.MaximumComponent" />.</param>
      <param name="green">The green component value for the new Color structure.
            Valid values are <see cref="F:Leadtools.RasterColor.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor.MaximumComponent" />.</param>
      <param name="blue">The blue component value for the new Color structure.
            Valid values are <see cref="F:Leadtools.RasterColor.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor.MaximumComponent" />.</param>
      <remarks>
            The alpha value will be set to <see cref="F:Leadtools.RasterColor.MaximumComponent" />.
            </remarks>
      <example>
        <!--RasterColor.RasterColor-->
      </example>
      <objectivec>
        <pre>
-(id)initWithRed:(int)red 
           green:(int)green 
            blue:(int)blue;             </pre>
      </objectivec>
      <java>
        <pre>
public RasterColor(
  int red, 
  int green, 
  int blue
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.RasterColor" /> structure with specific values for red, green and blue.
            </summary>
      <param name="alpha">The alpha component value for the new Color structure.
            Valid values are <see cref="F:Leadtools.RasterColor.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor.MaximumComponent" />.</param>
      <param name="red">The red component value for the new Color structure.
            Valid values are <see cref="F:Leadtools.RasterColor.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor.MaximumComponent" />.</param>
      <param name="green">The green component value for the new Color structure.
            Valid values are <see cref="F:Leadtools.RasterColor.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor.MaximumComponent" />.</param>
      <param name="blue">The blue component value for the new Color structure.
            Valid values are <see cref="F:Leadtools.RasterColor.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor.MaximumComponent" />.</param>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColor" /></example>
      <objectivec>
        <pre>-(id)initWithRed:(int)red 
green:(int)green 
 blue:(int)blue
alpha:(int)alpha;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterColor(
  int alpha, 
  int red, 
  int green, 
  int blue
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor.ToString">
      <summary>
            Overridden. Converts this <see cref="T:Leadtools.RasterColor" /> structure to a human-readable string.
            </summary>
      <returns>string that is the name of the color of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor.ToRgb">
      <summary>
            Gets a 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <returns>A 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
            The byte ordering this method returns is 00RRBBGG.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.ToArgb">
      <summary>
            Gets a 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <returns>A 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
            The byte ordering this method returns is AARRGGBB.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.ToRgba">
      <summary>
            Gets a 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <returns>A 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
            The byte ordering this method returns is RRGGBBAA.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.FromPaletteIndex(System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> object that is an index into a palette
            </summary>
      <param name="index">The index value</param>
      <returns>A new <see cref="T:Leadtools.RasterColor" /> object that is an index into a palette.</returns>
      <remarks>
        <para>A <see cref="T:Leadtools.RasterColor" /> object can be a true RGB color or an index value into the palette of an image.</para>
        <para>If the value of <see cref="P:Leadtools.RasterColor.IsPaletteIndex" /> is <strong>true</strong>, then this color does not contain a true RGB value, instead, the value stored is an index
            into the palette of an image. To get the index value, use <see cref="M:Leadtools.RasterColor.ToRgb" />.</para>
        <para>If the value of <see cref="P:Leadtools.RasterColor.IsPaletteIndex" /> is <strong>false</strong>, then this color contains a true RGB value.</para>
        <para>Use this method to create a color that is a palette index.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop">RasterImage.AnimationGlobalLoop</see></example>
    </member>
    <member name="M:Leadtools.RasterColor.FromKnownColor(Leadtools.RasterKnownColor)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> structure from a known color.
            </summary>
      <param name="knownColor">One of the <see cref="T:Leadtools.RasterKnownColor" /> enumeration members.</param>
      <returns>The new <see cref="T:Leadtools.RasterColor" /> object.</returns>
      <remarks>
        <para>You can use the <see cref="T:Leadtools.RasterKnownColor" /> enumeration to construct <see cref="T:Leadtools.RasterColor" /> objects from colors known by name.</para>
      </remarks>
      <example>
        <!--RasterColor.FromKnownColor-->
      </example>
    </member>
    <member name="M:Leadtools.RasterColor.GetKnownColor">
      <summary>
            Gets the known color enumeration member that matches this color ARGB value.
            </summary>
      <returns>An <see cref="T:Leadtools.RasterKnownColor" /> enumeration member that matches this color ARGB value. If the color ARGB value does not match any known color,
            <see cref="T:Leadtools.RasterKnownColor">RasterKnownColor.Black</see> is returned.</returns>
      <remarks>
        <para>This method does a comparison of the ARGB values. Therefore, the <see cref="M:Leadtools.RasterColor.GetKnownColor" /> method might return a valid <see cref="T:Leadtools.RasterKnownColor" /> enumeration member
            even if this <see cref="T:Leadtools.RasterColor" /> was no creating using the <see cref="M:Leadtools.RasterColor.FromKnownColor(Leadtools.RasterKnownColor)" /> method.</para>
        <para>To check whether this <see cref="T:Leadtools.RasterColor" /> has a matching <see cref="T:Leadtools.RasterKnownColor" />, use <see cref="P:Leadtools.RasterColor.IsKnownColor" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.GetKnownColorName(Leadtools.RasterKnownColor)">
      <summary>
            Gets the human readable representation of a known color.
            </summary>
      <param name="knownColor">The known color.</param>
      <returns>A <see cref="T:System.String" /> that contains a human readable representation of a known color. For example, "Black" for <see cref="T:Leadtools.RasterKnownColor">RasterKnownColor.Black</see>,
            "Red" for <see cref="T:Leadtools.RasterKnownColor">RasterKnownColor.Red</see>, and so on.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.FromColorRef(System.UInt32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> object from a Windows COLORREF representation.
            </summary>
      <param name="value">A Windows COLORREF representation of a color.</param>
      <returns>The created <see cref="T:Leadtools.RasterColor" />.</returns>
      <remarks>
        <para>A Windows COLORREF contains the color the following hexadecimal form:</para>
        <para>0x00bbggrr</para>
        <para>This value will retrieve the values and set them in the <see cref="P:Leadtools.RasterColor.B" />, <see cref="P:Leadtools.RasterColor.G" /> and <see cref="P:Leadtools.RasterColor.R" /> properties.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.FromHtml(System.String)">
      <summary>
            Converts the specified html color to a <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="value">A <see cref="T:System.String" /> containing the html color value. This must be an HTML compatible string representation of a color.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> this method creates. If the string is null (Nothing in Visual Basic), then an empty <see cref="T:Leadtools.RasterColor" /> will be returned with all color components set to zero.</returns>
      <remarks>
        <para>The input string value can be in one of the following formats:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <para>Known HTML colors, such as "red", "green" or "blue". Case insensitive</para>
              </description>
            </item>
            <item>
              <description>
                <para>#RRGGBB for example #FF0000 for red</para>
              </description>
            </item>
            <item>
              <description>
                <para>rgba(r,g,b,a) for example rgba(255,0,0,1.0) for red</para>
              </description>
            </item>
            <item>
              <description>
                <para>rgb(r,g,b) for example (255,0,0) for red</para>
              </description>
            </item>
          </list>
        </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor.ToHtml">
      <summary>
            Converts this <see cref="T:Leadtools.RasterColor" /> structure to an html color.
            </summary>
      <returns>An HTML compatible string representation of the color of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
        <para>If the color has an alpha component of 255, then the result is in the #RRGGBB format, if the color has an alpha component with any other
            value than 255; then the result is the rgba(r,g,b,a) format.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.RasterColor.Black">
      <summary>
            Gets a <see cref="T:Leadtools.RasterColor" /> that represents black.
            </summary>
      <value>
        <see cref="T:Leadtools.RasterColor" /> that represents black.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>+(id)black;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterColor.White">
      <summary>
            Gets a <see cref="T:Leadtools.RasterColor" /> that represents white.
            </summary>
      <value>
        <see cref="T:Leadtools.RasterColor" /> that represents white.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>+(id)white;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.RasterColor.A">
      <summary>
            Gets or sets the alpha component of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <value>The alpha component of this <see cref="T:Leadtools.RasterColor" /> structure.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColor" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char a;</pre>
      </objectivec>
      <java>
        <pre>
public byte getA()
public void setA(byte value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor.R">
      <summary>
            Gets or sets the red component of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <value>The red component of this <see cref="T:Leadtools.RasterColor" /> structure.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColor" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char r;</pre>
      </objectivec>
      <java>
        <pre>
public byte getR()
public void setR(byte value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor.G">
      <summary>
            Gets or sets the green component of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <value>The green component of this <see cref="T:Leadtools.RasterColor" /> structure.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColor" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char g;</pre>
      </objectivec>
      <java>
        <pre>
public byte getG()
public void setG(byte value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor.B">
      <summary>
            Gets or sets the blue component of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <value>The blue component of this <see cref="T:Leadtools.RasterColor" /> structure.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterColor" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char b;</pre>
      </objectivec>
      <java>
        <pre>
public byte getB()
public void setB(byte value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor.Reserved">
      <exclude />
    </member>
    <member name="P:Leadtools.RasterColor.IsReservedColor">
      <exclude />
    </member>
    <member name="P:Leadtools.RasterColor.IsEmptyColor">
      <exclude />
    </member>
    <member name="P:Leadtools.RasterColor.IsPaletteIndex">
      <summary>
            Gets a value that determines whether this <see cref="T:Leadtools.RasterColor" /> is a palette index value.
            </summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.RasterColor" /> is a palette index; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>A <see cref="T:Leadtools.RasterColor" /> object can be a true RGB color or an index value into the palette of an image.</para>
        <para>If the value of <see cref="P:Leadtools.RasterColor.IsPaletteIndex" /> is <strong>true</strong>, then this color does not contain a true RGB value, instead, the value stored is an index
            into the palette of an image. To get the index value, use <see cref="M:Leadtools.RasterColor.ToRgb" />.</para>
        <para>If the value of <see cref="P:Leadtools.RasterColor.IsPaletteIndex" /> is <strong>false</strong>, then this color contains a true RGB value.</para>
        <para>To create a color that is a palette index, use the <see cref="M:Leadtools.RasterColor.FromPaletteIndex(System.Int32)" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.AnimationGlobalLoop">RasterImage.AnimationGlobalLoop</see></example>
    </member>
    <member name="P:Leadtools.RasterColor.IsKnownColor">
      <summary>
            Gets a value indicating whether this <see cref="T:Leadtools.RasterColor" /> structure is a predefined color. Predefined colors are represented by the elements of the <see cref="T:Leadtools.RasterKnownColor" /> enumeration.
            </summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.RasterColor" /> contains an ARGB value that has a matching <see cref="T:Leadtools.RasterKnownColor" /> enumeration member;<strong>false</strong>, otherwise.</value>
      <remarks>
        <para>This property does a comparison of the ARGB values. Therefore, the <see cref="P:Leadtools.RasterColor.IsKnownColor" /> property might return <strong>true</strong> even if this
            <see cref="T:Leadtools.RasterColor" /> was not created using the <see cref="M:Leadtools.RasterColor.FromKnownColor(Leadtools.RasterKnownColor)" /> method.</para>
        <para>To get the matching <see cref="T:Leadtools.RasterKnownColor" /> enumeration for a <see cref="T:Leadtools.RasterColor" />, use <see cref="M:Leadtools.RasterColor.GetKnownColor" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.RasterColor.ColorRef">
      <summary>
            Gets a Windows COLORREF color representation of this color.
            </summary>
      <value>A Windows COLORREF color representation of this color.</value>
      <remarks>
        <para>The return value is a 32-bit unsigned integer in the following hexadecimal form:</para>
        <para>0x00bbggrr</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterColor16">
      <summary>
            Describes a color consisting of relative intensities of alpha, red, green, and blue.
            </summary>
      <isnew>2/28/2009</isnew>
      <remarks>
        <para>This structure is similar to <see cref="T:Leadtools.RasterColor" />, except that it uses 16-bit components.</para>
        <para>This structure is used to represent a 16-bit lookup table (LUT) used with grayscale images.
            See <see cref="M:Leadtools.RasterImage.GetLookupTable16" /> and
            <see cref="M:Leadtools.RasterImage.SetLookupTable16(Leadtools.RasterColor16[])" /> for more information on 16-but LUTs.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.Drawing.RasterPaintCallbacks">RasterPaintCallbacks</see>.
            </example>
      <objectivec>
        <pre>@interface LTRasterColor16 : NSObject&lt;NSCopying&gt;</pre>
      </objectivec>
      <java>
        <pre>public final class RasterColor16</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor16.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.RasterColor16" /> structure with specific values for red, green and blue.
            </summary>
      <isnew>2/28/2009</isnew>
      <param name="red">The red component value for the new structure.
            Valid values are <see cref="F:Leadtools.RasterColor16.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor16.MaximumComponent" />.</param>
      <param name="green">The green component value for the new structure.
            Valid values are <see cref="F:Leadtools.RasterColor16.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor16.MaximumComponent" />.</param>
      <param name="blue">The blue component value for the new structure.
            Valid values are <see cref="F:Leadtools.RasterColor16.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor16.MaximumComponent" />.</param>
      <remarks>
            This structure has no alpha component.
            </remarks>
      <example>
        <!--RasterColor16.RasterColor16-->
      </example>
      <objectivec>
        <pre>
-(id)initWithRed:(int)red 
           green:(int)green 
            blue:(int)blue;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterColor16(
  int red, 
  int green, 
  int blue
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor16.RasterColor16_ObjectiveC(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor16" /> structure with specific values for red, green and blue.
            </summary>
      <param name="red">The red component value for the new structure.
            Valid values are <see cref="F:Leadtools.RasterColor16.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor16.MaximumComponent" />.</param>
      <param name="green">The green component value for the new structure.
            Valid values are <see cref="F:Leadtools.RasterColor16.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor16.MaximumComponent" />.</param>
      <param name="blue">The blue component value for the new structure.
            Valid values are <see cref="F:Leadtools.RasterColor16.MinimumComponent" /> through <see cref="F:Leadtools.RasterColor16.MaximumComponent" />.</param>
      <remarks>
            This structure has no alpha component.
            </remarks>
      <example>
        <!--RasterColor16.RasterColor16-->
      </example>
      <objectivec>
        <pre>
+(id)colorWithRed:(int)red 
            green:(int)green 
             blue:(int)blue;            </pre>
      </objectivec>
    </member>
    <member name="F:Leadtools.RasterColor16.MaximumComponent">
      <summary>
            Maximum value for the alpha, red, green, blue component.
            </summary>
      <isnew>2/28/2009</isnew>
      <remarks>
            This represents the intensity for white
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterColor16.#ctor(System.Int32,System.Int32,System.Int32)" />.
            </example>
      <java>
        <pre>public static final short MAXIMUM_COMPONENT = (short)0xFFFF;</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterColor16.MinimumComponent">
      <summary>
            Minimum value for the alpha, red, green, blue component.
            </summary>
      <isnew>2/28/2009</isnew>
      <remarks>
            This represents the intensity for black
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterColor16.#ctor(System.Int32,System.Int32,System.Int32)" />.
            </example>
      <java>
        <pre>public static final short MINIMUM_COMPONENT = 0;</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterColor16.ToString">
      <summary>
            Overridden. Converts this <see cref="T:Leadtools.RasterColor16" /> structure to a human-readable string.
            </summary>
      <isnew>2/28/2009</isnew>
      <returns>A string that is the name of the color of this <see cref="T:Leadtools.RasterColor16" /> structure.</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>public String toString()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor16.B">
      <summary>
            Gets or sets the blue component of this <see cref="T:Leadtools.RasterColor16" /> structure.
            </summary>
      <isnew>2/28/2009</isnew>
      <value>The blue component of this <see cref="T:Leadtools.RasterColor16" /> structure.</value>
      <noremarks />
      <example>
        <!--RasterColor16Components-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short b;</pre>
      </objectivec>
      <java>
        <pre>
public short getB()
public void setB(short value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor16.G">
      <summary>
            Gets or sets the green component of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <isnew>2/28/2009</isnew>
      <value>The green component of this <see cref="T:Leadtools.RasterColor" /> structure.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="P:Leadtools.RasterColor16.B" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short g;</pre>
      </objectivec>
      <java>
        <pre>
public short getG()
public void setG(short value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor16.R">
      <summary>
            Gets or sets the red component of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <isnew>2/28/2009</isnew>
      <value>The red component of this <see cref="T:Leadtools.RasterColor" /> structure.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="P:Leadtools.RasterColor16.B" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short r;</pre>
      </objectivec>
      <java>
        <pre>
public short getR()
public void setR(short value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterColor16.Reserved">
      <exclude />
    </member>
    <member name="T:Leadtools.RasterColorHelper">
      <summary>
            Helper methods for the <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <remarks>
        <para>Contains helper methods to create and manipulate <see cref="T:Leadtools.RasterColor" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterColorHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.IsEqual(Leadtools.RasterColor,Leadtools.RasterColor)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.RasterColor" /> objects contain the same values.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.RasterColor" /> object to use in the comparison.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.RasterColor" /> object to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.RasterColor" /> objects have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.Create(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> with the specified values.
            </summary>
      <param name="alpha">Alpha component</param>
      <param name="red">Red component</param>
      <param name="green">Green component</param>
      <param name="blue">Blue component</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.Create(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> with the specified values.
            </summary>
      <param name="red">Red component</param>
      <param name="green">Green component</param>
      <param name="blue">Blue component</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.Clone">
      <summary>
            Creates an exact copy of this <see cref="T:Leadtools.RasterColor" /></summary>
      <returns>Exact copy of this <see cref="T:Leadtools.RasterColor" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.MakeReservedColor(Leadtools.RasterColor,System.Boolean)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.MakeEmptyColor(Leadtools.RasterColor,System.Boolean)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromRgbQuad(System.IntPtr)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromUnmanaged(System.IntPtr)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.ToUnmanaged(Leadtools.RasterColor,System.IntPtr)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.ColorRef(Leadtools.RasterColor)">
      <summary>
            A hexadecimal value that represents an RGB color.
            </summary>
      <param name="color">The <see cref="T:Leadtools.RasterColor" /> object.</param>
      <returns>A 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromColorRef(System.UInt32)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromArgb(System.Int32)">
      <summary>
            Creates a <see cref="T:Leadtools.RasterColor" /> from an RGB value.
            </summary>
      <param name="argb">The RGB value.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> structure that this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromRgb(System.Int32)">
      <summary>
            Creates a <see cref="T:Leadtools.RasterColor" /> from an RGB value.
            </summary>
      <param name="rgb">The RGB value.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> structure that this method creates.</returns>
      <noremarks />
      <example>
            This example will create an array of <see cref="T:Leadtools.RasterColor" /> objects containing 256 shades of gray.
            <!--RasterColor.FromRgb--></example>
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromRgba(System.Int32)">
      <summary>
            Creates a <see cref="T:Leadtools.RasterColor" /> from an rgba value.
            </summary>
      <param name="rgba">The rgba value.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> structure that this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.Convert(Leadtools.RasterColor[],System.IntPtr,System.Int32)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.Convert(System.IntPtr,System.Int32)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.Convert(Leadtools.RasterColor[])">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.IsReservedColor(Leadtools.RasterColor)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.IsEmptyColor(Leadtools.RasterColor)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColorHelper.ToRgb(Leadtools.RasterColor)">
      <summary>
            Gets a 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <param name="color">The raster color object.</param>
      <returns>A 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
            The byte ordering this method returns is 00RRBBGG.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.ToArgb(Leadtools.RasterColor)">
      <summary>
            Gets a 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <param name="color">The raster color object.</param>
      <returns>A 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
            The byte ordering this method returns is AARRGGBB.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.ToRgba(Leadtools.RasterColor)">
      <summary>
            Gets a 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.
            </summary>
      <param name="color">The raster color object.</param>
      <returns>A 32-bit value representation of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
            The byte ordering this method returns is RRGGBBAA.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.IsPaletteIndex(Leadtools.RasterColor)">
      <summary>
            Gets a value that determines whether this <see cref="T:Leadtools.RasterColor" /> is a palette index value.
            </summary>
      <param name="color">The raster color object.</param>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.RasterColor" /> is a palette index; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>A <see cref="T:Leadtools.RasterColor" /> object can be a true RGB color or an index value into the palette of an image.</para>
        <para>If the value of <see cref="M:Leadtools.RasterColorHelper.IsPaletteIndex(Leadtools.RasterColor)" /> is <strong>true</strong>, then this color does not contain a true RGB value, instead, the value stored is an index
            into the palette of an image. To get the index value, use <see cref="M:Leadtools.RasterColorHelper.ToRgb(Leadtools.RasterColor)" />.</para>
        <para>If the value of <see cref="M:Leadtools.RasterColorHelper.IsPaletteIndex(Leadtools.RasterColor)" /> is <strong>false</strong>, then this color contains a true RGB value.</para>
        <para>To create a color that is a palette index, use the <see cref="M:Leadtools.RasterColorHelper.FromPaletteIndex(System.Int32)" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromPaletteIndex(System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> object that is an index into a palette
            </summary>
      <param name="index">The index value</param>
      <returns>A new <see cref="T:Leadtools.RasterColor" /> object that is an index into a palette.</returns>
      <remarks>
        <para>A <see cref="T:Leadtools.RasterColor" /> object can be a true RGB color or an index value into the palette of an image.</para>
        <para>If the value of <see cref="M:Leadtools.RasterColorHelper.IsPaletteIndex(Leadtools.RasterColor)" /> is <strong>true</strong>, then this color does not contain a true RGB value, instead, the value stored is an index
            into the palette of an image. To get the index value, use <see cref="M:Leadtools.RasterColorHelper.ToRgb(Leadtools.RasterColor)" />.</para>
        <para>If the value of <see cref="M:Leadtools.RasterColorHelper.IsPaletteIndex(Leadtools.RasterColor)" /> is <strong>false</strong>, then this color contains a true RGB value.</para>
        <para>Use this method to create a color that is a palette index.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromKnownColor(Leadtools.RasterKnownColor)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor" /> structure from a known color.
            </summary>
      <param name="knownColor">One of the <see cref="T:Leadtools.RasterKnownColor" /> enumeration members.</param>
      <returns>The new <see cref="T:Leadtools.RasterColor" /> object.</returns>
      <remarks>
        <para>You can use the <see cref="T:Leadtools.RasterKnownColor" /> enumeration to construct <see cref="T:Leadtools.RasterColor" /> objects from colors known by name.</para>
      </remarks>
      <example>
        <!--RasterColor.FromKnownColor-->
      </example>
    </member>
    <member name="M:Leadtools.RasterColorHelper.IsKnownColor(Leadtools.RasterColor)">
      <summary>
            Gets a value indicating whether this <see cref="T:Leadtools.RasterColor" /> structure is a predefined color. Predefined colors are represented by the elements of the <see cref="T:Leadtools.RasterKnownColor" /> enumeration.
            </summary>
      <param name="color">The raster color object.</param>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.RasterColor" /> contains an ARGB value that has a matching <see cref="T:Leadtools.RasterKnownColor" /> enumeration member; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>This property does a comparison of the ARGB values. Therefore, the <see cref="M:Leadtools.RasterColorHelper.IsKnownColor(Leadtools.RasterColor)" /> property might return <strong>true</strong> even if this
            <see cref="T:Leadtools.RasterColor" /> was no creating using the <see cref="M:Leadtools.RasterColorHelper.FromKnownColor(Leadtools.RasterKnownColor)" /> method.</para>
        <para>To get the matching <see cref="T:Leadtools.RasterKnownColor" /> enumeration for a <see cref="T:Leadtools.RasterColor" />, use <see cref="M:Leadtools.RasterColorHelper.GetKnownColor(Leadtools.RasterColor)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.GetKnownColor(Leadtools.RasterColor)">
      <summary>
            Gets the known color enumeration member that matches this color ARGB value.
            </summary>
      <param name="color">The color ARGB value.</param>
      <returns>An <see cref="T:Leadtools.RasterKnownColor" /> enumeration member that matches this color ARGB value. If the color ARGB value does not match any known color,
            <see cref="T:Leadtools.RasterKnownColor">RasterKnownColor.Black</see> is returned.</returns>
      <remarks>
        <para>This method does a comparison of the ARGB values. Therefore, the <see cref="M:Leadtools.RasterColorHelper.GetKnownColor(Leadtools.RasterColor)" /> method might return a valid <see cref="T:Leadtools.RasterKnownColor" /> enumeration member
            even if this <see cref="T:Leadtools.RasterColor" /> was no creating using the <see cref="M:Leadtools.RasterColorHelper.FromKnownColor(Leadtools.RasterKnownColor)" /> method.</para>
        <para>To check whether this <see cref="T:Leadtools.RasterColor" /> has a matching <see cref="T:Leadtools.RasterKnownColor" />, use <see cref="M:Leadtools.RasterColorHelper.IsKnownColor(Leadtools.RasterColor)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromString(System.String)">
      <summary>
            Converts the specified text to a <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="value">A <see cref="T:System.String" /> containing the text value. This must be an HTML compatible string representation of a color.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> this method creates. If the string is null (Nothing in Visual Basic), then an empty <see cref="T:Leadtools.RasterColor" /> will be returned with all color components set to zero.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.GetKnownColorName(Leadtools.RasterKnownColor)">
      <summary>
            Gets the human readable representation of a known color.
            </summary>
      <param name="knownColor">The known color.</param>
      <returns>A <see cref="T:System.String" /> that contains a human readable representation of a known color. For example, "Black" for <see cref="T:Leadtools.RasterKnownColor">RasterKnownColor.Black</see>,
            "Red" for <see cref="T:Leadtools.RasterKnownColor">RasterKnownColor.Red</see>, and so on.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.GetStringDescription(Leadtools.RasterColor)">
      <summary>
            Converts the specified <see cref="T:Leadtools.RasterColor" /> structure to a human-readable string.
            </summary>
      <param name="color">The raster color object.</param>
      <returns>string that is the name of the color of the specified <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.FromHtml(System.String)">
      <summary>
            Converts the specified html color to a <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="value">A <see cref="T:System.String" /> containing the html color value. This must be an HTML compatible string representation of a color.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> this method creates. If the string is null (Nothing in Visual Basic), then an empty <see cref="T:Leadtools.RasterColor" /> will be returned with all color components set to zero.</returns>
      <remarks>
        <para>The input string value can be in one of the following formats:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <para>Known HTML colors, such as "red", "green" or "blue". Case insensitive</para>
              </description>
            </item>
            <item>
              <description>
                <para>#RRGGBB for example #FF0000 for red</para>
              </description>
            </item>
            <item>
              <description>
                <para>rgba(r,g,b,a) for example rgba(255,0,0,1.0) for red</para>
              </description>
            </item>
            <item>
              <description>
                <para>rgb(r,g,b) for example (255,0,0) for red</para>
              </description>
            </item>
          </list>
        </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColorHelper.ToHtml(Leadtools.RasterColor)">
      <summary>
            Converts this <see cref="T:Leadtools.RasterColor" /> structure to an html color.
            </summary>
      <param name="color">The raster color object.</param>
      <returns>An HTML compatible string representation of the color of this <see cref="T:Leadtools.RasterColor" /> structure.</returns>
      <remarks>
        <para>If the color has an alpha component of 255, then the result is in the #RRGGBB format, if the color has an alpha component with any other
            value than 255; then the result is the rgba(r,g,b,a) format.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.RasterColorHelper.Black">
      <summary>
            Gets a <see cref="T:Leadtools.RasterColor" /> that represents black.
            </summary>
      <value>
        <see cref="T:Leadtools.RasterColor" /> that represents black.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.RasterColorHelper.White">
      <summary>
            Gets a <see cref="T:Leadtools.RasterColor" /> that represents white.
            </summary>
      <value>
        <see cref="T:Leadtools.RasterColor" /> that represents white.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.RasterColorHelper.MaximumComponent">
      <summary>
            Maximum value for the alpha, red, green, blue component.
            </summary>
      <value>
            Maximum value for the alpha, red, green, blue component.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterColorHelper.FromRgb(System.Int32)" /></example>
    </member>
    <member name="P:Leadtools.RasterColorHelper.MinimumComponent">
      <summary>
            Minimum value for the alpha, red, green, blue component.
            </summary>
      <value>
            Minimum value for the alpha, red, green, blue component.
            </value>
      <noremarks />
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterColorHelper.FromRgb(System.Int32)" /></example>
    </member>
    <member name="P:Leadtools.RasterColorHelper.ReservedColor">
      <exclude />
    </member>
    <member name="P:Leadtools.RasterColorHelper.EmptyColor">
      <exclude />
    </member>
    <member name="T:Leadtools.RasterColor16Helper">
      <summary>
            Helper methods for the <see cref="T:Leadtools.RasterColor16" /> structure.
            </summary>
      <remarks>
        <para>Contains helper methods to create and manipulate <see cref="T:Leadtools.RasterColor" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterColor16Helper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColor16Helper.IsEqual(Leadtools.RasterColor16,Leadtools.RasterColor16)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.RasterColor16" /> objects contain the same values.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.RasterColor16" /> object to use in the comparison.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.RasterColor16" /> object to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.RasterColor16" /> objects have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor16Helper.Create(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterColor16" /> with the specified values.
            </summary>
      <param name="red">Red component</param>
      <param name="green">Green component</param>
      <param name="blue">Blue component</param>
      <returns>The <see cref="T:Leadtools.RasterColor16" /> object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor16Helper.GetStringDescription(Leadtools.RasterColor16)">
      <summary>
            Converts the specified <see cref="T:Leadtools.RasterColor16" /> structure to a human-readable string.
            </summary>
      <param name="color">The raster color object.</param>
      <returns>string that is the name of the color of the specified <see cref="T:Leadtools.RasterColor16" /> structure.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.RasterColor16Helper.Convert(Leadtools.RasterColor16[],System.IntPtr,System.Int32)">
      <exclude />
    </member>
    <member name="M:Leadtools.RasterColor16Helper.Convert(System.IntPtr,System.Int32)">
      <exclude />
    </member>
    <member name="P:Leadtools.RasterColor16Helper.MaximumComponent">
      <summary>
            Maximum value for the alpha, red, green, blue component.
            </summary>
      <value>
            Maximum value for the alpha, red, green, blue component.
            </value>
      <remarks>
            This represents the intensity for white
            </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.RasterColor16Helper.MinimumComponent">
      <summary>
            Minimum value for the alpha, red, green, blue component.
            </summary>
      <value>
            Minimum value for the alpha, red, green, blue component.
            </value>
      <remarks>
            This represents the intensity for black
            </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterHsvColor">
      <summary>
            Describes a color consisting of relative intensities of hue, saturation, value.
            </summary>
      <keywords>HSV|RGB</keywords>
      <remarks>
        <p>
            For more information on how to use this structure, refer to the <see cref="M:Leadtools.RasterImage.AddColorHsvRangeToRegion(Leadtools.RasterHsvColor,Leadtools.RasterHsvColor,Leadtools.RasterRegionCombineMode)" /> method.
            </p>
        <p>
            This structure does not support signed images.
            </p>
      </remarks>
      <example>
            This example converts between HSV and RGB colors and back.
            <!--RasterHsvColor--></example>
      <objectivec>
        <pre>@interface LTRasterHsvColor : NSObject&lt;NSCopying&gt;</pre>
      </objectivec>
      <java>
        <pre>public final class RasterHsvColor</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterHsvColor.FromRasterColor(Leadtools.RasterColor)">
      <summary>
            Creates a new instance of the <see cref="T:Leadtools.RasterHsvColor" /> from a specific <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="color">The source <see cref="T:Leadtools.RasterColor" />.</param>
      <returns>The <see cref="T:Leadtools.RasterHsvColor" /> object this method creates.</returns>
      <keywords>HSV|RGB</keywords>
      <remarks>
        <para>
            This method does not support signed images.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>+(id)colorFromRasterColor:(LTRasterColor*)color;</pre>
      </objectivec>
      <java>
        <pre>public static RasterHsvColor fromRasterColor(RasterColor color)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterHsvColor.Create_ObjectiveC(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterHsvColor" /> object from the specified h, s, and v values.
            </summary>
      <param name="h">The hue value.</param>
      <param name="s">The saturation value.</param>
      <param name="v">The value value.</param>
      <returns>The <see cref="T:Leadtools.RasterHsvColor" /> object this method creates.</returns>
      <keywords>HSV|RGB</keywords>
      <remarks>
        <para>
            This method does not support signed images.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>
+(id)colorWithH:(int)h 
              s:(int)s 
              v:(int)v;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterHsvColor.#ctor(Leadtools.RasterColor)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterHsvColor" /> object from the specified <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="color">The source color</param>
      <keywords>HSV|RGB</keywords>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
      <java>
        <pre>public RasterHsvColor(RasterColor color)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterHsvColor.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterHsvColor" /> object from the specified h, s, and v values.
            </summary>
      <param name="h">The hue value.</param>
      <param name="s">The saturation value.</param>
      <param name="v">The value value.</param>
      <keywords>HSV|RGB</keywords>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
      <objectivec>
        <pre>
-(id)initWithH:(int)h 
             s:(int)s 
             v:(int)v;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterHsvColor(
  int h, 
  int s, 
  int v, 
  int reserved
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterHsvColor.ToRasterColor">
      <summary>
            Converts the <see cref="T:Leadtools.RasterHsvColor" /> object to a <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterColor" /> object.</returns>
      <keywords>HSV|RGB</keywords>
      <remarks>
        <para>
            This method does not support signed images.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
      <objectivec>
        <pre>-(LTRasterColor*)toRasterColor;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor toRasterColor()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterHsvColor.Empty">
      <summary>
            Represents an <see cref="T:Leadtools.RasterHsvColor" /> that represents an empty HSV color.
            </summary>
      <value>
            An <see cref="T:Leadtools.RasterHsvColor" /> that represents an empty HSV color.
            </value>
      <keywords>HSV|RGB</keywords>
      <remarks>An empty <see cref="T:Leadtools.RasterHsvColor" /> object has all its values set to zero.</remarks>
      <noexample />
      <java>
        <pre>public RasterHsvColor getEmpty()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterHsvColor.H">
      <summary>
            Gets or sets the hue value.
            </summary>
      <value>The hue value.</value>
      <keywords>HSV|RGB</keywords>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char h;</pre>
      </objectivec>
      <java>
        <pre>
public byte getH()
public void setH(byte value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterHsvColor.S">
      <summary>
            Gets or sets the saturation value.
            </summary>
      <value>The saturation value.</value>
      <keywords>HSV|RGB</keywords>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char s;</pre>
      </objectivec>
      <java>
        <pre>
public byte getS()
public void setS(byte value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterHsvColor.V">
      <summary>
            Gets or sets the value value.
            </summary>
      <value>The value value.</value>
      <keywords>HSV|RGB</keywords>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char v;</pre>
      </objectivec>
      <java>
        <pre>
public byte getV()
public void setV(byte value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterHsvColor.Reserved">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <value>
            For internal use by LEADTOOLS.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
      <java>
        <pre>
public byte getReserved()
public void setReserved(byte value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterHsvColorHelper">
      <summary>
            Helper methods for the <see cref="T:Leadtools.RasterHsvColor" /> structure.
            </summary>
      <remarks>
        <para>Contains helper methods to create and manipulate <see cref="T:Leadtools.RasterHsvColor" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterHsvColorHelper.Create(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Leadtools.RasterHsvColor" /> object from the specified h, s, and v values.
            </summary>
      <param name="h">The hue value.</param>
      <param name="s">The saturation value.</param>
      <param name="v">The value value.</param>
      <returns>A new <see cref="T:Leadtools.RasterHsvColor" /> object from the specified h, s, and v values.</returns>
      <keywords>HSV|RGB</keywords>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
    </member>
    <member name="M:Leadtools.RasterHsvColorHelper.FromRasterColor(Leadtools.RasterColor)">
      <summary>
            Creates a new instance of the <see cref="T:Leadtools.RasterHsvColor" /> from a specific <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="color">The source <see cref="T:Leadtools.RasterColor" />.</param>
      <returns>The <see cref="T:Leadtools.RasterHsvColor" /> object this method creates.</returns>
      <keywords>HSV|RGB</keywords>
      <remarks>
        <para>
            This method does not support signed images.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterHsvColorHelper.ToRasterColor(Leadtools.RasterHsvColor)">
      <summary>
            Converts the <see cref="T:Leadtools.RasterHsvColor" /> object to a <see cref="T:Leadtools.RasterColor" /> object.
            </summary>
      <param name="hsvColor">The source <see cref="T:Leadtools.RasterHsvColor" />.</param>
      <returns>The <see cref="T:Leadtools.RasterColor" /> object.</returns>
      <keywords>HSV|RGB</keywords>
      <remarks>
        <para>
            This method does not support signed images.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterHsvColor" /></example>
    </member>
    <member name="P:Leadtools.RasterHsvColorHelper.Empty">
      <summary>
            Represents an <see cref="T:Leadtools.RasterHsvColor" /> that represents an empty HSV color.
            </summary>
      <value>
            An <see cref="T:Leadtools.RasterHsvColor" /> that represents an empty HSV color.
            </value>
      <keywords>HSV|RGB</keywords>
      <remarks>An empty <see cref="T:Leadtools.RasterHsvColor" /> object has all its values set to zero.</remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterImageInformationFlags">
      <summary>
            Indicates which members of the <see cref="T:Leadtools.RasterImageMemoryInformation" /> structure are valid.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterImageInformationFlags.None">
      <summary>
            (0x0000)None.
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageInformationFlags.Memory">
      <summary>
            (0x0001)<see cref="P:Leadtools.RasterImageMemoryInformation.MemoryFlags" /> property is valid
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageInformationFlags.TileSize">
      <summary>
            (0x0002)<see cref="P:Leadtools.RasterImageMemoryInformation.TileSize" /> property is valid
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageInformationFlags.TotalTiles">
      <summary>
            (0x0004)<see cref="P:Leadtools.RasterImageMemoryInformation.TotalTiles" /> property is valid
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageInformationFlags.ConventionalTiles">
      <summary>
            (0x0008)<see cref="P:Leadtools.RasterImageMemoryInformation.ConventionalTiles" /> property is valid
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageInformationFlags.MaximumTileViews">
      <summary>
            (0x0010)<see cref="P:Leadtools.RasterImageMemoryInformation.MaximumTileViews" /> property is valid
            </summary>
    </member>
    <member name="F:Leadtools.RasterImageInformationFlags.TileViews">
      <summary>
            (0x0020)<see cref="P:Leadtools.RasterImageMemoryInformation.TileViews" /> property is valid
            </summary>
    </member>
    <member name="T:Leadtools.RasterImageMemoryInformation">
      <summary>
            Stores information about the memory allocated for the <see cref="T:Leadtools.RasterImage" />'s data.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.Empty">
      <summary>
            Creates a new instance of the <see cref="T:Leadtools.RasterImageMemoryInformation" /> structure with all members set to 0.
            </summary>
      <value>The <see cref="T:Leadtools.RasterImageMemoryInformation" /> object this property creates.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.MemoryFlags">
      <summary>
            Gets or sets type of memory allocated for the image data.
            </summary>
      <value>A combination of the <see cref="T:Leadtools.RasterMemoryFlags" /> enumeration members that specify the type of memory allocated
            for the image data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.TileSize">
      <summary>
            Gets or sets the size for the tile.
            </summary>
      <value>An integer value that specifies the size for the tile.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.TotalTiles">
      <summary>
            Gets or sets the number of tiles.
            </summary>
      <value>An integer value that specifies the number of tiles.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.ConventionalTiles">
      <summary>
            Gets or sets the number of conventional tiles.
            </summary>
      <value>An integer value that specifies the number of conventional tiles.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.MaximumTileViews">
      <summary>
            Gets or sets maximum number of swap buffers for the disk tiles.
            </summary>
      <value>An integer value that specifies maximum number of swap buffers for the disk tiles.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.TileViews">
      <summary>
            Gets or sets the number of swap buffers for the disk tiles.
            </summary>
      <value>An integer value that specifies the number of swap buffers for the disk tiles.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="P:Leadtools.RasterImageMemoryInformation.Flags">
      <summary>
            Gets or sets a value that specify which members of the structure are valid.
            </summary>
      <value>A combination of the <see cref="T:Leadtools.RasterImageInformationFlags" /> enumeration members that specify which members
            of the structure are valid.</value>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.RasterImage.MemoryInformation" />.</example>
    </member>
    <member name="T:Leadtools.RasterMemoryThreshold">
      <summary>
            Holds the memory restrictions used when allocating new <see cref="T:Leadtools.RasterImage" /> objects.
            </summary>
      <keywords>Memory|Memory Threshold|Memory Allocation|Thresholds|Conventional Memory| Allocate|Conventional Buffers</keywords>
      <remarks>
            Use the <see cref="T:Leadtools.RasterDefaults" /> class to get or set the memory restrictions used
            when allocating new <see cref="T:Leadtools.RasterImage" /> objects.
            </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterMemoryThreshold.Empty">
      <summary>
            Returns a new empty <see cref="T:Leadtools.RasterMemoryThreshold" /> object.
            </summary>
      <value>The <see cref="T:Leadtools.RasterMemoryThreshold" /> object this property creates.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterMemoryThreshold.TiledThreshold">
      <summary>
            Gets or sets a value that specifies the minimum amount of free memory required to allow the allocation of conventional
            images.
            </summary>
      <value>
            An integer value that specifies the minimum amount of free memory required to allow the allocation of conventional
            images.  Default value is 0.
            </value>
      <remarks>
        <para>If the amount of free memory falls below this threshold, all images will be allocated as tiled. The exception is
            when the image size is smaller than the tile size - in this case, the image will be allocated in conventional memory.
            </para>
        <para>
            Values less than -100 are not allowed.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.TiledThreshold" /> value is &lt; 0, it represents the required number of free bytes.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.TiledThreshold" /> value is 0, then there is no minimum requirement for free memory, all
            images are allocated as conventional if there is enough memory.
            </para>
        <para>
            Tiled images use a combination of memory tiles and disk tiles. When an image is allocated, LEADTOOLS decides
            how many conventional memory tiles and how many disk tiles should be allocated. The <see cref="P:Leadtools.RasterMemoryThreshold.TiledThreshold" /> value
            influences the number of conventional tiles allocated as follows: the toolkit will not allocate any more conventional
            tiles when the amount of memory falls below <see cref="P:Leadtools.RasterMemoryThreshold.TiledThreshold" />. When the amount of memory falls below 
            <see cref="P:Leadtools.RasterMemoryThreshold.TiledThreshold" />, disk tiles will be allocated and several swap buffers might back these disk tiles. For each
            image there will be at least one swap tile.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.TiledThreshold" /> value is &gt; 0, then it represents a percentage of free memory out of the total
            memory. For example, when you pass -20, tiled images will be used when the amount of free physical and swap memory will
            drop below 20 percent of the total memory.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterMemoryThreshold.MaximumConventionalSize">
      <summary>
            Gets or sets a value that specifies the maximum size for a conventional image (default is 0x7FFFFFFF).
            </summary>
      <value>An integer value that specifies the maximum size for a conventional image (default is 0x7FFFFFFF).</value>
      <remarks>
        <para>
            Any images with a size bigger than this will be allocated as tiled.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.MaximumConventionalSize" /> value is &gt; 0, then it represents the maximum size in bytes.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.MaximumConventionalSize" /> value is &lt; 0, then it represents the maximum size in percentage of
            the total memory (physical and swap).
            </para>
        <para>
            Values less than -100 are not allowed.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterMemoryThreshold.TileSize">
      <summary>
            Gets or sets a value that specifies the size for a size of the tile for tiled images.
            </summary>
      <value>An integer value that specifies the size for a size of the tile for tiled images. Default is 0</value>
      <remarks>
        <para>
            The value for <see cref="P:Leadtools.RasterMemoryThreshold.TileSize" /> must be less than the value of <see cref="P:Leadtools.RasterMemoryThreshold.MaximumConventionalSize" />.
            </para>
        <para>
            All images with a size smaller than <see cref="P:Leadtools.RasterMemoryThreshold.TileSize" /> will be allocated as conventional. (A tiled image of a size
            smaller than <see cref="P:Leadtools.RasterMemoryThreshold.TileSize" /> would consist of only small tile, which is the equivalent of the conventional image).
            </para>
        <para>
            If <see cref="P:Leadtools.RasterMemoryThreshold.TileSize" /> is 0, then LEADTOOLS will pick a default size for the tile. (Currently it is 16MB)
            </para>
        <para>
            The tiles will be smaller than this value and will be a complete number of rows. No rows will be split between tiles.
            </para>
        <para>
            Values less than 0 are not allowed.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterMemoryThreshold.ConventionalTiles">
      <summary>
            Gets or sets a value that specifies the maximum number of tiles that will reside in conventional memory at any time.
            </summary>
      <value>An integer value that specifies the maximum number of tiles that will reside in conventional memory at any time.
            Default is 0.
            </value>
      <remarks>
        <para>
          <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalTiles" /> is used when working with a tiled image. The tiles that do not reside in conventional
            memory will be on disk. (Default is -100 = all tiles are in memory)
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalTiles" /> value is &gt; 0, then this parameter represents the number of tiles.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalTiles" /> value is 0, then all the tiles in a tiled image will be disk tiles.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalTiles" /> value is &lt; 0, then this parameter represents the percentage of tiles that will
            reside in memory.
            </para>
        <para>
            Values less than -100 are not allowed.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterMemoryThreshold.ConventionalBuffers">
      <summary>
            Gets or sets a value that specifies the number of buffers in conventional memory that will cache the disk tiles.
            </summary>
      <value>An integer value that specifies the number of buffers in conventional memory that will cache the disk tiles.
            Default is 1 (one swap buffer will be used to cache the disk tiles).
            </value>
      <remarks>
        <para>
          <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalBuffers" /> is used when working with tiled images which have disk tiles. The swap buffers will
            greatly improve the access to these disk tiles.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalBuffers" /> value is &gt; 0, <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalBuffers" /> indicates the number of swap
            buffers.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalBuffers" /> value is &lt; 0, -<see cref="P:Leadtools.RasterMemoryThreshold.ConventionalBuffers" /> indicates the percentage of
            the total of disk tiles. For example, -50 means the number of buffers is half of the disk tiles will be used.
            </para>
        <para>
            If the <see cref="P:Leadtools.RasterMemoryThreshold.ConventionalBuffers" /> value is 0, no swap buffers will be used. This uses the least amount of memory.
            </para>
        <para>
            It is useful to have more than one swap buffer when you have an algorithm that constantly reads data going up and down.
            Usually, the data is read in one direction (from top to bottom or bottom to top) - in this case, one swap buffer will be
            enough. Also, if you only view a certain portion of the image, you might benefit from having enough swap buffers to cache
            the visible portion of the image (or the image's region).
            </para>
        <para>
            The buffers are dynamic: when data is being read/written to a disk tile, a cache buffer is created (if permitted and there
            is enough memory). If the maximum number of cache buffers for that image has been reached, the cache buffer for the last
            used tile will be deleted and used for the new tile.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="P:Leadtools.RasterMemoryThreshold.MaximumGlobalRasterImageMemory">
      <summary>
            Gets or sets a value that specifies the maximum size allowed for all <see cref="T:Leadtools.RasterImage" /> object allocations.
            </summary>
      <value>
        <para>
            A long value that specifies the maximum size allowed for all <see cref="T:Leadtools.RasterImage" /> object allocations.
            The default value depends on the operating system.
            </para>
        <para>
            On x86 systems, this property defaults to 1.5 GB.
            </para>
        <para>
            On x64 systems, this property defaults to either 1.5 GB or 75 percent of the system's total physical RAM, whichever is larger.
            </para>
      </value>
      <remarks>
        <para>
            You can use this property to control how much memory your application is allowed to use for all <see cref="T:Leadtools.RasterImage" /> objects.
            </para>
        <para>
            When allocating a new <see cref="T:Leadtools.RasterImage" /> object, if the new allocation causes the total memory used by all allocated
            <see cref="T:Leadtools.RasterImage" /> objects to exceed the value of <b>MaximumGlobalRasterImageMemory</b>, then the allocation will throw
            an exception.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterDefaults" />.
            </example>
    </member>
    <member name="T:Leadtools.Internals.ILEADSpellChecker">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Internals.ILEADSpellChecker.GetSupportedLanguages(System.String[],Leadtools.Junk.IVector{System.String},Leadtools.Junk.IVector{System.String},System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Internals.ILEADSpellChecker.Start(System.String,System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Internals.ILEADSpellChecker.Stop">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Internals.ILEADSpellChecker.Spell(System.String)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.Internals.ILEADSpellChecker.IsStarted">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.LeadStreamMode">
      <summary>
            Specifies how the operating system should open a stream.
            </summary>
      <noremarks />
      <noexample />
      <winrt />
      <objectivec>
        <pre>typedef enum LTLeadStreamMode LTLeadStreamMode;</pre>
      </objectivec>
      <java>
        <pre>public enum LeadStreamMode</pre>
      </java>
    </member>
    <member name="F:Leadtools.LeadStreamMode.Open">
      <summary>
            (0)Specifies that the operating system should create a new stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadStreamMode.Create">
      <summary>
            (1)Specifies that the operating system should create a new stream. If the stream already exists, it will be overwritten.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadStreamMode.Truncate">
      <summary>
            (2)Specifies that the operating system should open an existing stream. When the stream is opened, it should be truncated so that its size is zero bytes.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadStreamAccess">
      <summary>
            Specifies the type of stream access requested.
            </summary>
      <noremarks />
      <noexample />
      <winrt />
      <objectivec>
        <pre>typedef enum LTLeadStreamAccess LTLeadStreamAccess;</pre>
      </objectivec>
      <java>
        <pre>public enum LeadStreamAccess</pre>
      </java>
    </member>
    <member name="F:Leadtools.LeadStreamAccess.Read">
      <summary>
            (0)Access to read from a stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadStreamAccess.Write">
      <summary>
            (1)Access to write to a stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadStreamAccess.ReadWrite">
      <summary>
            (2)Access to read and write to a stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadStreamShare">
      <summary>
            Defines constants for read, write, or read/write access to a stream.
            </summary>
      <noremarks />
      <noexample />
      <winrt />
      <objectivec>
        <pre>typedef enum LTLeadStreamShare LTLeadStreamShare;</pre>
      </objectivec>
      <java>
        <pre>public enum LeadStreamShare</pre>
      </java>
    </member>
    <member name="F:Leadtools.LeadStreamShare.None">
      <summary>
            (0)No access.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadStreamShare.Read">
      <summary>
            (1)Read access to the stream. Data can be read from the stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadStreamShare.Write">
      <summary>
            (2)Write access to the stream. Data can be written to the stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadStreamShare.ReadWrite">
      <summary>
            (3)Read and write access to the stream. Data can be written to and read from the stream. 
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadSeekOrigin">
      <summary>
            Specifies the position in a stream to use for seeking.
            </summary>
      <noremarks />
      <noexample />
      <winrt />
      <objectivec>
        <pre>typedef enum LTLeadSeekOrigin LTLeadSeekOrigin;</pre>
      </objectivec>
      <java>
        <pre>public enum LeadSeekOrigin</pre>
      </java>
    </member>
    <member name="F:Leadtools.LeadSeekOrigin.Begin">
      <summary>
            (0)Specifies the beginning of a stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadSeekOrigin.Current">
      <summary>
            (1)Specifies the current position within a stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.LeadSeekOrigin.End">
      <summary>
            (2)Specifies the end of a stream.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.ILeadStream">
      <summary>
            The <b>ILeadStream</b> interface defines methods similar to the operating system file functions.
            </summary>
      <remarks>
        <para>
            The methods in this interface present data as a contiguous sequence of bytes that can be read or written.
            </para>
      </remarks>
      <noexample />
      <winrt />
      <objectivec>
        <pre>@interface LTLeadStream : NSObject</pre>
      </objectivec>
      <java>
        <pre>public interface ILeadStream</pre>
      </java>
    </member>
    <member name="M:Leadtools.ILeadStream.Start">
      <summary>
            Called to start using the <see cref="T:Leadtools.ILeadStream" /> object.
            </summary>
      <returns>true if the <see cref="T:Leadtools.ILeadStream" /> object can be used.</returns>
      <remarks>
        <para>
            Call this method before using the <see cref="T:Leadtools.ILeadStream" /> object.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(BOOL)start;</pre>
      </objectivec>
      <java>
        <pre>boolean start();</pre>
      </java>
    </member>
    <member name="M:Leadtools.ILeadStream.Stop(System.Boolean)">
      <summary>
            Called to stop using the <see cref="T:Leadtools.ILeadStream" /> object.
            </summary>
      <param name="resetPosition">Resets the stream position to the original value.</param>
      <remarks>
        <para>
            Call this method when the <see cref="T:Leadtools.ILeadStream" /> object is no longer needed.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(void)stop:(BOOL)resetPosition;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.ILeadStream.OpenFile(System.String,Leadtools.LeadStreamMode,Leadtools.LeadStreamAccess,Leadtools.LeadStreamShare)">
      <summary>
            Creates, opens or reopens the specified file.
            </summary>
      <param name="fileName">The relative or absolute path for the file that this <see cref="T:Leadtools.ILeadStream" /> object will be associated with.</param>
      <param name="mode">A constant that determines how to open or create the file.</param>
      <param name="access">A constant that determines how the file can be accessed by this <see cref="T:Leadtools.ILeadStream" /> object.</param>
      <param name="share">A constant that determines how the file will be shared by processes.</param>
      <returns>true if the file is opened; otherwise</returns>
      <remarks>
            Use the <see cref="T:Leadtools.ILeadStream" /> interface to perform read and write operations.
            </remarks>
      <noexample />
      <objectivec>
        <pre>-(BOOL)openFile:(NSString*)fileName mode:(LTLeadStreamMode)mode access:(LTLeadStreamAccess)access share:(LTLeadStreamShare)share;</pre>
      </objectivec>
      <java>
        <pre>boolean openFile(String fileName, LeadStreamMode mode, LeadStreamAccess access, LeadStreamShare share);</pre>
      </java>
    </member>
    <member name="M:Leadtools.ILeadStream.Read(System.IntPtr,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.ILeadStream" /> object and writes the data into the specified buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.ILeadStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(unsigned int)read:(unsigned char*)buffer count:(unsigned int)count;</pre>
      </objectivec>
      <java>
        <pre>int read(byte[] buffer, int count);</pre>
      </java>
    </member>
    <member name="M:Leadtools.ILeadStream.Read(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadStream" /> object and writes the data into the specified WinRT IBuffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.ILeadStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.ILeadStream.Read(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadStream" /> object and writes the data into the specified buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.ILeadStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.ILeadStream.Write(System.IntPtr,System.UInt32)">
      <summary>
            Writes the specified number of bytes to the <see cref="T:Leadtools.ILeadStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.ILeadStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.ILeadStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(unsigned int)write:(unsigned char*)buffer count:(unsigned int)count;</pre>
      </objectivec>
      <java>
        <pre>int write(byte[] buffer, int count);</pre>
      </java>
    </member>
    <member name="M:Leadtools.ILeadStream.Write(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from buffer to the <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.ILeadStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.ILeadStream.Write(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from a WinRT buffer to the <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.ILeadStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.ILeadStream.Seek(Leadtools.LeadSeekOrigin,System.Int64)">
      <summary>
            Sets the current position of this <see cref="T:Leadtools.ILeadStream" /> object to the specified value.
            </summary>
      <param name="origin">Specifies the beginning, the end, or the current position as a reference point for <paramref name="origin" />, using a value of type <see cref="T:Leadtools.LeadSeekOrigin" />.</param>
      <param name="offset">The point relative to <paramref name="origin" /> from which to begin seeking.</param>
      <returns>The new position in the stream</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.ILeadStream.CanSeek" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(ssize_t)seek:(LTLeadSeekOrigin)origin offset:(ssize_t)offset;</pre>
      </objectivec>
      <java>
        <pre>long seek(LeadSeekOrigin origin, long offset);</pre>
      </java>
    </member>
    <member name="M:Leadtools.ILeadStream.CloseFile">
      <summary>
            Closes this <see cref="T:Leadtools.ILeadStream" /> object and releases any resources associated with it.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(void)closeFile;</pre>
      </objectivec>
      <java>
        <pre>void closeFile();</pre>
      </java>
    </member>
    <member name="P:Leadtools.ILeadStream.CanSeek">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.ILeadStream" /> object supports seeking.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.ILeadStream" /> object supports seeking; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.ILeadStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getCanSeek) BOOL canSeek;</pre>
      </objectivec>
      <java>
        <pre>boolean canSeek();</pre>
      </java>
    </member>
    <member name="P:Leadtools.ILeadStream.CanRead">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.ILeadStream" /> object supports reading.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.ILeadStream" /> object supports reading; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.ILeadStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getCanRead) BOOL canRead;</pre>
      </objectivec>
      <java>
        <pre>boolean canRead();</pre>
      </java>
    </member>
    <member name="P:Leadtools.ILeadStream.CanWrite">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.ILeadStream" /> object supports writing.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.ILeadStream" /> object supports writing; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.ILeadStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getCanWrite) BOOL canWrite;</pre>
      </objectivec>
      <java>
        <pre>boolean canWrite();</pre>
      </java>
    </member>
    <member name="P:Leadtools.ILeadStream.FileName">
      <summary>
            The name of the file associated with this <see cref="T:Leadtools.ILeadStream" /> object.
            </summary>
      <value>
            The name of the file associated with this <see cref="T:Leadtools.ILeadStream" /> object.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getFileName) NSString* fileName;</pre>
      </objectivec>
      <java>
        <pre>String getFileName();</pre>
      </java>
    </member>
    <member name="P:Leadtools.ILeadStream.IsStarted">
      <summary>
            Indicates whether this <see cref="T:Leadtools.ILeadStream" /> object has been started.
            </summary>
      <value>
            true if this <see cref="T:Leadtools.ILeadStream" /> object has been started; false, otherwise.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getIsStarted) BOOL isStarted;</pre>
      </objectivec>
      <java>
        <pre>void stop(boolean resetPosition);</pre>
      </java>
    </member>
    <member name="T:Leadtools.Junk.IBuffer">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IBuffer.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IStorageFile">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IStorageFile.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IRandomAccessStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IRandomAccessStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IInputStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IInputStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IOutputStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IOutputStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.InMemoryRandomAccessStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.InMemoryRandomAccessStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.WriteOnlyArray`1">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.WriteOnlyArray`1.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.IVector`1">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IVector`1.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.IAsyncAction">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IAsyncAction.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.LeadBufferStream">
      <summary>
            The <see cref="T:Leadtools.LeadBufferStream" /> class provides an implementation of the <see cref="T:Leadtools.ILeadStream" /> interface that operates on a memory buffer.
            </summary>
      <remarks>
        <para>
            The <see cref="T:Leadtools.LeadBufferStream" /> class uses an <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> for the stream's storage.  This class supports read, write and seek operations.
            </para>
      </remarks>
      <noexample />
      <winrt />
      <objectivec>
        <pre>@interface LTLeadDataStream : LTLeadStream</pre>
      </objectivec>
      <java>
        <pre>public final class LeadBufferStream implements ILeadStream</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.Dispose">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadBufferStream.#ctor(Leadtools.Junk.IBuffer,System.UInt64,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadBufferStream" /> object using the specified buffer as storage.
            </summary>
      <param name="buffer">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that will be used as storage for the new <see cref="T:Leadtools.LeadBufferStream" /> object.</param>
      <param name="offset">The offset in <paramref name="buffer" /> that will be used as the origin of the new <see cref="T:Leadtools.LeadBufferStream" /> object.</param>
      <param name="disposeBuffer">Value that indicates whether <paramref name="buffer" /> should be disposed when the new <see cref="T:Leadtools.LeadBufferStream" /> object is disposed.</param>
      <remarks>
        <para>
            If <paramref name="disposeBuffer" /> is true, then the <see cref="T:Leadtools.LeadBufferStream" /> will dispose <paramref name="buffer" /> when it is disposed.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadBufferStream.#ctor(System.Byte[],System.UInt64)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadBufferStream" /> object using the specified byte array as storage.
            </summary>
      <param name="buffer">A byte array that will be used as storage for the new <see cref="T:Leadtools.LeadBufferStream" /> object.</param>
      <param name="offset">The offset in <paramref name="buffer" /> that will be used as the origin of the new <see cref="T:Leadtools.LeadBufferStream" /> object.</param>
      <remarks>
        <para>
            The byte array specified by <paramref name="buffer" /> will be copied to an internal buffer managed by the <see cref="T:Leadtools.LeadBufferStream" /> object.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(id)initWithData:(NSData*)inData dataLength:(size_t)inDataLength offset:(ssize_t)inOffset;</pre>
      </objectivec>
      <java>
        <pre>public LeadBufferStream(byte[] buffer)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.Start">
      <summary>
            Called to start using the <see cref="T:Leadtools.LeadBufferStream" /> object.
            </summary>
      <returns>true if the <see cref="T:Leadtools.LeadBufferStream" /> object can be used.</returns>
      <remarks>
        <para>
            Call this method before using the <see cref="T:Leadtools.LeadBufferStream" /> object.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(BOOL)start;</pre>
      </objectivec>
      <java>
        <pre>public boolean start()</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.Stop(System.Boolean)">
      <summary>
            Called to stop using the <see cref="T:Leadtools.LeadBufferStream" /> object.
            </summary>
      <param name="resetPosition">Resets the stream position to the original value.</param>
      <remarks>
        <para>
            Call this method when the <see cref="T:Leadtools.LeadBufferStream" /> object is no longer needed.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(void)stop:(BOOL)resetPosition;</pre>
      </objectivec>
      <java>
        <pre>public void stop(boolean resetPosition)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.OpenFile(System.String,Leadtools.LeadStreamMode,Leadtools.LeadStreamAccess,Leadtools.LeadStreamShare)">
      <summary>
            Creates, opens or reopens the specified file.
            </summary>
      <param name="fileName">The relative or absolute path for the file that this <see cref="T:Leadtools.LeadBufferStream" /> object will be associated with.</param>
      <param name="mode">A constant that determines how to open or create the file.</param>
      <param name="access">A constant that determines how the file can be accessed by this <see cref="T:Leadtools.LeadBufferStream" /> object.</param>
      <param name="share">A constant that determines how the file will be shared by processes.</param>
      <returns>true if the file is open; false, otherwise</returns>
      <remarks>
            Use the <see cref="T:Leadtools.LeadBufferStream" /> interface to perform read and write operations.
            </remarks>
      <noexample />
      <objectivec>
        <pre>
-(BOOL)openFile:(NSString*)fileName 
           mode:(LTLeadStreamMode)mode 
         access:(LTLeadStreamAccess)access 
          share:(LTLeadStreamShare)share;            </pre>
      </objectivec>
      <java>
        <pre>public boolean openFile(String fileName, LeadStreamMode mode, LeadStreamAccess access, LeadStreamShare share)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.Read(System.IntPtr,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadBufferStream" /> object and writes the data into the specified buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadBufferStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(unsigned int)read:(unsigned char*)buffer count:(unsigned int)count;</pre>
      </objectivec>
      <java>
        <pre>public int read(byte[] buffer, int count)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.Read(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadBufferStream" /> object and writes the data into the specified WinRT IBuffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadBufferStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadBufferStream.Read(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadBufferStream" /> object and writes the data into the specified buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadBufferStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadBufferStream.Write(System.IntPtr,System.UInt32)">
      <summary>
            Writes the specified number of bytes to the <see cref="T:Leadtools.LeadBufferStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadBufferStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadBufferStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(unsigned int)write:(unsigned char*)buffer count:(unsigned int)count;</pre>
      </objectivec>
      <java>
        <pre>public int write(byte[] buffer, int count)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.Write(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from buffer to the <see cref="T:Leadtools.LeadBufferStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadBufferStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadBufferStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadBufferStream.Write(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from a WinRT buffer to the <see cref="T:Leadtools.LeadBufferStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadBufferStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadBufferStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadBufferStream.Seek(Leadtools.LeadSeekOrigin,System.Int64)">
      <summary>
            Sets the current position of this <see cref="T:Leadtools.LeadBufferStream" /> object to the specified value.
            </summary>
      <param name="origin">Specifies the beginning, the end, or the current position as a reference point for <paramref name="origin" />, using a value of type <see cref="T:Leadtools.LeadSeekOrigin" />.</param>
      <param name="offset">The point relative to <paramref name="origin" /> from which to begin seeking.</param>
      <returns>The new position in the stream</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadBufferStream.CanSeek" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(ssize_t)seek:(LTLeadSeekOrigin)origin offset:(ssize_t)offset;</pre>
      </objectivec>
      <java>
        <pre>public long seek(LeadSeekOrigin origin, long offset)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadBufferStream.CloseFile">
      <summary>
            Closes this <see cref="T:Leadtools.LeadBufferStream" /> object and releases any resources associated with it.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(void)closeFile;</pre>
      </objectivec>
      <java>
        <pre>public void closeFile()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadBufferStream.Buffer">
      <summary>
            Gets the internal <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that this <see cref="T:Leadtools.LeadBufferStream" /> object uses for storage.
            </summary>
      <value>
            The internal <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that this <see cref="T:Leadtools.LeadBufferStream" /> object uses for storage.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, strong, readonly, getter=getData) NSData* data;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.LeadBufferStream.CanSeek">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadBufferStream" /> object supports seeking.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadBufferStream" /> object supports seeking; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadBufferStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getCanSeek) BOOL canSeek;</pre>
      </objectivec>
      <java>
        <pre>public boolean canSeek()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadBufferStream.CanRead">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadBufferStream" /> object supports reading.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadBufferStream" /> object supports reading; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadBufferStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getCanRead) BOOL canRead;</pre>
      </objectivec>
      <java>
        <pre>public boolean canRead()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadBufferStream.CanWrite">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadBufferStream" /> object supports writing.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadBufferStream" /> object supports writing; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadBufferStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getCanWrite) BOOL canWrite;</pre>
      </objectivec>
      <java>
        <pre>public boolean canWrite()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadBufferStream.FileName">
      <summary>
            The name of the file associated with this <see cref="T:Leadtools.LeadBufferStream" /> object.
            </summary>
      <value>
            The name of the file associated with this <see cref="T:Leadtools.LeadBufferStream" /> object.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getFileName) NSString* fileName;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.LeadBufferStream.IsStarted">
      <summary>
            Indicates whether this <see cref="T:Leadtools.LeadBufferStream" /> object has been started.
            </summary>
      <value>
            true if this <see cref="T:Leadtools.LeadBufferStream" /> object has been started; <strong>false</strong>, otherwise.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getIsStarted) BOOL isStarted;</pre>
      </objectivec>
      <java>
        <pre>public boolean isStarted</pre>
      </java>
    </member>
    <member name="T:Leadtools.LeadFileStream">
      <summary>
            The <see cref="T:Leadtools.LeadFileStream" /> class provides an implementation of the <see cref="T:Leadtools.ILeadStream" /> interface that operates on a disk file.
            </summary>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadFileStream.Dispose">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadFileStream.#ctor(System.String)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadFileStream" /> object using the specified buffer as storage.
            </summary>
      <param name="fileName">The path to a file that will be used as storage for the new <see cref="T:Leadtools.LeadFileStream" /> object.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Start">
      <summary>
            Called to start using the <see cref="T:Leadtools.LeadFileStream" /> object.
            </summary>
      <returns>true if the <see cref="T:Leadtools.LeadFileStream" /> object can be used.</returns>
      <remarks>
        <para>
            Call this method before using the <see cref="T:Leadtools.LeadFileStream" /> object.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Stop(System.Boolean)">
      <summary>
            Called to stop using the <see cref="T:Leadtools.LeadFileStream" /> object.
            </summary>
      <param name="resetPosition">Resets the stream position to the original value.</param>
      <remarks>
        <para>
            Call this method when the <see cref="T:Leadtools.LeadFileStream" /> object is no longer needed.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.OpenFile(System.String,Leadtools.LeadStreamMode,Leadtools.LeadStreamAccess,Leadtools.LeadStreamShare)">
      <summary>
            Creates, opens or reopens the specified file.
            </summary>
      <param name="fileName">The relative or absolute path for the file that this <see cref="T:Leadtools.LeadFileStream" /> object will be associated with.</param>
      <param name="mode">A constant that determines how to open or create the file.</param>
      <param name="access">A constant that determines how the file can be accessed by this <see cref="T:Leadtools.LeadFileStream" /> object.</param>
      <param name="share">A constant that determines how the file will be shared by processes.</param>
      <returns>true if the file is open; <strong>false</strong>, otherwise.</returns>
      <remarks>
            Use the <see cref="T:Leadtools.LeadFileStream" /> interface to perform read and write operations.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Read(System.IntPtr,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadFileStream" /> object and writes the data into the specified buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadFileStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Read(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadFileStream" /> object and writes the data into the specified WinRT IBuffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadFileStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Read(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadFileStream" /> object and writes the data into the specified buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadFileStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Write(System.IntPtr,System.UInt32)">
      <summary>
            Writes the specified number of bytes to the <see cref="T:Leadtools.LeadFileStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadFileStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadFileStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Write(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from buffer to the <see cref="T:Leadtools.LeadFileStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadFileStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadFileStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Write(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from a WinRT buffer to the <see cref="T:Leadtools.LeadFileStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadFileStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadFileStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.Seek(Leadtools.LeadSeekOrigin,System.Int64)">
      <summary>
            Sets the current position of this <see cref="T:Leadtools.LeadFileStream" /> object to the specified value.
            </summary>
      <param name="origin">Specifies the beginning, the end, or the current position as a reference point for <paramref name="origin" />, using a value of type <see cref="T:Leadtools.LeadSeekOrigin" />.</param>
      <param name="offset">The point relative to <paramref name="origin" /> from which to begin seeking.</param>
      <returns>The new position in the stream</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadFileStream.CanSeek" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadFileStream.CloseFile">
      <summary>
            Closes this <see cref="T:Leadtools.LeadFileStream" /> object and releases any resources associated with it.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadFileStream.Buffer">
      <summary>
            Gets the internal <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that this <see cref="T:Leadtools.LeadFileStream" /> object uses for storage.
            </summary>
      <value>
            The internal <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that this <see cref="T:Leadtools.LeadFileStream" /> object uses for storage.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadFileStream.CanSeek">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadFileStream" /> object supports seeking.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadFileStream" /> object supports seeking; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadFileStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadFileStream.CanRead">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadFileStream" /> object supports reading.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadFileStream" /> object supports reading; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadFileStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadFileStream.CanWrite">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadFileStream" /> object supports writing.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadFileStream" /> object supports writing; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadFileStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadFileStream.FileName">
      <summary>
            The name of the file associated with this <see cref="T:Leadtools.LeadFileStream" /> object.
            </summary>
      <value>
            The name of the file associated with this <see cref="T:Leadtools.LeadFileStream" /> object.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadFileStream.IsStarted">
      <summary>
            Indicates whether this <see cref="T:Leadtools.LeadFileStream" /> object has been started.
            </summary>
      <value>
            true if this <see cref="T:Leadtools.LeadFileStream" /> object has been started; <strong>false</strong>, otherwise.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadStream">
      <summary>
            The <see cref="T:Leadtools.LeadStream" /> class provides a generic implementation of the <see cref="T:Leadtools.ILeadStream" /> interface that operates on a variety of stream types.
            </summary>
      <remarks>
        <para>
            The <see cref="T:Leadtools.LeadStream" /> class uses a variety of different stream types for the <see cref="T:Leadtools.LeadStream" />'s storage.
            </para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadStream.Dispose">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadStream.#ctor(Leadtools.Junk.IStorageFile)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadStream" /> object using the specified <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.istoragefile.aspx">IStorageFile</a> as storage.
            </summary>
      <param name="file">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.istoragefile.aspx">IStorageFile</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.#ctor(Leadtools.Junk.IRandomAccessStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadStream" /> object using the specified <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx">IRandomAccessStream</a> as storage.
            </summary>
      <param name="stream">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx">IRandomAccessStream</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="disposeStream">Value that indicates whether <paramref name="stream" /> should be disposed when the new <see cref="T:Leadtools.LeadStream" /> object is disposed.</param>
      <remarks>
        <para>
            If <paramref name="disposeStream" /> is true, then the <see cref="T:Leadtools.LeadStream" /> will dispose <paramref name="stream" /> when it is disposed.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.#ctor(Leadtools.Junk.IInputStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadStream" /> object using the specified <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.iinputstream.aspx">IInputStream</a> as storage.
            </summary>
      <param name="stream">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.iinputstream.aspx">IInputStream</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="disposeStream">Value that indicates whether <paramref name="stream" /> should be disposed when the new <see cref="T:Leadtools.LeadStream" /> object is disposed.</param>
      <remarks>
        <para>
            If <paramref name="disposeStream" /> is true, then the <see cref="T:Leadtools.LeadStream" /> will dispose <paramref name="stream" /> when it is disposed.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.#ctor(Leadtools.Junk.IOutputStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadStream" /> object using the specified <see cref="T:Leadtools.Junk.IOutputStream" /> as storage.
            </summary>
      <param name="stream">An <see cref="T:Leadtools.Junk.IOutputStream" /> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="disposeStream">Value that indicates whether <paramref name="stream" /> should be disposed when the new <see cref="T:Leadtools.LeadStream" /> object is disposed.</param>
      <remarks>
        <para>
            If <paramref name="disposeStream" /> is true, then the <see cref="T:Leadtools.LeadStream" /> will dispose <paramref name="stream" /> when it is disposed.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.#ctor(Leadtools.Junk.InMemoryRandomAccessStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.LeadStream" /> object using the specified <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.inmemoryrandomaccessstream.aspx">InMemoryRandomAccessStream</a> as storage.
            </summary>
      <param name="stream">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.inmemoryrandomaccessstream.aspx">InMemoryRandomAccessStream</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="disposeStream">Value that indicates whether <paramref name="stream" /> should be disposed when the new <see cref="T:Leadtools.LeadStream" /> object is disposed.</param>
      <remarks>
        <para>
            If <paramref name="disposeStream" /> is true, then the <see cref="T:Leadtools.LeadStream" /> will dispose <paramref name="stream" /> when it is disposed.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Start">
      <summary>
            Called to start using the <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <returns>true if the <see cref="T:Leadtools.LeadStream" /> object can be used.</returns>
      <remarks>
        <para>
            Call this method before using the <see cref="T:Leadtools.LeadStream" /> object.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Stop(System.Boolean)">
      <summary>
            Called to stop using the <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <param name="resetPosition">Resets the stream position to the original value.</param>
      <remarks>
        <para>
            Call this method when the <see cref="T:Leadtools.LeadStream" /> object is no longer needed.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.OpenFile(System.String,Leadtools.LeadStreamMode,Leadtools.LeadStreamAccess,Leadtools.LeadStreamShare)">
      <summary>
            Creates, opens or reopens the specified file.
            </summary>
      <param name="fileName">The relative or absolute path for the file that this <see cref="T:Leadtools.LeadStream" /> object will be associated with.</param>
      <param name="mode">A constant that determines how to open or create the file.</param>
      <param name="access">A constant that determines how the file can be accessed by this <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="share">A constant that determines how the file will be shared by processes.</param>
      <returns>true if the file is open; <strong>false</strong>, otherwise.</returns>
      <remarks>
            Use the <see cref="T:Leadtools.LeadStream" /> interface to perform read and write operations.
            </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Read(System.IntPtr,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadStream" /> object and writes the data into the specified unmanaged buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Read(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadStream" /> object and writes the data into the specified WinRT IBuffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Read(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Reads a specified number of bytes from the <see cref="T:Leadtools.LeadStream" /> object and writes the data into the specified buffer.
            </summary>
      <param name="buffer">The buffer to write the data into.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where reading begins.</param>
      <param name="count">The maximum number of bytes to read.</param>
      <returns>The total number of bytes read into the buffer. The result value can be less than the number of bytes
            requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero)
            if the end of the stream has been reached</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadStream.CanRead" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Write(System.IntPtr,System.UInt32)">
      <summary>
            Writes the specified number of bytes from an unmanaged buffer to the <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Write(System.Byte[],System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from buffer to the <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Write(Leadtools.Junk.IBuffer,System.Int32,System.UInt32)">
      <summary>
            Writes the specified number of bytes from a WinRT buffer to the <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <param name="buffer">The buffer containing data to write to the stream.</param>
      <param name="bufferIndex">Index into <paramref name="buffer" /> where writing begins.</param>
      <param name="count">The maximum number of bytes to write.</param>
      <returns>The total number of bytes written into the <see cref="T:Leadtools.LeadStream" /> object.</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadStream.CanWrite" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.Seek(Leadtools.LeadSeekOrigin,System.Int64)">
      <summary>
            Sets the current position of this <see cref="T:Leadtools.LeadStream" /> object to the specified value.
            </summary>
      <param name="origin">Specifies the beginning, the end, or the current position as a reference point for <paramref name="origin" />, using a value of type <see cref="T:Leadtools.LeadSeekOrigin" />.</param>
      <param name="offset">The point relative to <paramref name="origin" /> from which to begin seeking.</param>
      <returns>The new position in the stream</returns>
      <remarks>
        <para>
            Use the <see cref="P:Leadtools.LeadStream.CanSeek" /> property to determine whether the current instance supports reading.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStream.CloseFile">
      <summary>
            Closes this <see cref="T:Leadtools.LeadStream" /> object and releases any resources associated with it.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.File">
      <summary>
            Gets the <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.istoragefile.aspx">IStorageFile</a> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </summary>
      <value>
            The <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.istoragefile.aspx">IStorageFile</a> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.RandomAccessStream">
      <summary>
            Gets the <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx">IRandomAccessStream</a> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </summary>
      <value>
            The <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx">IRandomAccessStream</a> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.InputStream">
      <summary>
            Gets the <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.iinputstream.aspx">IInputStream</a> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </summary>
      <value>
            The <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.iinputstream.aspx">IInputStream</a> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.OutputStream">
      <summary>
            Gets the <see cref="T:Leadtools.Junk.IOutputStream" /> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </summary>
      <value>
            The <see cref="T:Leadtools.Junk.IOutputStream" /> that this <see cref="T:Leadtools.LeadStream" /> object is using as storage.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.Buffer">
      <summary>
            Gets the internal <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that this <see cref="T:Leadtools.LeadStream" /> object uses for storage.
            </summary>
      <value>
            The internal <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that this <see cref="T:Leadtools.LeadStream" /> object uses for storage.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.CanSeek">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadStream" /> object supports seeking.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadStream" /> object supports seeking; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.CanRead">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadStream" /> object supports reading.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadStream" /> object supports reading; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.CanWrite">
      <summary>
            Gets a value indicating whether the current <see cref="T:Leadtools.LeadStream" /> object supports writing.
            </summary>
      <value>
            true if the <see cref="T:Leadtools.LeadStream" /> object supports writing; <strong>false</strong>, otherwise.
            </value>
      <remarks>
        <para>
            If the <see cref="T:Leadtools.LeadStream" /> object is closed, this property returns false.
            </para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.FileName">
      <summary>
            The name of the file associated with this <see cref="T:Leadtools.LeadStream" /> object.
            </summary>
      <value>
            The name of the file associated with this <see cref="T:Leadtools.LeadStream" /> object.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadStream.IsStarted">
      <summary>
            Indicates whether this <see cref="T:Leadtools.LeadStream" /> object has been started.
            </summary>
      <value>
            true if this <see cref="T:Leadtools.LeadStream" /> object has been started; <strong>false</strong>, otherwise.
            </value>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadStreamFactory">
      <summary>
            The <see cref="T:Leadtools.LeadStreamFactory" /> class provides helper functions for creating an <see cref="T:Leadtools.ILeadStream" /> instance.
            </summary>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(System.String)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified file as storage.
            </summary>
      <param name="fileName">The path to a file that will be used as storage for the new <see cref="T:Leadtools.ILeadStream" /> object.</param>
      <returns>A new a new <see cref="T:Leadtools.ILeadStream" />.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(Leadtools.Junk.IRandomAccessStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified stream as storage.
            </summary>
      <param name="stream">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.irandomaccessstream.aspx">IRandomAccessStream</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="autoDisposeStream">
        <strong>true</strong> to automatically dispose <paramref name="stream" /> when the returned <see cref="T:Leadtools.ILeadStream" /> object is disposed, otherwise; <strong>false.</strong>.
            When this parameter is <strong>true</strong>, the returned <see cref="T:Leadtools.ILeadStream" /> object takes ownership of <paramref name="stream" />.</param>
      <returns>The lead stream object.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(Leadtools.Junk.IInputStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified stream as storage.
            </summary>
      <param name="stream">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.iinputstream.aspx">IInputStream</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="autoDisposeStream">
        <strong>true</strong> to automatically dispose <paramref name="stream" /> when the returned <see cref="T:Leadtools.ILeadStream" /> object is disposed, otherwise; <strong>false.</strong>.
            When this parameter is <strong>true</strong>, the returned <see cref="T:Leadtools.ILeadStream" /> object takes ownership of <paramref name="stream" />.</param>
      <returns>The lead stream object.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(Leadtools.Junk.IOutputStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified stream as storage.
            </summary>
      <param name="stream">An <see cref="T:Leadtools.Junk.IOutputStream" /> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="autoDisposeStream">
        <strong>true</strong> to automatically dispose <paramref name="stream" /> when the returned <see cref="T:Leadtools.ILeadStream" /> object is disposed, otherwise; <strong>false.</strong>.
            When this parameter is <strong>true</strong>, the returned <see cref="T:Leadtools.ILeadStream" /> object takes ownership of <paramref name="stream" />.</param>
      <returns>The lead stream object.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(Leadtools.Junk.InMemoryRandomAccessStream,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified stream as storage.
            </summary>
      <param name="stream">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.inmemoryrandomaccessstream.aspx">InMemoryRandomAccessStream</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="autoDisposeStream">
        <strong>true</strong> to automatically dispose <paramref name="stream" /> when the returned <see cref="T:Leadtools.ILeadStream" /> object is disposed, otherwise; <strong>false.</strong>.
            When this parameter is <strong>true</strong>, the returned <see cref="T:Leadtools.ILeadStream" /> object takes ownership of <paramref name="stream" />.</param>
      <returns>The lead stream object.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(Leadtools.Junk.IStorageFile)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified file as storage.
            </summary>
      <param name="file">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.istoragefile.aspx">IStorageFile</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <returns>The lead stream object.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(Leadtools.Junk.IBuffer,System.UInt64,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified buffer as storage.
            </summary>
      <param name="buffer">An <a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.storage.streams.ibuffer.aspx">IBuffer</a> that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="offset">The offset in <paramref name="buffer" /> that will be used as the origin of the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="autoDisposeBuffer">true to dispose of the buffer automatically; otherwise, it is false.</param>
      <returns>The lead stream object.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadStreamFactory.Create(System.Byte[],System.UInt64)">
      <summary>
            Constructs a new <see cref="T:Leadtools.ILeadStream" /> using the specified buffer as storage.
            </summary>
      <param name="buffer">A byte array that will be used as storage for the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <param name="offset">The offset in <paramref name="buffer" /> that will be used as the origin of the new <see cref="T:Leadtools.LeadStream" /> object.</param>
      <returns>The lead stream object.</returns>
      <remarks>
        <para>The returned <see cref="T:Leadtools.ILeadStream" /> can be be disposed by casting it as <see cref="T:System.IDisposable" /> and use the <see cref="M:System.IDisposable.Dispose" /> method.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.RasterCommentMetadataDataType">
      <summary>
            Indicates the data type for a metadata comment.
            </summary>
      <remarks>
        <para>For more information, refer to <see cref="T:L.Topics.IPTCComments">IPTC Comments</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.JPEGAndLEADFileComments">JPEG and LEAD File Comments</see>.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>typedef enum LTRasterCommentMetadataDataType LTRasterCommentMetadataDataType;</pre>
      </objectivec>
      <java>
        <pre>public enum RasterCommentMetadataDataType</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataDataType.Ascii">
      <summary>
            (0)ASCII character string
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataDataType.URational">
      <summary>
            (1)Unsigned rational
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataDataType.Rational">
      <summary>
            (2)Rational
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataDataType.Byte">
      <summary>
            (3)Byte
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataDataType.Int16">
      <summary>
            (4)16-bit integer
            </summary>
    </member>
    <member name="T:Leadtools.RasterCommentMetadataType">
      <summary>
            List of available metadata comments.
            </summary>
      <keywords>Exif file comments|Exif files|TIFF files|JPEG files|GPS|DICOM</keywords>
      <remarks>
        <para>When reading or updating Exif comments, you must specify the comment type. Comment fields are constrained by their Exif data type.</para>
        <para>
            All Exif files (TIFF and JPG) can contain the designated TIFF comments. Each TIFF comment field can contain a character string. The maximum field size is 32K, except for the date-time field, which is always 20.</para>
        <para>
          <strong>NOTE:</strong> Please refer to the EXIF specification for all possible values for EXIF comments.</para>
        <para>For more information, refer to <see cref="T:L.Topics.GIFFileComments">GIF File Comments</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.PNGFileComments">PNG File Comments</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.TIFFFileComments">TIFF File Comments</see>.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>typedef enum LTRasterCommentMetadataType LTRasterCommentMetadataType;</pre>
      </objectivec>
      <java>
        <pre>public enum RasterCommentMetadataType</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Artist">
      <summary>
            (0)Person who created the image. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Copyright">
      <summary>
            (1)Copyright notice. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.DateTime">
      <summary>
            (2)Date and time (YYYY:MM:DD HH:MM:SS). The field length is 20, counting the NULL terminator. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Description">
      <summary>
            (3)Description of the image. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.HostComputer">
      <summary>
            (4)Computer and operating system in use. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Make">
      <summary>
            (5)Manufacturer of the equipment used to create the image. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Model">
      <summary>
            (6)Model name and number of the equipment. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.NameOfDocument">
      <summary>
            (7)Name of the document from which the image was scanned. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.NameOfPage">
      <summary>
            (8)Page name from which the image was scanned. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Software">
      <summary>
            (9)Name and version of the software package used to create the image. (TIFF Comment)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.PatientName">
      <summary>
            (10)Patient name (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.PatientId">
      <summary>
            (11)Patient ID (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.PatientBirthdate">
      <summary>
            (12)Patient birth date (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.PatientSex">
      <summary>
            (13)Patient sex (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.StudyInstance">
      <summary>
            (14)Study instance ID (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.StudyDate">
      <summary>
            (15)Study date (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.StudyTime">
      <summary>
            (16)Study time (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.StudyReferringPhysician">
      <summary>
            (17)Referring physician (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SeriesModality">
      <summary>
            (18)Series modality (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SeriesId">
      <summary>
            (19)Series ID (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SeriesNumber">
      <summary>
            (20)Series number (DICOM)
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ExifVersion">
      <summary>
            (21)Exif version. LEADTOOLS always writes this value as 0110, meaning version 1.1. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 4.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.DateTimeOriginal">
      <summary>
            (22)Date and time the original image is captured. The format is YYYY:MM:DD HH:MM:SS. The time is in a 24-hour format, and a blank space is left between the date and the time. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 20.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.DateTimeDigitized">
      <summary>
            (23)Date and time the file is generated. If the file is generated directly, as with a digital camera, this is the same as the time the original image is captured. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 20.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ShutterSpeedValue">
      <summary>
            (24)Shutter speed. The unit of measure is APEX. Data type: RasterCommentMetadataDataType.Rational. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Aperture">
      <summary>
            (25)Aperture value. This is the ratio of lens aperture for the focal length. The unit of measure is APEX. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Brightness">
      <summary>
            (26)Brightness value. Data type: RasterCommentMetadataDataType.Rational. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ExposureBias">
      <summary>
            (27)Exposure bias. This is the value for correcting a biased exposure. The unit of measure is APEX. Data type: RasterCommentMetadataDataType.Rational. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.MaxAperture">
      <summary>
            (28)Minimum lens f-number. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SubjectDistance">
      <summary>
            (29)Distance from lens to subject (in meters). Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.MeteringMode">
      <summary>
            (30)Photometry mode. Possible values are:
            <para><list type="table"><item><term>0</term><description>Unidentified</description></item><item><term>1</term><description>Average</description></item><item><term>2</term><description>Center Weighted Average</description></item><item><term>3</term><description>Spot</description></item><item><term>4</term><description>MultiSpot</description></item><item><term>5</term><description>Pattern</description></item><item><term>6</term><description>Partial</description></item><item><term>255</term><description>Others</description></item></list></para><para>Data type: SHORT. Length: 1.</para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.LightSource">
      <summary>
            (31)Light source. Possible values are:
            <para><list type="table"><item><term>0</term><description>Unidentified</description></item><item><term>1</term><description>Daylight</description></item><item><term>2</term><description>Florescence light</description></item><item><term>3</term><description>Tungsten Lamp</description></item><item><term>17</term><description>Standard light source A</description></item><item><term>18</term><description>Standard light source B</description></item><item><term>19</term><description>Standard light source C</description></item><item><term>20</term><description>D55</description></item><item><term>21</term><description>D65</description></item><item><term>22</term><description>D75</description></item><item><term>255</term><description>Others</description></item></list></para><para>Data type: SHORT. Length: 1.</para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Flash">
      <summary>
            (32)Flash On/Off. Possible values are 1 for on or 0 for off. Data type: SHORT. Length: 1.<br></br>
            Please refer to the EXIF specification for all possible values for EXIF comments.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FocalLength">
      <summary>
            (33)Focal length, measured in millimeters. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ExposureTime">
      <summary>
            (34)Exposure time, expressed as a fraction of a second. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FNumber">
      <summary>
            (35)The actual lens F stop (ratio of lens aperture to focal length). Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.MakerNote">
      <summary>
            (36)Maker note. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. The creator of the file determines the data format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.UserComment">
      <summary>
            (37)User comment. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: variable. The first eight bytes specify the data format, and the
            remainder of the comment is in the specified format. The first eight bytes can be any of the following:
            <para><list type="table"><item><term>41 53 43 49 49 00 00 00</term><description>ASCII</description></item><item><term>4A 49 53 00 00 00 00 00</term><description>JIS (Japanese)</description></item><item><term>00 00 00 00 00 00 00 00</term><description>Undefined</description></item></list></para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SubSecTime">
      <summary>
            (38)Decimal extension for seconds that are specified in the RasterCommentMetadataType.DateTime field. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: variable.                       
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SubSecTimeOriginal">
      <summary>
            (39)Decimal extension for seconds that are specified in the RasterCommentMetadataType.DateTimeOriginal field. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: variable.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SubSecTimeDigitized">
      <summary>
            (40)Decimal extension for seconds that are specified in the RasterCommentMetadataType. DateTimeDigitized field. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: variable.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SupportedFlashPixVersion">
      <summary>
            (158)Supported FlashPix version (Exif 2.0). LEADTOOLS always writes 0100 here. Data type: RasterCommentMetadataDataType. Undefined. Length: 4
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ColorSpace">
      <summary>
            (159)Color space (Exif 2.0). Specifies whether the color is calibrated or not. LEADTOOLS always writes this value as 1. Data type: SHORT.
            Length: 1 Possible values are:
            <para><list type="table"><item><term>1</term><description>sRGB (PC monitor conditions)</description></item><item><term>0xFFFF</term><description>Uncalibrated</description></item><item><term>Other</term><description>reserved</description></item></list></para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ExposureProgram">
      <summary>
            (160)Exposure program (Exif 2.0) The class of the program used by the camera to set exposure when the picture is taken. Data type: SHORT.
            Length = 1. Possible values are:
            <para><list type="table"><item><term>0</term><description>Not defined</description></item><item><term>1</term><description>Manual</description></item><item><term>2</term><description>Aperture priority</description></item><item><term>4</term><description>Shutter priority</description></item><item><term>5</term><description>Creative program (biased toward depth of field)</description></item><item><term>6</term><description>Action program (biased toward fast shutter speed)</description></item><item><term>7</term><description>Portrait mode (for closeup photos with the background out of focus)</description></item><item><term>Other</term><description>Reserved</description></item></list></para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SpectralSensitivity">
      <summary>
            (161)Spectral sensitivity (Exif) - The spectral sensitivity of each channel of the camera used. It is an ASCII string compatible with the standard developed by the ASTM technical committee. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: any
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IsoSpeedRatings">
      <summary>
            (162)ISO speed ratings (Exif) - the ISO speed and the ISO Latitude of the camera or input device as specified in ISO 12232 Data type: SHORT. Length: any
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.OptoElectricCoefficient">
      <summary>
            (163)Optoelectric coefficient (Exif) - Opto-Electric Conversion function specified in ISO 14524. OECF is the relationship between the camera optical input and the image values. Data type: RasterCommentMetadataDataType. Undefined. Length: ANY. This is an array of m rows and n columns.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.RelatedSoundFile">
      <summary>
            (164)Related audio file (Exif) - the name of an audio file related to the image data. The name should be 8 ASCII chars + '.' + 3 chars for extension + NULL. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 13.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FlashEnergy">
      <summary>
            (165)Flash energy (Exif) - the strobe energy at the time the image is captured, as measured in Beam Candle Power Seconds (BPCS) Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SpatialFrequencyResponse">
      <summary>
            (166)Spatial frequency response (Exif) - the camera or input device spatial frequency table and SFR values in the direction of image width, image height and diagonal direction, as specified in ISO 12233. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: ANY  This is an array of m rows and n columns.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FocalPlaneXResolution">
      <summary>
            (167)Focal plane X Resolution (Exif) - the number of dots per resolution unit on the camera focal plane in the image width (X) direction
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FocalPlaneResolutionUnit">
      <summary>
            (245)Focal plane resolution unit (Exif). This is the resolution unit for the <see cref="T:Leadtools.RasterCommentMetadataType">RasterCommentMetadataType.FocalPlaneXResolution</see>
            and <see cref="T:Leadtools.RasterCommentMetadataType">RasterCommentMetadataType.FocalPlaneYResolution</see> comments.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FocalPlaneYResolution">
      <summary>
            (168)Focal plane Y Resolution (Exif) - the number of dots per inch on the camera focal plane in the image height (Y) direction
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SubjectLocation">
      <summary>
            (169)Subject location (Exif) - the location of the main subject in the scene. The first value is the X column number and the second is the Y row number. Data type: SHORT. Length: 2
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ExposureIndex">
      <summary>
            (170)Exposure index (Exif) - the image sensor type on the camera or input device. Data type: SHORT. Length: 1
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SensingMethod">
      <summary>
            (171)Sensing method (Exif) - the image sensor type on the camera or input device. Data type: SHORT. Length: 1 Possible values are:
            <para><list type="table"><item><term>1</term><description>Not defined</description></item><item><term>2</term><description>One-chip color area sensor</description></item><item><term>3</term><description>Two-chip color area sensor</description></item><item><term>4</term><description>Three-chip color area sensor</description></item><item><term>5</term><description>Color sequential area sensor</description></item><item><term>7</term><description>Trilinear sensor</description></item><item><term>8</term><description>Color sequential sensor</description></item><item><term>other</term><description>Reserved</description></item></list></para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FileSource">
      <summary>
            (172)File source (Exif) - the image source. If a digital camera recorded the image, the value will always be 3, to indicate that the image
            was recorded on a digital camera. Data type: SHORT. Length: 1 Possible values are:
            <para><list type="table"><item><term>3</term><description>Image recorded on a DSC (Digital Still Camera)</description></item><item><term>Other</term><description>Reserved</description></item></list></para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SceneType">
      <summary>
            (173)Scene type (Exif) - the type of scene. If a DSC recorded the image, this value will always be 1, indicating that the image was
            directly photographed. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 1 Possible values are:
            <para><list type="table"><item><term>1</term><description>A directly photographed image</description></item><item><term>Other</term><description>Reserved</description></item></list></para></summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.CfaPattern">
      <summary>
            (174)CFA Pattern (Exif) - the color filter array (CFA) geometric pattern of the image sensor when a one-chip color sensor was applied. It does not apply to any other sensing methods. Data type: RasterCommentMetadataDataType. Undefined. Length: ANY This is an array m x n (horz x vertical), where the pattern is repeated every m pixels on the horizontal and n pixels on the vertical.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SubjectArea">
      <summary>
            (227)Location and area of the main subject in the overall scene. Data type: SHORT. Count: 2 (Location of the subject is given in X, Y coordinates), 3 (Area of the main subject is given as a circle, X, Y, D, where X and Y are the center coordinates and D is the diameter.) and 4 (Area of the main subject is given as a rectangle, X, Y, W, H, where X and Y are the center coordinates, W is the width or the rectangle and H is the height of the rectangle.).
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.CustomRendered">
      <summary>
            (228)Use of special processing on image data, such as rendering geared toward output. When special processing is performed, the reader is expected to disable or minimize any further processing. Data type: SHORT; Count: 1; Possible Values: 0 ( Normal process), 1 (Custom process), Other (Reserved). Default: 0;
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ExposureMode">
      <summary>
            (229)Exposure mode set when the image was shot. In auto-bracketing mode the camera shoots a series of frames of the same scene at different exposure settings. Tag: 41986; Data type: SHORT; Count: 1; Possible values are: 0 (Auto exposure), 1 (Manual exposure), 2 (Auto-bracket), Other (Reserved); Default: none.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.WhiteBalance">
      <summary>
            (230)White balance mode set when the image was shot. Data type: SHORT; Count: 1; Possible values are: 0 (Auto white balance), 1 (Manual white balance), Other (Reserved); Default: none.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.DigitalZoomRatio">
      <summary>
            (231)Digital zoom ratio set when the image was shot. If the numerator of the recorded value is 0, the digital zoom was not used. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>; Count: 1; Default: none.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.FocalLengthIn35MMFilm">
      <summary>
            (232)Equivalent focal length, assuming a 35mm film camera, in mm. A value of 0 means the focal length is unknown. Note that this comment is different from the RasterCommentMetadataType.FocalLength comment. Data type: SHORT; Count: 1; Default: none.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SceneCaptureType">
      <summary>
            (233)Type of scene that was shot. It can also be used to record the mode in which the image was shot. Note that this differs from the RasterCommentMetadataType.SceneType comment. Data type: SHORT; Count: 1; Possible values are: 0 (Standard), 1 (Landscape), 2 (Portrait), 3 (Night scene), Other (Reserved); Default: 0.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GainControl">
      <summary>
            (234)Degree of overall image gain adjustment. Data type: SHORT; Count: 1; Possible values are: 0 (None), 1 (Low gain up), 2 (High gain up), 3 (Low gain down), 4 (High gain down), Other (Reserved); Default: none.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Contrast">
      <summary>
            (235)Direction of contrast processing applied by the camera when the image was shot. Data type: SHORT; Count: 1; Possible values are: 0 ( Normal), 1 (Soft), 2 (Hard), Other (Reserved); Default: 0.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Saturation">
      <summary>
            (236)Direction of saturation processing applied by the camera when the image was shot. Data type: SHORT; Count: 1; Possible values are: 0 ( Normal), 1 (Low saturation), 2 (High saturation), Other (Reserved); Default: 0.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Sharpness">
      <summary>
            (237)Direction of sharpness processing applied by the camera when the image was shot. Data type: SHORT; Count: 1; Possible values are: 0 ( Normal), 1 (Soft), 2 (Hard), Other (Reserved); Default: 0.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.DeviceSettingDescription">
      <summary>
            (238)Information on the picture-taking conditions of a particular camera model. Used only to indicate the picture-taking conditions in the reader. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>; Count: Any; The data is recorded in Unicode using SHORT fro the number of display rows and columns and <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see> for the camera settings. The Unicode (UCS -2) string including Signature is NULL terminated. The specifics of the Unicode string are as given in ISO/IEC 10464-1. Default: none.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.SubjectDistanceRange">
      <summary>
            (239)Distance to the subject. Data type: SHORT; Count: 1; Possible values are: 0 (Unknown), 1 (Macro), 2 (Close view), 3 (Distant view), Other (Reserved); Default: none.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.ImageUniqueId">
      <summary>
            (240)Identifier assigned uniquely to each image. It is recorded as an ASCII string equivalent to hexadecimal notation and 128-bit fixed length. Tag: 42016; Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>; Count: 33; Default: none
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Gamma">
      <summary>
             (246)Indicates the value of coefficient gamma. The formula of transfer function used for image reproduction is expressed as follows:<br />
             (Reproduced value) = (Input value) ^ (gamma).<br />
             (The Reproduced and Input values are normalized to be between 0 and 1). The gamma must be positive. Tag: 42240; Data Type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Rational</see>; Count: 1; Default: none.
             </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsVersionId">
      <summary>
            (41)Version number of the GPS image file directory (IFD). The current version is 2.0.0.0. This comment must be included when any GPS comments are used. Unlike the RasterCommentMetadataType.ExifVersion comment, this comment is written in bytes. A version written as 2.0.0.0 is actually 0x02000000 when coded. Data type: BYTE. Length: 4.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsLatitudeRef">
      <summary>
            (42)North or south latitude. Possible values are "N" for north and "S" for south. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsLatitude">
      <summary>
            (43)Latitude, expressed as three <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see> values. When expressed in degrees, minutes, and seconds, latitude is written as dd/1,mm/1,ss/1. If degrees and minutes are used as the units, and minutes are written with fractions to two decimal places, then latitude is expressed as dd/1,mmmm/100,0/1. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsLongitudeRef">
      <summary>
            (44)East or west longitude. Possible values are "E" for east and "W" for west. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsLongitude">
      <summary>
            (45)The longitude, expressed as three <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see> values. When expressed in degrees, minutes and seconds, longitude is written as ddd/1,mm/1,ss/1. If degrees and minutes are used as the units, and minutes are written with fractions to two decimal places, then longitude is expressed as dd/1,mmmm/100,0/1. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsAltitudeRef">
      <summary>
            (46)Reference altitude. In the current version, sea level is used as the reference, which must be zero. The reference unit is meters. Data type: BYTE. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsAltitude">
      <summary>
            (47)Altitude, in meters, relative to the reference altitude. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsTimestamp">
      <summary>
            (48)Time stamp in UTC (Coordinated Universal Time) time. The time is expressed as three <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see> values, for hours, minutes, and seconds. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsSatellites">
      <summary>
            (49)GPS satellites used for measurement. The coding format is not stipulated. This comment can be used to code information such as the number of satellites, the satellite number, the satellite angle of elevation, its azimuth, and its SNR. If the GPS receiver cannot make a measurement, this comment is NULL. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: variable.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsStatus">
      <summary>
            (50)Status of the GPS receiver at when the image is recorded. Possible values are "A" when measurement in progress and "V" when measurement is interrupted. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsMeasureMode">
      <summary>
            (51)GPS measurement mode. A value of "2" denotes two-dimensional measurement, and "3" denotes three-dimensional measurement. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDop">
      <summary>
            (52)DOP (data precision) value. This comment is an HDOP value during two-dimensional measurement and a PDOP value during three-dimensional measurement. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsSpeedRef">
      <summary>
            (53)Unit for measuring speed. Possible values are "K" for kilometers, "M" for miles, and "N" for knots. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsSpeed">
      <summary>
            (54)Speed of the GPS receiver. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsTrackRef">
      <summary>
            (55)Reference for direction of movement. Possible values are "T" for a true direction and "M" for a magnetic. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsTrack">
      <summary>
            (56)Direction of GPS receiver movement. The range of values is 0.00 to 359.00. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsImageDirectionRef">
      <summary>
            (57)Reference for the direction of photography in the recorded image. Possible values are "T" for a true direction and "M" for a magnetic. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsImageDirection">
      <summary>
            (58)Direction of photography in the recorded image. The range of values is 0.00 to 359.00. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsMapDatum">
      <summary>
            (59)Geodetic survey data used by the receiver. If the geodetic survey data is restricted to Japan, this tag value is " TOKYO " or "WGS-84". Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: variable.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationLatitudeRef">
      <summary>
            (60)North or south latitude for the destination point. Possible values are "N" for north and "S" for south. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationLatitude">
      <summary>
            (61)Latitude of the destination point. The latitude is expressed as three RasterCommentMetadataDataType.URationalvalues, indicating degrees, minutes and seconds. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationLongitudeRef">
      <summary>
            (62)East or west longitude for the destination point. Possible values are "E" for east and "W" for west. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationLongitude">
      <summary>
            (63)Longitude of the destination point. The longitude is expressed as three RasterCommentMetadataDataType.URationalvalues, indicating degrees, minutes and seconds. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationBearingRef">
      <summary>
            (64)Reference for the bearing to the destination point. Possible values are "T" for a true direction and "M" for a magnetic. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationBearing">
      <summary>
            (65)Bearing to the destination point. The range of values is 0.00 to 359.00. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationDistanceRef">
      <summary>
            (66)Unit for measuring distance to the destination point. Possible values are "K" for kilometers, "M" for miles, and "N" for nautical miles. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Ascii</see>. Length: 2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDestinationDistance">
      <summary>
            (67)Distance to the destination point. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.URational</see>. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsProcessingMethod">
      <summary>
            (241)Processing method. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Byte</see>. Length: Any.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsAreaInformation">
      <summary>
            (242)Area. Data type: <see cref="T:Leadtools.RasterCommentMetadataDataType">RasterCommentMetadataDataType.Byte</see>. Length: Any.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDateStamp">
      <summary>
            (243)Date. Data type: SZ. Length: 11.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.GpsDifferential">
      <summary>
            (244)Differential. Data type: Short. Length: 1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Title">
      <summary>
            (175)Title of the image.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Disclaimer">
      <summary>
            (176)String containing the disclaimer of the software used to create the image.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Warning">
      <summary>
            (177)Warning statement associated with the software that created the image.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Misc">
      <summary>
            (178)Miscellaneous information.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Jpeg2000Binary">
      <summary>
            (179)JPEG 2000 binary comment.                         
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.Jpeg2000Latin">
      <summary>
            (180)JPEG 2000 Latin comment.                          
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcFirst">
      <summary>
            (181)The first IPTC comment To get all IPTC comments, use the comment type constant as a loop counter. The first constant is RasterCommentMetadataType.IptcFirst and the last is RasterCommentMetadataType.IptcLast.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcVersion">
      <summary>
            (181)2:0, the version of IPTC comments (read-only). Non-repeatable, (min=2 bytes, max=2). This is the only comment that is binary. The first byte is the lower version number (usually 0) and the second byte is the high version number (the current version is 4 - binary 4, not ascii '4'). LEADTOOLS writes 4 here.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcObjectTypeReference">
      <summary>
            (182)2:3, Object type reference. Non repeatable. Length = 3..67.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcObjectAttributeReference">
      <summary>
            (183)2:4, Object Attribute Reference. Repeatable. Length = 4..68.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcObjectName">
      <summary>
            (184)2:5, Object name. Non repeatable. Length = 1..64.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcEditStatus">
      <summary>
            (185)2:7, Edit status. Non repeatable. Length = 1..64.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcEditorialUpdate">
      <summary>
            (186)2:8, Editorial update. Non repeatable. Length = 2..2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcUrgency">
      <summary>
            (187)2:10, Urgency. Non repeatable. '1' is most urgent, '5' = Normal, '8' is least urgent. Length = 1..1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcSubjectReference">
      <summary>
            (188)2:12, Subject reference. Repeatable. Length = 13..236.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcCategory">
      <summary>
            (189)2:15, Category. Non repeatable. Length = 1..3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcSupplementalCategory">
      <summary>
            (190)2:20, Supplemental category. Repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcFixtureIdentifier">
      <summary>
            (191)2:22, Fixture identifier. Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcKeywords">
      <summary>
            (192)2:25, Keywords. Repeatable. Length = 1..64.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcContentLocationCode">
      <summary>
            (193)2:26, Content location code. Repeatable. Length = 3..3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcContentLocationName">
      <summary>
            (194)2:27, Content location name. Repeatable. Length = 1..64.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcReleaseDate">
      <summary>
            (195)2:30, Release date. Non repeatable. Length = 8..8.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcReleaseTime">
      <summary>
            (196)2:35, Release time. Non repeatable. Length = 11..11.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcExpirationDate">
      <summary>
            (197)2:37, Expiration date. Non repeatable. Length = 8..8.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcExpirationTime">
      <summary>
            (198)2:38, Expiration time. Non repeatable. Length = 11..11.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcSpecialInstructions">
      <summary>
            (199)2:40, Special instructions. Non repeatable. Length = 1..256.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcActionAdvised">
      <summary>
            (200)2:42, Action advised. Non repeatable. Length = 2..2.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcReferenceService">
      <summary>
            (201)2:45, Reference service. Repeatable. Length = 1..10.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcReferenceDate">
      <summary>
            (202)2:47, Reference date. Repeatable. Length = 8..8.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcReferenceNumber">
      <summary>
            (203)2:50, Reference number. Repeatable. Length = 8..8.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcDateCreated">
      <summary>
            (204)2:55, Date created. Non repeatable. Length = 8..8.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcTimeCreated">
      <summary>
            (205)2:60, Time created. Non repeatable. Length = 11..11.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcDigitalCreationDate">
      <summary>
            (206)2:62, Digital creation date. Non repeatable. Length = 8..8.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcDigitalCreationTime">
      <summary>
            (207)2:63, Digital creation time. Non repeatable. Length = 11..11.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcOriginatingProgram">
      <summary>
            (208)2:65, Originating program. Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcProgramVersion">
      <summary>
            (209)2:70, Program version. Non repeatable. Length = 1..10.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcObjectCycle">
      <summary>
            (210)2:75, Object cycle. Non repeatable. Length = 1..1.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcByline">
      <summary>
            (211)2:80, By-line. Repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcBylineTitle">
      <summary>
            (212)2:85, By-line title. Repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcCity">
      <summary>
            (213)2:90, City Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcSubLocation">
      <summary>
            (214)2:92, Sub-location. Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcProvinceState">
      <summary>
            (215)2:95, Province/State. Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcPrimaryLocationCode">
      <summary>
            (216)2:100, Country/Primary location code. Non repeatable. Length = 3..3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcPrimaryLocationName">
      <summary>
            (217)2:101, Country/Primary location name. Non repeatable. Length = 1..64.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcOriginalTransmissionReference">
      <summary>
            (218)2:103, Original transmission reference. Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcHeadline">
      <summary>
            (219)2:105, Headline. Non repeatable. Length = 1..256.                      
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcCredit">
      <summary>
            (220)2:110, Credit. Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcSource">
      <summary>
            (221)2:115, Source. Non repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcCopyright">
      <summary>
            (222)2:116, Copyright Notice. Non repeatable. Length = 1..128.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcContact">
      <summary>
            (223)2:118, Contact. Repeatable. Length = 1..128.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcCaption">
      <summary>
            (224)2:120, Caption/Abstract. Non repeatable. Length = 1..2000.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcAuthor">
      <summary>
            (225)2:122, Writer/Editor. Repeatable. Length = 1..32.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcLanguageIdentifier">
      <summary>
            (226)2:135, Language identifier. Non repeatable. Length = 2..3.
            </summary>
    </member>
    <member name="F:Leadtools.RasterCommentMetadataType.IptcLast">
      <summary>
            (226)The last IPTC comment.
            </summary>
    </member>
    <member name="T:Leadtools.RasterCommentMetadata">
      <summary>
            Extends the <see cref="T:Leadtools.RasterMetadata" /> class to provide functionality for dealing with comment metadata stored within various image file
            formats.
            </summary>
      <keywords>IPTC</keywords>
      <remarks>
        <para>The TIFF file formats support a number of comments that are saved and loaded using predefined tags.</para>
        <para>If the comments do not meet your needs, you can define your own tag for saving additional non-raster data in a TIFF file. For example,
            you may want to define a tag to save annotations.</para>
        <para>The TIFF 6.0 Specification sets aside a range of private tags that developers can define. To avoid conflicts with files created by other
            developers, you can register your tag by contacting Adobe Developer Relations.  The E-Mail address posted on The Unofficial TIFF Home Page
            is <strong>gapdevsup@adobe.com</strong>.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the metadata. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <example>
            This example will write comments of different data types to an existing tif file then read them as a test.
            <!--RasterCommentMetadata--></example>
      <objectivec>
        <pre>@interface LTRasterCommentMetadata : LTRasterMetadata</pre>
      </objectivec>
      <java>
        <pre>public class RasterCommentMetadata extends RasterMetadata implements Serializable</pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterMetadata">
      <summary>
            Provides base functionality for dealing with metadata stored in various image file formats.
            </summary>
      <remarks>
        <para>"Metadata" refers to extra information that is stored with an image, but is not necessary for decoding the image.</para>
        <para>Metadata can contain information about the camera used to take the image, the author, date and time the image was taken,
            where the image was taken, whether the camera has GPS capabilities, etc. When an image is modified, you should 
            preserve the original information, if possible. Metadata includes <strong>markers</strong>, <strong>tags</strong> and
            <strong>comments</strong>.</para>
        <para>Classes which derive from <see cref="T:Leadtools.RasterMetadata" /> include:
            <list type="bullet"><item><description><see cref="T:Leadtools.RasterMarkerMetadata" /></description></item><item><description><see cref="T:Leadtools.RasterTagMetadata" /></description></item><item><description><see cref="T:Leadtools.RasterCommentMetadata" /></description></item></list></para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.RasterMetadata.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadata" /> class.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.RasterCommentMetadata.IptcSeparator">
      <summary>
            The separator when a file has two or more IPTC comments.
            </summary>
      <remarks>
        <para>
          <see cref="F:Leadtools.RasterCommentMetadata.IptcSeparator" /> has an ASCII code of 1 and cannot appear in any comment, so there is not a possibility of 
            confusion about this character is the separator or part of the comment. Do not confuse this with the character '1', whose Ascii code
            is 49!</para>
        <para>For more information, refer to <see cref="T:L.Topics.IPTCComments">IPTC Comments</see>.</para>
      </remarks>
      <example>
        <!--RasterCommentMetadata.IptcSeparator-->
      </example>
      <objectivec>
        <pre>extern const int LTRasterCommentMetadataType_IptcSeparator;</pre>
      </objectivec>
      <java>
        <pre>public static final int IPTC_SEPARATOR = DefineConstants.IPTC_SEPARATOR;</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.GetDataTypeSize(Leadtools.RasterCommentMetadataDataType)">
      <summary>
            Gets the size (in bytes) of the specified <see cref="T:Leadtools.RasterCommentMetadataDataType" />.
            </summary>
      <param name="dataType">The <see cref="T:Leadtools.RasterCommentMetadataDataType" /> for which to get the size.</param>
      <returns>The size (in bytes) of <paramref name="dataType" />.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="F:Leadtools.RasterCommentMetadata.IptcSeparator" />.</example>
      <objectivec>
        <pre>+(unsigned int)getDataTypeSize:(LTRasterCommentMetadataDataType)dataType;</pre>
      </objectivec>
      <java>
        <pre>public static int getDataTypeSize(RasterCommentMetadataDataType dataType)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.GetDataType(Leadtools.RasterCommentMetadataType)">
      <summary>
            Gets the <see cref="T:Leadtools.RasterCommentMetadataDataType" /> of the specified <see cref="T:Leadtools.RasterCommentMetadataType" />.
            </summary>
      <param name="type">The <see cref="T:Leadtools.RasterCommentMetadataType" /> for which to get its <see cref="T:Leadtools.RasterCommentMetadataDataType" />.</param>
      <returns>The <see cref="T:Leadtools.RasterCommentMetadataDataType" /> for the specified <see cref="T:Leadtools.RasterCommentMetadataType" />.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="F:Leadtools.RasterCommentMetadata.IptcSeparator" />.</example>
      <objectivec>
        <pre>+(LTRasterCommentMetadataDataType)getDataType:(LTRasterCommentMetadataType)type;</pre>
      </objectivec>
      <java>
        <pre>public static RasterCommentMetadataDataType getDataType(RasterCommentMetadataType type)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterCommentMetadata" /> class with default values.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public RasterCommentMetadata()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.#ctor(Leadtools.RasterCommentMetadataType,System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterCommentMetadata" /> class with the specified values.
            </summary>
      <param name="type">The type of comment to create.</param>
      <param name="data">The data for the comment.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
      <objectivec>
        <pre>
- (id)initWithType:(LTRasterCommentMetadataType)inType 
              data:(NSData*)inData;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterCommentMetadata(
  RasterCommentMetadataType type, 
  byte[] data
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.Clone">
      <summary>
            Makes an exact copy of this <see cref="T:Leadtools.RasterCommentMetadata" /> object.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterCommentMetadata" /> object that this method creates.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(id)copyWithZone:(NSZone*)zone;</pre>
      </objectivec>
      <java>
        <pre>public RasterCommentMetadata clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.GetData">
      <summary>
            Gets the data (an array of bytes) for this comment.
            </summary>
      <returns>The data for this comment, stored as an array of bytes.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong) NSData* data;</pre>
      </objectivec>
      <java>
        <pre>public byte[] getData()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.SetData(System.Byte[])">
      <summary>
            Sets the data (an array of bytes) for this comment.
            </summary>
      <param name="value">The data for this comment, stored as an array of bytes.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong) NSData* data;</pre>
      </objectivec>
      <java>
        <pre>public void setData(byte[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.ToByte">
      <summary>
            Converts the comment data to an array of bytes.
            </summary>
      <returns>The comment data converted to an array of bytes.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>-(void)toByte:(unsigned char*)buffer itemCount:(unsigned int)itemCount;</pre>
      </objectivec>
      <java>
        <pre>public byte[] toByte()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.FromByte(System.Byte[])">
      <summary>
            Sets the comment data to the specified array of bytes.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>
-(void)fromByte:(const unsigned char*)buffer 
      itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromByte(byte[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.ToAscii">
      <summary>
            Converts the comment data to a string.
            </summary>
      <returns>The comment data converted to a string.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
      <objectivec>
        <pre>-(NSString*)toAscii;</pre>
      </objectivec>
      <java>
        <pre>public String toAscii()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.FromAscii(System.String)">
      <summary>
            Sets the comment data to the specified string.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
      <objectivec>
        <pre>-(void)fromAscii:(NSString*)value;</pre>
      </objectivec>
      <java>
        <pre>public void fromAscii(String value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.ToURational">
      <summary>
            Converts the comment data to an array of <see cref="T:Leadtools.RasterMetadataURational" /> values.
            </summary>
      <returns>The comment data converted to an array of <see cref="T:Leadtools.RasterMetadataURational" /> values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>
-(void)toURational:(LTRasterMetadataURational*)buffer 
         itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public final RasterMetadataURational[] toURational()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.FromURational(Leadtools.RasterMetadataURational[])">
      <summary>
            Sets the comment data to the specified <see cref="T:Leadtools.RasterMetadataURational" /> values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>
-(void)fromURational:(const LTRasterMetadataURational*)buffer 
           itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromURational(RasterMetadataURational[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.ToRational">
      <summary>
            Converts the comment data to an array of <see cref="T:Leadtools.RasterMetadataRational" /> values.
            </summary>
      <returns>The comment data converted to an array of <see cref="T:Leadtools.RasterMetadataRational" /> values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
      <objectivec>
        <pre>
-(void)toRational:(LTRasterMetadataRational*)buffer 
        itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public RasterMetadataRational[] toRational()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.FromRational(Leadtools.RasterMetadataRational[])">
      <summary>
            Sets the comment data to the specified <see cref="T:Leadtools.RasterMetadataRational" /> values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
      <objectivec>
        <pre>
-(void)fromRational:(const LTRasterMetadataRational*)buffer 
          itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromRational(RasterMetadataRational[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.ToInt16">
      <summary>
            Converts the comment data to an array of integer values.
            </summary>
      <returns>The comment data converted to an array of integer values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>
-(void)toInt16:(unsigned short*)buffer 
     itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public short[] toInt16()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterCommentMetadata.FromInt16(System.Int16[])">
      <summary>
            Sets the comment data to the specified integer values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>
-(void)fromInt16:(const unsigned short*)buffer 
       itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromInt16(short[] value)</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterCommentMetadata.Type">
      <summary>
            Gets or sets the type of comment.
            </summary>
      <value>The type of comment.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterCommentMetadataType type;</pre>
      </objectivec>
      <java>
        <pre>
public RasterCommentMetadataType getType()
public void setType(RasterCommentMetadataType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterCommentMetadata.DataType">
      <summary>
            Gets the data type for this comment.
            </summary>
      <value>The data type for this comment.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly, getter=getDataType) LTRasterCommentMetadataDataType dataType;</pre>
      </objectivec>
      <java>
        <pre>public RasterCommentMetadataDataType getDataType()</pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterMarkerMetadata">
      <summary>
            Extends the <see cref="T:Leadtools.RasterMetadata" /> class to provide functionality for dealing with marker metadata
            stored within various image file formats.
            </summary>
      <remarks>
        <para>JPEG files contain metadata information in user-defined markers.</para>
        <para>The user-defined markers are in the range 0xE0 to 0xFE. These markers can have a maximum size of 0xFFFD, or 65533 bytes.</para>
        <para>The markers below 0xE0 are reserved for the encoding of the image and inserting a reserved marker can make a file invalid.
            Therefore, you should not use reserved markers unless you are well acquainted with markers and image encoding in JPEG files.</para>
        <para>TIFF files do not contain markers, however, LEADTOOLS provides a "workaround" for transferring Exif comments from 
            JPEG files to TIFF files, and vice versa. The Exif metadata information from a TIFF file will be loaded as an 
            APP1 marker. Therefore, you can load Exif metadata from an uncompressed file and store it in a compressed Exif 
            file.</para>
        <para>You can also take metadata information from a compressed Exif file and store it in an uncompressed Exif 
            file. Please note however, that some information cannot be stored inside uncompressed Exif files. For example, 
            audio data is stored in APP2 markers and there is no built-in support for saving APP2 markers in TIFF files. 
            However, you can still save the audio data yourself, using a custom tag.</para>
      </remarks>
      <example>
            This example will write different markers to an existing TIF file then read them as a test.
            <!--RasterMarkerMetadata--></example>
      <objectivec>
        <pre>@interface LTRasterMarkerMetadata : LTRasterMetadata</pre>
      </objectivec>
      <java>
        <pre>public class RasterMarkerMetadata extends RasterMetadata implements Serializable</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.Sos">
      <summary>
            Constant which represents the SOS marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.App0">
      <summary>
            Constant which represents the APP0 marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.App1">
      <summary>
            Constant which represents the APP1 marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.App2">
      <summary>
            Constant which represents the APP2 marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.Com">
      <summary>
            Constant which represents the COM marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.Rst0">
      <summary>
            Constant which represents the RST0 marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.Rst7">
      <summary>
            Constant which represents the RST7 marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.Soi">
      <summary>
            Constant which represents the SOI marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="F:Leadtools.RasterMarkerMetadata.Eoi">
      <summary>
            Constant which represents the EOI marker.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
    </member>
    <member name="M:Leadtools.RasterMarkerMetadata.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMarkerMetadata" /> class with default values.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public RasterMarkerMetadata()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterMarkerMetadata.#ctor(System.Int32,System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMarkerMetadata" /> class with the specified values.
            </summary>
      <param name="id">The marker id.</param>
      <param name="data">The data for the marker.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
      <objectivec>
        <pre>
-(id)initWithId:(int)markerId 
           data:(NSData*)inData;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterMarkerMetadata(
  int id, 
  byte[] data
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterMarkerMetadata.Clone">
      <summary>
            Makes an exact copy of this <see cref="T:Leadtools.RasterMarkerMetadata" /> object.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterMarkerMetadata" /> that this method creates.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
      <java>
        <pre>public RasterMarkerMetadata clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterMarkerMetadata.GetData">
      <summary>
            Gets the marker data.
            </summary>
      <returns>An array of bytes which contains the marker data.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
      <objectivec>
        <pre>@property (nonatomic, strong) NSData* data;</pre>
      </objectivec>
      <java>
        <pre>public byte[] getData()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterMarkerMetadata.SetData(System.Byte[])">
      <summary>
            Sets the marker data.
            </summary>
      <param name="value">An array of bytes which contains the marker data</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
      <java>
        <pre>public void setData(byte[] value)</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterMarkerMetadata.Id">
      <summary>
            Gets or sets the marker id.
            </summary>
      <value>ID of the JPEG marker to write. The JPEG markers are uniquely identified by a byte value.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterMarkerMetadata" /></example>
      <objectivec>
        <pre>@property (nonatomic, assign) int markerId;</pre>
      </objectivec>
      <java>
        <pre>
public int getId()
public void setId(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterMetadataRational">
      <summary>
            Encapsulates a rational value, for use with classes derived from <see cref="T:Leadtools.RasterMetadata" />.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="M:Leadtools.RasterMetadataRational.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataRational" /> struct with the specified values.
            </summary>
      <param name="numerator">The value for the numerator.</param>
      <param name="denominator">The value for the denominator.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataRational.Empty">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataRational" /> struct with zero values.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.RasterMetadataRational" /> struct with zero values.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataRational.Numerator">
      <summary>
            Gets and sets the numerator value.
            </summary>
      <value>The numerator value.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataRational.Denominator">
      <summary>
            Gets and sets the denominator value.
            </summary>
      <value>The denominator value.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterCommentMetadata" />.</example>
    </member>
    <member name="T:Leadtools.RasterMetadataURational">
      <summary>
            Encapsulates an unsigned rational value, for use with classes derived from <see cref="T:Leadtools.RasterMetadata" />.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="M:Leadtools.RasterMetadataURational.#ctor(System.UInt32,System.UInt32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataURational" /> struct with the specified values.
            </summary>
      <param name="numerator">The value for the numerator.</param>
      <param name="denominator">The value for the denominator.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataURational.Empty">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataURational" /> struct with zero values.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.RasterMetadataURational" /> struct with zero values.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataURational.Numerator">
      <summary>
            Gets and sets the numerator value.
            </summary>
      <value>The numerator value.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataURational.Denominator">
      <summary>
            Gets and sets the denominator value.
            </summary>
      <value>The denominator value.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="T:Leadtools.RasterMetadataRationalHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.RasterMetadataRational" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.RasterMetadataRational" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterMetadataRationalHelper.Create(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataRational" /> struct with the specified values.
            </summary>
      <param name="numerator">The value for the numerator.</param>
      <param name="denominator">The value for the denominator.</param>
      <returns>A new instance of the <see cref="T:Leadtools.RasterMetadataRational" /> struct with the specified values</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataRationalHelper.Empty">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataRational" /> struct with zero values.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.RasterMetadataRational" /> struct with zero values.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="T:Leadtools.RasterMetadataURationalHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.RasterMetadataURational" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.RasterMetadataURational" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterMetadataURationalHelper.Create(System.UInt32,System.UInt32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataURational" /> struct with the specified values.
            </summary>
      <param name="numerator">The value for the numerator.</param>
      <param name="denominator">The value for the denominator.</param>
      <returns>A new instance of the <see cref="T:Leadtools.RasterMetadataURational" /> struct with the specified values</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="P:Leadtools.RasterMetadataURationalHelper.Empty">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterMetadataURational" /> struct with zero values.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.RasterMetadataURational" /> struct with zero values.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
    </member>
    <member name="T:Leadtools.RasterTagMetadataDataType">
      <summary>
            Indicates the data type for a metadata tag.
            </summary>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.RasterCommentMetadata">RasterCommentMetadataType Enumeration</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.NotesOnExifData">Notes on Exif Data</see>.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>typedef enum LTRasterTagMetadataDataType LTRasterTagMetadataDataType;</pre>
      </objectivec>
      <java>
        <pre>public enum RasterTagMetadataDataType</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Byte">
      <summary>
            (1)Byte
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Ascii">
      <summary>
            (2)ASCII character string
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.SByte">
      <summary>
            (6)Signed byte
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Undefined">
      <summary>
            (7)Undefined
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.UInt16">
      <summary>
            (3)Unsigned 16-bit integer
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Int16">
      <summary>
            (8)Signed 16-bit integer
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.UInt32">
      <summary>
            (4)Unsigned 32-bit integer
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Int32">
      <summary>
            (9)Signed 32-bit integer
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Single">
      <summary>
            (11)Single precision float
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.URational">
      <summary>
            (5)Unsigned rational
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Rational">
      <summary>
            (10)Rational
            </summary>
    </member>
    <member name="F:Leadtools.RasterTagMetadataDataType.Double">
      <summary>
            (12)Double precision float
            </summary>
    </member>
    <member name="T:Leadtools.RasterTagMetadata">
      <summary>
            Extends the <see cref="T:Leadtools.RasterMetadata" /> class to provide functionality for dealing with tag metadata stored within various image file formats.
            </summary>
      <keywords>IPT</keywords>
      <remarks>
        <para>The TIFF file formats support a number of comments that are saved and loaded using predefined tags.</para>
        <para>If the comments do not meet your needs, you can define your own tag for saving additional non-raster data in a TIFF file. For example,
            you may want to define a tag to save annotations.</para>
        <para>The TIFF 6.0 Specification sets aside a range of private tags that developers can define. To avoid conflicts 
            with files created by other developers, you can register your tag by contacting Adobe Developer Relations. 
            The E-Mail address posted on The Unofficial TIFF Home Page is <strong>gapdevsup@adobe.com</strong>.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the metadata. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <example>
            This example will save then load some tags to/from a tif file.
            <!--RasterTagMetadata--></example>
      <objectivec>
        <pre>@interface LTRasterTagMetadata : LTRasterMetadata</pre>
      </objectivec>
      <java>
        <pre>public class RasterTagMetadata extends RasterMetadata implements Serializable</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterTagMetadata.Copyright">
      <summary>
            Constant which represents the Copyright tag.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>extern const int LTRasterTagMetadata_Copyright;</pre>
      </objectivec>
      <java>
        <pre>public transient static final int COPYRIGHT = 0x8298;</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterTagMetadata.GeneralExif">
      <summary>
            Constant which represents the General Exif tag.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>extern const int LTRasterTagMetadata_GeneralExif;</pre>
      </objectivec>
      <java>
        <pre>public transient static final int GENERAL_EXIF = 0x8769;</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterTagMetadata.ExifGps">
      <summary>
            Constant which represents the Exif Gps tag.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>extern const int LTRasterTagMetadata_ExifGps;</pre>
      </objectivec>
      <java>
        <pre>public transient static final int EXIF_GPS = 0x8825;</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterTagMetadata.AnnotationTiff">
      <summary>
            Constant which represents the Annotation tag.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>extern const int LTRasterTagMetadata_AnnotationTiff;</pre>
      </objectivec>
      <java>
        <pre>public transient static final int ANNOTATION_TIFF = 0x80A4;</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.RasterTagMetadata" /> with default values.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public RasterTagMetadata()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.#ctor(System.Int32,Leadtools.RasterTagMetadataDataType,System.Byte[])">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.RasterTagMetadata" /> with the specified values.
            </summary>
      <param name="id">The tag id</param>
      <param name="dataType">The data type of the tag</param>
      <param name="data">The data for the tag</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" />.</example>
      <objectivec>
        <pre>
-(id)initWithId:(int)tagId 
           type:(LTRasterTagMetadataDataType)inType 
           data:(NSData*)inData;            </pre>
      </objectivec>
      <java>
        <pre>
public RasterTagMetadata(
  int id, 
  RasterTagMetadataDataType dataType, 
  byte[] data
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.Clone">
      <summary>
            Makes an exact copy of this <see cref="T:Leadtools.RasterTagMetadata" /> object.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterTagMetadata" /> that this method creates.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterTagMetadata.#ctor" />.</example>
      <java>
        <pre>public RasterTagMetadata clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.GetData">
      <summary>
            Gets the tag data.
            </summary>
      <returns>An array of bytes containing the data for the tag.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.IO.Stream,System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong) NSData* data;</pre>
      </objectivec>
      <java>
        <pre>public byte[] getData()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.SetData(System.Byte[])">
      <summary>
            Sets the tag data.
            </summary>
      <param name="value">An array of bytes containing the data for the tag.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.IO.Stream,System.Int32,System.Int32)" />.</example>
      <java>
        <pre>public void setData(byte[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.GetDataTypeSize(Leadtools.RasterTagMetadataDataType)">
      <summary>
            Gets the size of the specified <see cref="T:Leadtools.RasterTagMetadataDataType" />.
            </summary>
      <param name="dataType">The <see cref="T:Leadtools.RasterTagMetadataDataType" /> for which to get the size.</param>
      <returns>The size in bytes of the specified <see cref="T:Leadtools.RasterTagMetadataDataType" />.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>+(unsigned int)getDataTypeSize:(LTRasterTagMetadataDataType)dataType;</pre>
      </objectivec>
      <java>
        <pre>public static int getDataTypeSize(RasterTagMetadataDataType dataType)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToByte">
      <summary>
            Converts the tag data to an array of bytes.
            </summary>
      <returns>The tag data converted to an array of bytes.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toByte:(unsigned char*)buffer 
    itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public byte[] toByte()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromByte(System.Byte[])">
      <summary>
            Sets the tag data to the specified array of bytes.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterTagMetadata.#ctor" /></example>
      <objectivec>
        <pre>
-(void)fromByte:(const unsigned char*)buffer 
      itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromByte(byte[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToSByte">
      <summary>
            Converts the tag data to an array of signed bytes.
            </summary>
      <returns>The tag data converted to an arry of signed bytes.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toSByte:(char*)buffer 
     itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public byte[] toSByte()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromSByte(System.SByte[])">
      <summary>
            Sets the tag data to the specified array of signed bytes.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromSByte:(const char*)buffer 
       itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromSByte(byte[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToAscii">
      <summary>
            Converts the tag data to a string.
            </summary>
      <returns>The comment data converted to a string.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)" />.</example>
      <objectivec>
        <pre>-(NSString*)toAscii;</pre>
      </objectivec>
      <java>
        <pre>public String toAscii()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromAscii(System.String)">
      <summary>
            Sets the tag data to the specified string.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)" />.</example>
      <objectivec>
        <pre>-(void)fromAscii:(NSString*)value;</pre>
      </objectivec>
      <java>
        <pre>public void fromAscii(String value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToUInt16">
      <summary>
            Converts the tag data to an array of unsigned integer values.
            </summary>
      <returns>The tag data converted to an array of unsigned integer values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toUInt16:(unsigned short*)buffer 
      itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromUInt16(System.UInt16[])">
      <summary>
            Sets the tag data to the specified unsigned integer values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromUInt16:(const unsigned short*)buffer 
        itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToInt16">
      <summary>
            Converts the tag data to an array of integer values.
            </summary>
      <returns>The tag data converted to an array of integer values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toInt16:(short*)buffer 
     itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public short[] toInt16()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromInt16(System.Int16[])">
      <summary>
            Sets the tag data to the specified integer values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromInt16:(const short*)buffer 
       itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromInt16(short[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToUInt32">
      <summary>
            Converts the tag data to an array of unsigned integer values.
            </summary>
      <returns>The tag data converted to an array of unsigned integer values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toUInt32:(unsigned int*)buffer 
      itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public int[] toUInt32()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromUInt32(System.UInt32[])">
      <summary>
            Sets the tag data to the specified unsigned integer values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromUInt32:(const unsigned int*)buffer 
        itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromUInt32(int[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToInt32">
      <summary>
            Converts the tag data to an array of integer values.
            </summary>
      <returns>The tag data converted to an array of integer values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</example>
      <objectivec>
        <pre>
-(void)toInt32:(int*)buffer 
     itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public int[] toInt32()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromInt32(System.Int32[])">
      <summary>
            Sets the tag data to the specified unsigned integer values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromInt32:(const int*)buffer 
       itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromInt32(int[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToURational">
      <summary>
            Converts the tag data to an array of <see cref="T:Leadtools.RasterMetadataURational" /> values.
            </summary>
      <returns>The tag data converted to an array of <see cref="T:Leadtools.RasterMetadataURational" /> values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toURational:(LTRasterMetadataURational*)buffer 
         itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public RasterMetadataURational[] toURational()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromURational(Leadtools.RasterMetadataURational[])">
      <summary>
            Sets the tag data to the specified <see cref="T:Leadtools.RasterMetadataURational" /> values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromURational:(const LTRasterMetadataURational*)buffer 
           itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromURational(RasterMetadataURational[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToRational">
      <summary>
            Converts the tag data to an array of <see cref="T:Leadtools.RasterMetadataRational" /> values.
            </summary>
      <returns>The tag data converted to an array of <see cref="T:Leadtools.RasterMetadataRational" /> values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toRational:(LTRasterMetadataRational*)buffer 
        itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public RasterMetadataRational[] toRational()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromRational(Leadtools.RasterMetadataRational[])">
      <summary>
            Sets the tag data to the specified <see cref="T:Leadtools.RasterMetadataRational" /> values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromRational:(const LTRasterMetadataRational*)buffer 
          itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromRational(RasterMetadataRational[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToSingle">
      <summary>
            Converts the tag data to an array of single precision values.
            </summary>
      <returns>The tag data converted to an array of single precision values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toSingle:(float*)buffer 
      itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public float[] toSingle()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromSingle(System.Single[])">
      <summary>
            Sets the tag data to the specified single precision values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromSingle:(const float*)buffer 
        itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromSingle(float[] value)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.ToDouble">
      <summary>
            Converts the tag data to an array of double precision values.
            </summary>
      <returns>The tag data converted to an array of double precision values.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)toDouble:(double*)buffer 
      itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public double[] toDouble()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterTagMetadata.FromDouble(System.Double[])">
      <summary>
            Sets the tag data to the specified double precision values.
            </summary>
      <param name="value">The data to set.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterTagMetadata" /></example>
      <objectivec>
        <pre>
-(void)fromDouble:(const double*)buffer 
        itemCount:(unsigned int)itemCount;            </pre>
      </objectivec>
      <java>
        <pre>public void fromDouble(double[] value)</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterTagMetadata.Id">
      <summary>
            Gets or sets the tag id.
            </summary>
      <value>The tag id.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int tagId;</pre>
      </objectivec>
      <java>
        <pre>
public int getId()
public void setId(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterTagMetadata.DataType">
      <summary>
            Gets or sets the data type for the tag.
            </summary>
      <value>The data type for the tag.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterTagMetadataDataType dataType;</pre>
      </objectivec>
      <java>
        <pre>
public RasterTagMetadataDataType getDataType()
public void setDataType(RasterTagMetadataDataType value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterTagMetadata.Count">
      <summary>
            Gets the size (in bytes) of the tag data.
            </summary>
      <value>The size in bytes of the tag data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.IO.Stream,System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int count;</pre>
      </objectivec>
      <java>
        <pre>public int getCount()</pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterOverlayAttributes">
      <summary>
            Contains the overlay attributes of a DICOM image.
            </summary>
      <remarks>
        <para>This class is used to get or set the various attributes of an overlay image using
            <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@interface LTRasterOverlayAttributes : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class RasterOverlayAttributes</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterOverlayAttributes.#ctor(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterOverlayAttributes.FromUnmanaged(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterOverlayAttributes.ToUnmanaged(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Origin">
      <summary>
            Origin (top left point), in pixels, of the overlay image.
            </summary>
      <value>A <see cref="T:Leadtools.LeadPoint" /> that specifies the origin (top left point), in pixels, of the overlay image.</value>
      <remarks>
        <para>This origin is relative to the top left point of the displayed main image. This is independent of the main
            image view perspective.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadPoint origin;</pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint getOrigin()
public void setOrigin(LeadPoint value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Color">
      <summary>
            The color used to display those pixels in the overlay image with a value of 1.
            </summary>
      <value>A <see cref="T:Leadtools.RasterColor" /> used to display those pixels in the overlay image with a value of 1.</value>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* color;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getColor()
public void setColor(RasterColor value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.AutoPaint">
      <summary>
            Gets or sets a value which determines whether to paint the overlay automatically when the image is painted.
            </summary>
      <value>true to paint the overlay automatically when the image is painted; otherwise, false.</value>
      <remarks>
        <para>Set the value of this property to true to to paint the overlay automatically when the image is painted (with
            <see cref="M:Leadtools.Drawing.RasterImagePainter.Paint(Leadtools.RasterImage,System.IntPtr,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.Drawing.RasterPaintProperties)">RasterImagePainter.Paint</see>).</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL autoPaint;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getAutoPaint()
public void setAutoPaint(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.AutoProcess">
      <summary>
            Gets or sets a value which determines whether to automatically adjust the overlay image and position when
            the main image changes.
            </summary>
      <value>true to automatically adjust the overlay image and position when the image is changed; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>When the value of this property is true, the overlay image and position will automatically adjust when
            the main image is resized (zoomed in), scrolled, rotated, flipped, reversed, sheared, trimmed.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL autoProcess;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getAutoProcess()
public void setAutoProcess(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.UseBitPlane">
      <summary>
            Gets or sets a value which determines whether the overlay has a corresponding bitplane in the main image.
            </summary>
      <value>true if the overlay has a corresponding bitplane in the main image; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>If the value of this property is true, then <see cref="P:Leadtools.RasterOverlayAttributes.BitPosition" /> should hold the index to the index bitplane.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useBitPlane;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseBitPlane()
public void setUseBitPlane(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.BitPosition">
      <summary>
            Gets or sets the corresponding bit plane associated with an overlay
            </summary>
      <value>The corresponding bit plane associated with an overlay.</value>
      <remarks>
            This property is valid only if <see cref="P:Leadtools.RasterOverlayAttributes.UseBitPlane" /> is set to true. For more information about the
            bit position, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short bitPosition;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitPosition()
public void setBitPosition(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Rows">
      <summary>
            Gets or sets the number of rows in the overlay.
            </summary>
      <value>The number of rows in the overlay.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short rows;</pre>
      </objectivec>
      <java>
        <pre>
public int getRows()
public void setRows(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Columns">
      <summary>
            Gets or sets the number of columns in the overlay.
            </summary>
      <value>The number of columns in the overlay.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short columns;</pre>
      </objectivec>
      <java>
        <pre>
public int getColumns()
public void setColumns(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Type">
      <summary>
            Gets or sets a value that indicates whether this overlay represents a region
            of interest or other graphics.
            </summary>
      <value>A <see cref="T:System.String" /> that indicates whether this overlay represents a region
            of interest or other graphics.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* type;</pre>
      </objectivec>
      <java>
        <pre>
public String getType()
public void setType(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.BitsAllocated">
      <summary>
            Gets or sets the number of bits allocated in the overlay.
            </summary>
      <value>The number of bits allocated in the overlay.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short bitsAllocated;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsAllocated()
public void setBitsAllocated(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Description">
      <summary>
            Gets or sets a value that contains user-defined comments about the overlay.
            </summary>
      <value>A <see cref="T:System.String" /> that contains user-defined comments about the overlay.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* description;</pre>
      </objectivec>
      <java>
        <pre>
public String getDescription()
public void setDescription(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Subtype">
      <summary>
            Gets or sets a value that contains a defined term that identifies the intended purpose of
            the overlay type.
            </summary>
      <value>A <see cref="T:System.String" /> that contains a defined term that identifies the intended purpose of
            the overlay type.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* subtype;</pre>
      </objectivec>
      <java>
        <pre>
public String getSubtype()
public void setSubtype(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.Label">
      <summary>
            Gets or sets a value that contains user defined text, which may be used to label or name this overlay.
            </summary>
      <value>A <see cref="T:System.String" /> that contains user defined text, which may be used to label or name this overlay.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* label;</pre>
      </objectivec>
      <java>
        <pre>
public String getLabel()
public void setLabel(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.RoiArea">
      <summary>
            Gets or sets the number of pixels in the Region Of Interest area.
            </summary>
      <value>The number of pixels in the Region Of Interest area.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) int roiArea; </pre>
      </objectivec>
      <java>
        <pre>
public int getRoiArea()
public void setRoiArea(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.RoiMean">
      <summary>
            Gets or sets the average value of the pixels in the Region Of Interest.
            </summary>
      <value>The average value of the pixels in the Region Of Interest.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) double roiMean; </pre>
      </objectivec>
      <java>
        <pre>
public double getRoiMean()
public void setRoiMean(double value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.RoiStandardDeviation">
      <summary>
            Gets or sets the standard deviation of the pixel values in the Region Of Interest.
            </summary>
      <value>The standard deviation of the pixel values in the Region Of Interest.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) double roiStandardDeviation;</pre>
      </objectivec>
      <java>
        <pre>
public double getRoiStandardDeviation()
public void setRoiStandardDeviation(double value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.FramesInOverlay">
      <summary>
            Gets or sets the number of Frames in the overlay.
            </summary>
      <value>The number of Frames in the overlay.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) int framesInOverlay;</pre>
      </objectivec>
      <java>
        <pre>
public int getFramesInOverlay()
public void setFramesInOverlay(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.ImageFrameOrigin">
      <summary>
            Gets or sets the number of the frame of a multi-frame image to which this overlay applies.
            </summary>
      <value>The number of the frame of a multi-frame image to which this overlay applies.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned short imageFrameOrigin;</pre>
      </objectivec>
      <java>
        <pre>
public int getImageFrameOrigin()
public void setImageFrameOrigin(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterOverlayAttributes.ActivationLayer">
      <summary>
            Gets or sets a value that identifies the layer in which the overlay shall be displayed.
            </summary>
      <value>A <see cref="T:System.String" /> that identifies the layer in which the overlay shall be displayed.</value>
      <remarks>
            For more information, refer to "Overlay Plane Module Attributes" in the DICOM standard and
            <see cref="T:Leadtools.Topics.OverlayOverview">Overlay Overview</see>.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.RasterImage.GetOverlayAttributes(System.Int32,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.GetOverlayAttributes</see> and
            <see cref="M:Leadtools.RasterImage.UpdateOverlayAttributes(System.Int32,Leadtools.RasterOverlayAttributes,Leadtools.RasterGetSetOverlayAttributesFlags)">RasterImage.UpdateOverlayAttributes</see>.
            </example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* activationLayer;</pre>
      </objectivec>
      <java>
        <pre>
public String getActivationLayer()
public void setActivationLayer(String value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.LeadDoubleTools">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.AreClose(System.Double,System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.LessThan(System.Double,System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.GreaterThan(System.Double,System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.LessThanOrClose(System.Double,System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.GreaterThanOrClose(System.Double,System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.IsOne(System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.IsZero(System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.AreClosePoints(Leadtools.LeadPointD,Leadtools.LeadPointD)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.AreCloseSizes(Leadtools.LeadSizeD,Leadtools.LeadSizeD)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.AreCloseRects(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.IsBetweenZeroAndOne(System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.DoubleToInt(System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.RectHasNaN(Leadtools.LeadRectD)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.IsNaN(System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.IsInfinity(System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadDoubleTools.NormalizeAngle(System.Double)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.LeadDoubleTools.NaN">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.LeadMatrix">
      <summary>
            Represents a 3x3 affine transformation matrix used for transformations in 2-D space.
            </summary>
      <remarks>
        <para>A 3x3 matrix is used for transformations in a 2-D x-y plane. Affine transformation matrices can be multiplied to form 
            any number of linear transformations, such as
            rotation and skew (shear), followed by translation. An affine transformation matrix has its final column equal to (0, 0, 1), 
            so only the members in the first two columns
            need to be specified.  Note that vectors are expressed as row-vectors, not column vectors.</para>
        <para>A <see cref="T:Leadtools.LeadMatrix" /> is stored using row-major order and has the following structure:</para>
        <table>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M11" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M12" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M21" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M22" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetX" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            </td>
            <td>1</td>
          </tr>
        </table>
        <para>The members in the last row, <see cref="P:Leadtools.LeadMatrix.OffsetX" /> and <see cref="P:Leadtools.LeadMatrix.OffsetY" />, represent translation values.</para>
        <para>In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:</para>
        <para>(<see cref="P:Leadtools.LeadMatrix.M11" />, <see cref="P:Leadtools.LeadMatrix.M12" />, <see cref="P:Leadtools.LeadMatrix.M21" />, <see cref="P:Leadtools.LeadMatrix.M22" />, <see cref="P:Leadtools.LeadMatrix.OffsetX" />, <see cref="P:Leadtools.LeadMatrix.OffsetY" />)</para>
      </remarks>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadMatrix" /> with the specified values.
            </summary>
      <param name="m11">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M11" /> coefficient.</param>
      <param name="m12">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M12" /> coefficient.</param>
      <param name="m21">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M21" /> coefficient.</param>
      <param name="m22">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M22" /> coefficient.</param>
      <param name="offsetX">The new <see cref="T:Leadtools.LeadMatrix"> LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.OffsetX" /> coefficient.</param>
      <param name="offsetY">The new <see cref="T:Leadtools.LeadMatrix"> LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.OffsetY" /> coefficient.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a new <see cref="T:Leadtools.LeadMatrix" /> with the specified values.
            </summary>
      <param name="m11">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M11" /> coefficient.</param>
      <param name="m12">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M12" /> coefficient.</param>
      <param name="m21">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M21" /> coefficient.</param>
      <param name="m22">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M22" /> coefficient.</param>
      <param name="offsetX">The new <see cref="T:Leadtools.LeadMatrix"> LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.OffsetX" /> coefficient.</param>
      <param name="offsetY">The new <see cref="T:Leadtools.LeadMatrix"> LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.OffsetY" /> coefficient.</param>
      <returns>The resulting <see cref="T:Leadtools.LeadMatrix" /></returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Clone">
      <summary>
            Creates an exact copy of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <returns>A <see cref="T:Leadtools.LeadMatrix" /> that is an exact copy of the original <b>LeadMatrix</b>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.SetIdentity">
      <summary>
            Changes this <see cref="T:Leadtools.LeadMatrix" /> into an identity matrix.
            </summary>
      <remarks>
        <para>For more information, refer to <see cref="P:Leadtools.LeadMatrix.Identity" /></para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.op_Multiply(Leadtools.LeadMatrix,Leadtools.LeadMatrix)">
      <summary>
            Multiplies a <see cref="T:Leadtools.LeadMatrix" /> by another <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="trans1">The first <see cref="T:Leadtools.LeadMatrix" /> to multiply.</param>
      <param name="trans2">The second<see cref="T:Leadtools.LeadMatrix" /> to multiply.</param>
      <returns>The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</returns>
      <remarks>
        <para>Matrix multiplication is not commutative. Multiplying <paramref name="trans1" /> by <paramref name="trans2" /> is not the same as multiplying
            <paramref name="trans2" /> by <paramref name="trans1" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Multiply(Leadtools.LeadMatrix,Leadtools.LeadMatrix)">
      <summary>
            Multiplies a <see cref="T:Leadtools.LeadMatrix" /> by another <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="trans1">The first <see cref="T:Leadtools.LeadMatrix" /> to multiply.</param>
      <param name="trans2">The second<see cref="T:Leadtools.LeadMatrix" /> to multiply.</param>
      <returns>The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</returns>
      <remarks>
        <para>Matrix multiplication is not commutative. Multiplying <paramref name="trans1" /> by <paramref name="trans2" /> is not the same as multiplying
            <paramref name="trans2" /> by <paramref name="trans1" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Append(Leadtools.LeadMatrix)">
      <summary>
            Appends the specified <see cref="T:Leadtools.LeadMatrix" /> to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="matrix">The matrix to append to this <see cref="T:Leadtools.LeadMatrix" />.</param>
      <remarks>
        <para>This operation is the same as multiplying this <see cref="T:Leadtools.LeadMatrix" /> by the matrix passed as the parameter. Matrix multiplication is not commutative, so this
            operation is not the same as multiplying the matrix passed as the parameter by this <see cref="T:Leadtools.LeadMatrix" />; that is, (<c>this</c> * matrix) is not the same as (matrix * <c>this</c>).</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Prepend(Leadtools.LeadMatrix)">
      <summary>
            Prepends the specified <see cref="T:Leadtools.LeadMatrix" /> onto this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="matrix">The matrix to prepend to this <see cref="T:Leadtools.LeadMatrix" />.</param>
      <remarks>
        <para>This operation is the same as multiplying the matrix passed as the parameter by this <see cref="T:Leadtools.LeadMatrix" />. Matrix multiplication is not commutative, so this operation
            is not the same as multiplying this <see cref="T:Leadtools.LeadMatrix" /> by the matrix passed as the parameter; that is, (matrix * <c>this</c>) is not the same as (<c>this</c> * matrix).</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Rotate(System.Double)">
      <summary>
            Applies a rotation of the specified angle about the origin of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="angle">The angle of rotation.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.RotatePrepend(System.Double)">
      <summary>
            Prepends a rotation of the specified angle to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="angle">The angle of rotation.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary>
            Rotates this matrix about the specified point.
            </summary>
      <param name="angle">The angle, in degrees, to rotate this matrix. </param>
      <param name="centerX">The x-coordinate of the point to rotate this matrix around.</param>
      <param name="centerY">The y-coordinate of the point to rotate this matrix around.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary>
            Prepends a rotation of the specified angle at the specified point to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="angle">The angle, in degrees, to rotate this matrix. </param>
      <param name="centerX">The x-coordinate of the point to rotate this matrix around.</param>
      <param name="centerY">The y-coordinate of the point to rotate this matrix around.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Scale(System.Double,System.Double)">
      <summary>
            Appends the specified scale vector to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="scaleX">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the x-axis.</param>
      <param name="scaleY">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the y-axis.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.ScalePrepend(System.Double,System.Double)">
      <summary>
            Prepends the specified scale vector to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="scaleX">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the x-axis.</param>
      <param name="scaleY">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the y-axis.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Scales this <see cref="T:Leadtools.LeadMatrix" /> by the specified amount about the specified point.
            </summary>
      <param name="scaleX">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the x-axis.</param>
      <param name="scaleY">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the y-axis.</param>
      <param name="centerX">The x-coordinate of the scale operation's center point.</param>
      <param name="centerY">The y-coordinate of the scale operation's center point.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Prepends the specified scale about the specified point of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="scaleX">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the x-axis.</param>
      <param name="scaleY">The value by which to scale this <see cref="T:Leadtools.LeadMatrix" /> along the y-axis.</param>
      <param name="centerX">The x-coordinate of the scale operation's center point.</param>
      <param name="centerY">The y-coordinate of the scale operation's center point.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Skew(System.Double,System.Double)">
      <summary>
            Appends a skew of the specified degrees in the x and y dimensions to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="skewX">The angle in the x dimension to skew this <see cref="T:Leadtools.LeadMatrix" />.</param>
      <param name="skewY">The angle in the y dimension to skew this <see cref="T:Leadtools.LeadMatrix" />.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.SkewPrepend(System.Double,System.Double)">
      <summary>
            Prepends a skew of the specified degrees in the x and y dimensions to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="skewX">The angle in the x dimension to skew this <see cref="T:Leadtools.LeadMatrix" />.</param>
      <param name="skewY">The angle in the y dimension to skew this <see cref="T:Leadtools.LeadMatrix" />.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Translate(System.Double,System.Double)">
      <summary>
            Appends a translation of the specified offsets to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="offsetX">The amount to offset this <see cref="T:Leadtools.LeadMatrix" /> along the x-axis.</param>
      <param name="offsetY">The amount to offset this <see cref="T:Leadtools.LeadMatrix" /> along the y-axis.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.TranslatePrepend(System.Double,System.Double)">
      <summary>
            Prepends a translation of the specified offsets to this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="offsetX">The amount to offset this <see cref="T:Leadtools.LeadMatrix" /> along the x-axis.</param>
      <param name="offsetY">The amount to offset this <see cref="T:Leadtools.LeadMatrix" /> along the y-axis.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Transform(Leadtools.LeadPointD)">
      <summary>
            Transforms the specified <see cref="T:Leadtools.LeadPointD">point</see> by the <see cref="T:Leadtools.LeadMatrix" /> and returns the result.
            </summary>
      <param name="point">The point to transform.</param>
      <returns>The <see cref="T:Leadtools.LeadPointD" /> that results from transforming the <paramref name="point" /> by this <see cref="T:Leadtools.LeadMatrix" />.</returns>
      <remarks>
        <para>This method will use the value of the current offset into the transformation. To transform a point without offset (as a vector), use <see cref="M:Leadtools.LeadMatrix.TransformVector(Leadtools.LeadPointD)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.TransformPoints(Leadtools.LeadPointD[])">
      <summary> 
            Transforms the specified <see cref="T:Leadtools.LeadPointD">point</see> array by the <see cref="T:Leadtools.LeadMatrix" /> and returns the result.
            </summary>
      <param name="points">The points to transform.</param>
      <remarks>
        <para>This method will use the value of the current offset into the transformation. To transform a point without offset (as a vector), use <see cref="M:Leadtools.LeadMatrix.TransformVector(Leadtools.LeadPointD)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.TransformRect(Leadtools.LeadRectD)">
      <summary>
            Transforms the specified <see cref="T:Leadtools.LeadRectD">rect</see> by the <see cref="T:Leadtools.LeadMatrix" /> and returns the result.
            </summary>
      <param name="rect">The rectangle to transform.</param>
      <returns>The <see cref="T:Leadtools.LeadRectD" /> that results from transforming the <paramref name="rect" /> by this <see cref="T:Leadtools.LeadMatrix" />.</returns>
      <remarks>
        <para>This method will use the value of the current offset into the transformation.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Invert">
      <summary>
            Inverts this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Equals(Leadtools.LeadMatrix,Leadtools.LeadMatrix)">
      <summary>
            Compares two <see cref="T:Leadtools.LeadMatrix" /> objects to determine whether they contain the same coordinates.
            </summary>
      <param name="matrix1">
            The first object to use in the comparison.
            </param>
      <param name="matrix2">
            The second object to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadMatrix" /> objects have the same coordinates; otherwise, it is <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.op_Equality(Leadtools.LeadMatrix,Leadtools.LeadMatrix)">
      <summary>
            Compares two <see cref="T:Leadtools.LeadMatrix" /> objects to determine whether they contain the same coordinates.
            </summary>
      <param name="matrix1">
            The first object to use in the comparison.
            </param>
      <param name="matrix2">
            The second object to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadMatrix" /> objects have the same coordinates; otherwise, it is <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.IsEqual(Leadtools.LeadMatrix,Leadtools.LeadMatrix)">
      <summary>
            Compares two <see cref="T:Leadtools.LeadMatrix" /> objects to determine whether they contain the same coordinates.
            </summary>
      <param name="matrix1">
            The first object to use in the comparison.
            </param>
      <param name="matrix2">
            The second object to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadMatrix" /> objects have the same coordinates; otherwise, it is <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.op_Inequality(Leadtools.LeadMatrix,Leadtools.LeadMatrix)">
      <summary>
            Compares two <see cref="T:Leadtools.LeadMatrix" /> objects to determine whether they do not contain the same coordinates.
            </summary>
      <param name="matrix1">
            The first object to use in the comparison.
            </param>
      <param name="matrix2">
            The second object to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadMatrix" /> objects do not have the same coordinates; otherwise, it is <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadMatrix" /> structure contains the same values as the specified object.
            </summary>
      <param name="obj">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadMatrix" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Equals(Leadtools.LeadMatrix)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadMatrix" /> structure contains the same values as the specified object.
            </summary>
      <param name="value">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadMatrix" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Leadtools.LeadMatrix" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadMatrix" /> from it.
            </summary>
      <param name="source">The source string. This must contain four invariant culture double values the elements.</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadMatrix" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadMatrix" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadMatrix" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadMatrix" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrix.TransformPoint(Leadtools.LeadPointD)">
      <summary> 
            Transforms the specified <see cref="T:Leadtools.LeadPointD">point</see> by the <see cref="T:Leadtools.LeadMatrix" /> and returns the result.
            </summary>
      <param name="point">The point to transform.</param>
      <returns>The <see cref="T:Leadtools.LeadPointD" /> that results from transforming the <paramref name="point" /> by this <see cref="T:Leadtools.LeadMatrix" />.</returns>
      <remarks>
        <para>This method will use the value of the current offset into the transformation. To transform a point without offset (as a vector), use <see cref="M:Leadtools.LeadMatrix.TransformVector(Leadtools.LeadPointD)" />.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadMatrix.TransformVector(Leadtools.LeadPointD)">
      <summary>
            Transforms the specified vector point by the <see cref="T:Leadtools.LeadMatrix" /> and returns the result.
            </summary>
      <param name="point">The point to transform.</param>
      <returns>The <see cref="T:Leadtools.LeadPointD" /> that results from transforming the <paramref name="point" /> by this <see cref="T:Leadtools.LeadMatrix" />.</returns>
      <remarks>
        <para>This method will not use the value of the current offset into the transformation. To transform a point with offset, use <see cref="M:Leadtools.LeadMatrix.TransformPoint(Leadtools.LeadPointD)" />.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadMatrix.TransformPoints(Leadtools.LeadPointD[],Leadtools.LeadPointD[])">
      <summary>
            Transforms the specified points by this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="srcPoints">The points to transform.</param>
      <param name="destPoints">An array that contains the transformed points.</param>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadMatrix.TransformPoints_WinRT(Leadtools.LeadPointD[])">
      <summary>
            Transforms the specified points by this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="points">The points to transform. The original points in the array are not changed.</param>
      <returns>The result points.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadMatrix.GetStringDescription">
      <summary>
            Converts this <see cref="T:Leadtools.LeadMatrix" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadMatrix.Set(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Sets the values of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <param name="m11">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M11" /> coefficient.</param>
      <param name="m12">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M12" /> coefficient.</param>
      <param name="m21">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M21" /> coefficient.</param>
      <param name="m22">The new <see cref="T:Leadtools.LeadMatrix">LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.M22" /> coefficient.</param>
      <param name="offsetX">The new <see cref="T:Leadtools.LeadMatrix"> LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.OffsetX" /> coefficient.</param>
      <param name="offsetY">The new <see cref="T:Leadtools.LeadMatrix"> LeadMatrix </see><see cref="P:Leadtools.LeadMatrix.OffsetY" /> coefficient.</param>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.LeadMatrix.Identity">
      <summary>
            Gets an identity <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>An identity matrix.</value>
      <remarks>
        <para>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. 
            This correlates to setting
            <see cref="P:Leadtools.LeadMatrix.M11" /> and <see cref="P:Leadtools.LeadMatrix.M22" /> to 1 and <see cref="P:Leadtools.LeadMatrix.M12" />, <see cref="P:Leadtools.LeadMatrix.M21" />, <see cref="P:Leadtools.LeadMatrix.OffsetX" />, and <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            to 0. In an affine matrix,
            coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</para>
        <table>
          <tr>
            <td>1</td>
            <td>0</td>
            <td>0</td>
          </tr>
          <tr>
            <td>0</td>
            <td>1</td>
            <td>0</td>
          </tr>
          <tr>
            <td>0</td>
            <td>0</td>
            <td>1</td>
          </tr>
        </table>
        <para>For an identity matrix, the <see cref="M:Leadtools.LeadMatrix.ToString" /> method returns the string "Identity" instead of the coefficients 
            of the <see cref="T:Leadtools.LeadMatrix" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.IsIdentity">
      <summary>
            Gets a value that indicates whether this <see cref="T:Leadtools.LeadMatrix" /> is an identity matrix.
            </summary>
      <value>
        <strong>true</strong> if the <see cref="T:Leadtools.LeadMatrix" /> object is an identity matrix; otherwise, 
            it is <strong>false</strong>. The default is <strong>true</strong>.</value>
      <remarks>
        <para>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. 
            This correlates to setting
            <see cref="P:Leadtools.LeadMatrix.M11" /> and <see cref="P:Leadtools.LeadMatrix.M22" /> to 1 and <see cref="P:Leadtools.LeadMatrix.M12" />, <see cref="P:Leadtools.LeadMatrix.M21" />, <see cref="P:Leadtools.LeadMatrix.OffsetX" />,
            and <see cref="P:Leadtools.LeadMatrix.OffsetY" /> to 0. In an affine matrix,
            coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</para>
        <table>
          <tr>
            <td>1</td>
            <td>0</td>
            <td>0</td>
          </tr>
          <tr>
            <td>0</td>
            <td>1</td>
            <td>0</td>
          </tr>
          <tr>
            <td>0</td>
            <td>0</td>
            <td>1</td>
          </tr>
        </table>
        <para>For an identity matrix, the <see cref="M:Leadtools.LeadMatrix.ToString" /> method returns the string "Identity" instead of the coefficients of the <see cref="T:Leadtools.LeadMatrix" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.Determinant">
      <summary>
            Gets the determinant of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>The determinant of this LeadMatrix.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.HasInverse">
      <summary>
            Gets a value that indicates whether this <see cref="T:Leadtools.LeadMatrix" /> is invertible.
            </summary>
      <value>
        <strong>true</strong> if the matrix has an inverse; otherwise, it is <strong>false</strong>. The default is <strong>true</strong>.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.M11">
      <summary>
            Gets or sets the value of the first row and first column of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>The value of the first row and first column of this <see cref="T:Leadtools.LeadMatrix" />. The default value is 1.</value>
      <remarks>
        <para>The following table shows the layout of a <see cref="T:Leadtools.LeadMatrix" /> object:</para>
        <table>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M11" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M12" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M21" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M22" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetX" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            </td>
            <td>1</td>
          </tr>
        </table>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.M12">
      <summary>
            Gets or sets the value of the first row and second column of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>The value of the first row and second column of this <see cref="T:Leadtools.LeadMatrix" />. The default value is 1.</value>
      <remarks>
        <para>The following table shows the layout of a <see cref="T:Leadtools.LeadMatrix" /> object:</para>
        <table>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M11" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M12" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M21" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M22" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetX" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            </td>
            <td>1</td>
          </tr>
        </table>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.M21">
      <summary>
            Gets or sets the value of the second row and first column of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>The value of the second row and first column of this <see cref="T:Leadtools.LeadMatrix" />. The default value is 1.</value>
      <remarks>
        <para>The following table shows the layout of a <see cref="T:Leadtools.LeadMatrix" /> object:</para>
        <table>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M11" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M12" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M21" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M22" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetX" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            </td>
            <td>1</td>
          </tr>
        </table>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.M22">
      <summary>
            Gets or sets the value of the second row and second column of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>The value of the second row and second column of this <see cref="T:Leadtools.LeadMatrix" />. The default value is 1.</value>
      <remarks>
        <para>The following table shows the layout of a <see cref="T:Leadtools.LeadMatrix" /> object:</para>
        <table>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M11" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M12" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M21" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M22" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetX" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            </td>
            <td>1</td>
          </tr>
        </table>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.OffsetX">
      <summary>
            Gets or sets the value of the third row and first column of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>The value of the third row and first column of this <see cref="T:Leadtools.LeadMatrix" />. The default value is 0.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.LeadMatrix.OffsetX" /> property is so named because it specifies the amount to translate the coordinate space along the x-axis.</para>
        <para>The following table shows the layout of a <see cref="T:Leadtools.LeadMatrix" /> object:</para>
        <table>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M11" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M12" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M21" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M22" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetX" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            </td>
            <td>1</td>
          </tr>
        </table>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadMatrix.OffsetY">
      <summary>
            Gets or sets the value of the third row and second column of this <see cref="T:Leadtools.LeadMatrix" />.
            </summary>
      <value>The value of the third row and second column of this <see cref="T:Leadtools.LeadMatrix" />. The default value is 0.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.LeadMatrix.OffsetY" /> property is so named because it specifies the amount to translate the coordinate space along the y-axis.</para>
        <para>The following table shows the layout of a <see cref="T:Leadtools.LeadMatrix" /> object:</para>
        <table>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M11" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M12" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M21" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.M22" />
            </td>
            <td>0</td>
          </tr>
          <tr>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetX" />
            </td>
            <td>
              <see cref="P:Leadtools.LeadMatrix.OffsetY" />
            </td>
            <td>1</td>
          </tr>
        </table>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.LeadMatrixConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadMatrix" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadMatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadRectD">
      <summary>
            Describes the width, height, and location of a rectangle in double numbers.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.LeadRectD" /> structure specifies a platform-independent representation of a rectangle with double precision floating values</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.#ctor(Leadtools.LeadPointD,Leadtools.LeadSizeD)">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.LeadRectD" /> with a location and size.
            </summary>
      <param name="location">The location of the rectangle.</param>
      <param name="size">The size of the rectangle.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.LeadRectD" /> with the specified x-coordinate, y-coordinate, width, and height.
            </summary>
      <param name="x">The x-coordinate of the top-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the top-left corner of the rectangle.</param>
      <param name="width">The width value. Must be a value greater than or equal to 0.</param>
      <param name="height">The height value. Must be a value greater than or equal to 0.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.#ctor(Leadtools.LeadPointD,Leadtools.LeadPointD)">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.LeadRectD" /> that is exactly large enough to contain the two specified points.
            </summary>
      <param name="point1">The first point that the new rectangle must contain.</param>
      <param name="point2">The second point that the new rectangle must contain.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.#ctor(Leadtools.LeadSizeD)">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.LeadRectD" /> that is of the specified size and is located at (0,0). 
            </summary>
      <param name="size">The size that specifies the width and height of the rectangle.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Create(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.LeadRectD" /> with the specified x-coordinate, y-coordinate, width, and height.
            </summary>
      <param name="x">The x-coordinate of the top-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the top-left corner of the rectangle.</param>
      <param name="width">The width value. Must be a value greater than or equal to 0.</param>
      <param name="height">The height value. Must be a value greater than or equal to 0.</param>
      <remarks>The object this method creates.</remarks>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.LeadRectD" /> with the specified values top-left and bottom-right corner points.
            </summary>
      <param name="left">The x-coordinate of the top-left corner.</param>
      <param name="top">The y-coordinate of the top-left corner.</param>
      <param name="right">The x-coordinate of the bottom-right corner.</param>
      <param name="bottom">The y-coordinate of the bottom-right corner.</param>
      <remarks>The object this method creates.</remarks>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Clone">
      <summary>
            Returns an exact copy of this <see cref="T:Leadtools.LeadRectD" /></summary>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Equals(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadRectD" /> structures contain the same values.
            </summary>
      <param name="rect1">
            The first <see cref="T:Leadtools.LeadRectD" /> structure to use in the comparison.
            </param>
      <param name="rect2">
            The second <see cref="T:Leadtools.LeadRectD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRectD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.op_Equality(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadRectD" /> structures contain the same values.
            </summary>
      <param name="rect1">
            The first <see cref="T:Leadtools.LeadRectD" /> structure to use in the comparison.
            </param>
      <param name="rect2">
            The second <see cref="T:Leadtools.LeadRectD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRectD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.op_Inequality(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadRectD" /> structures do not contain the same values.
            </summary>
      <param name="rect1">
            The first <see cref="T:Leadtools.LeadRectD" /> structure to use in the comparison.
            </param>
      <param name="rect2">
            The second <see cref="T:Leadtools.LeadRectD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRectD" /> structures do not have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadRectD" /> structure contains the same values as the specified object.
            </summary>
      <param name="obj">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRectD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Equals(Leadtools.LeadRectD)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadRectD" /> structure contains the same values as the specified object.
            </summary>
      <param name="value">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRectD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Leadtools.LeadRectD" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadRectD" /> from it.
            </summary>
      <param name="source">The source string. This must contain four invariant culture double values for X,Y,Width,Height</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRectD" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRectD" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRectD" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.ContainsPoint(Leadtools.LeadPointD)">
      <summary>
            Indicates whether the rectangle contains the specified point.
            </summary>
      <param name="point">The point to check.</param>
      <returns>
        <strong>true</strong> if the rectangle contains the specified point; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Contains(System.Double,System.Double)">
      <summary>
            Indicates whether the rectangle contains the specified point.
            </summary>
      <param name="x">The x-coordinate of the point to check.</param>
      <param name="y">The y-coordinate of the point to check.</param>
      <returns>
        <strong>true</strong> if the rectangle contains the specified point; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.ContainsRect(Leadtools.LeadRectD)">
      <summary>
            Indicates whether the rectangle contains the specified rectangle.
            </summary>
      <param name="rect">The rectangle to check.</param>
      <returns>
        <strong>true</strong> if the rectangle contains the specified rectangle; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.IntersectsWith(Leadtools.LeadRectD)">
      <summary>
            Indicates whether the specified rectangle intersects with the current rectangle.
            </summary>
      <param name="rect">The rectangle to check.</param>
      <returns>
        <strong>true</strong> if the specified rectangle intersects with the current rectangle; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Intersect(Leadtools.LeadRectD)">
      <summary>
            Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.
            </summary>
      <param name="rect">The rectangle to intersect width the current rectangle.</param>
      <remarks>
        <para>If no intersection exists, the current rectangle becomes <see cref="P:Leadtools.LeadRectD.Empty" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.IntersectRects(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Returns the intersection of the specified rectangles.
            </summary>
      <param name="rect1">The first rectangle to compare</param>
      <param name="rect2">The second rectangle to compare</param>
      <returns>The intersection of the two rectangles, or <see cref="P:Leadtools.LeadRectD.Empty" /> if no intersection exists.</returns>
      <remarks>
        <para>If no intersection exists, the methods returns <see cref="P:Leadtools.LeadRectD.Empty" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Union(Leadtools.LeadRectD)">
      <summary>
            Expands the current rectangle exactly enough to contain the specified rectangle.
            </summary>
      <param name="rect">The rectangle to include.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.UnionRects(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Creates a rectangle that is exactly large enough to contain the two specified rectangles.
            </summary>
      <param name="rect1">The first rectangle to include.</param>
      <param name="rect2">The second rectangle to include.</param>
      <returns>The resulting rectangle.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Union(Leadtools.LeadPointD)">
      <summary>
            Expands the current rectangle exactly enough to contain the specified point. 
            </summary>
      <param name="point">The point to include.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Union(Leadtools.LeadRectD,Leadtools.LeadPointD)">
      <summary>
            Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point
            </summary>
      <param name="rect">The rectangle to include</param>
      <param name="point">The point to include</param>
      <returns>A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Offset(System.Double,System.Double)">
      <summary>
            Moves the rectangle by the specified horizontal and vertical amounts.
            </summary>
      <param name="offsetX">The amount to move the rectangle horizontally.</param>
      <param name="offsetY">The amount to move the rectangle vertically.</param>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.OffsetRect(Leadtools.LeadRectD,System.Double,System.Double)">
      <summary>
            Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.
            </summary>
      <param name="rect">The rectangle to move.</param>
      <param name="offsetX">The amount to move the rectangle horizontally.</param>
      <param name="offsetY">The amount to move the rectangle vertically.</param>
      <returns>The resulting rectangle.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.InflateSize(Leadtools.LeadSizeD)">
      <summary>
            Expands the rectangle by using the specified size, in all directions.
            </summary>
      <param name="size">Specifies the amount to expand the rectangle. The <see cref="T:Leadtools.LeadSizeD" /> structure's <see cref="P:Leadtools.LeadSizeD.Width" /> property specifies the amount to increase the
            rectangle's <see cref="P:Leadtools.LeadRectD.Left" /> and <see cref="P:Leadtools.LeadRectD.Right" /> properties. The <see cref="T:Leadtools.LeadSizeD" /> structure's <see cref="P:Leadtools.LeadSizeD.Height" /> property specifies the amount to increase the
            rectangle's <see cref="P:Leadtools.LeadRectD.Top" /> and <see cref="P:Leadtools.LeadRectD.Bottom" /> properties. </param>
      <remarks>
        <para>The <see cref="P:Leadtools.LeadRectD.Width" /> of the resulting rectangle is increased by twice the <see cref="P:Leadtools.LeadSizeD.Width" /> of the specified <see cref="T:Leadtools.LeadSizeD" /> structure, because both the left
            and right sides of the rectangle are inflated. Likewise, the <see cref="P:Leadtools.LeadRectD.Height" /> of the resulting rectangle is increased by twice the <see cref="P:Leadtools.LeadSizeD.Height" /> of the specified
            <see cref="T:Leadtools.LeadSizeD" /> structure.</para>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Inflate(System.Double,System.Double)">
      <summary>
            Expands the rectangle by using the specified width and height, in all directions.
            </summary>
      <param name="width">Specifies the amount to increase the rectangle's <see cref="P:Leadtools.LeadRectD.Left" /> and <see cref="P:Leadtools.LeadRectD.Right" /> properties.</param>
      <param name="height">Specifies the amount to increase the rectangle's <see cref="P:Leadtools.LeadRectD.Top" /> and <see cref="P:Leadtools.LeadRectD.Bottom" /> properties.</param>
      <remarks>
        <para>The <see cref="P:Leadtools.LeadRectD.Width" /> of the resulting rectangle is increased by twice the <paramref name="width" /> value, because both the left and right sides of the rectangle are inflated. Likewise,
            the <see cref="P:Leadtools.LeadRectD.Height" /> of the resulting rectangle is increased by twice the <paramref name="height" /> value.</para>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.InflateRects(Leadtools.LeadRectD,Leadtools.LeadSizeD)">
      <summary>
            Returns the rectangle that results from expanding the specified rectangle by the specified Size, in all directions.
            </summary>
      <param name="rect">The rectangle to modify</param>
      <param name="size">Specifies the amount to expand the rectangle. The <see cref="T:Leadtools.LeadSizeD" /> structure's <see cref="P:Leadtools.LeadSizeD.Width" /> property specifies the amount to increase the
            rectangle's <see cref="P:Leadtools.LeadRectD.Left" /> and <see cref="P:Leadtools.LeadRectD.Right" /> properties. The <see cref="T:Leadtools.LeadSizeD" /> structure's <see cref="P:Leadtools.LeadSizeD.Height" /> property specifies the amount to increase the
            rectangle's <see cref="P:Leadtools.LeadRectD.Top" /> and <see cref="P:Leadtools.LeadRectD.Bottom" /> properties. </param>
      <returns>The resulting rectangle.</returns>
      <remarks>
        <para>The <see cref="P:Leadtools.LeadRectD.Width" /> of the resulting rectangle is increased by twice the <see cref="P:Leadtools.LeadSizeD.Width" /> of the specified <see cref="T:Leadtools.LeadSizeD" /> structure, because both the left
            and right sides of the rectangle are inflated. Likewise, the <see cref="P:Leadtools.LeadRectD.Height" /> of the resulting rectangle is increased by twice the <see cref="P:Leadtools.LeadSizeD.Height" /> of the specified
            <see cref="T:Leadtools.LeadSizeD" /> structure.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.InflateRect(Leadtools.LeadRectD,System.Double,System.Double)">
      <summary>
            Returns the rectangle that results from expanding the specified rectangle by the specified width and height, in all directions.
            </summary>
      <param name="rect">The rectangle to modify</param>
      <param name="width">Specifies the amount to increase the rectangle's <see cref="P:Leadtools.LeadRectD.Left" /> and <see cref="P:Leadtools.LeadRectD.Right" /> properties.</param>
      <param name="height">Specifies the amount to increase the rectangle's <see cref="P:Leadtools.LeadRectD.Top" /> and <see cref="P:Leadtools.LeadRectD.Bottom" /> properties.</param>
      <remarks>
        <para>The <see cref="P:Leadtools.LeadRectD.Width" /> of the resulting rectangle is increased by twice the <paramref name="width" /> value, because both the left and right sides of the rectangle are inflated. Likewise,
            the <see cref="P:Leadtools.LeadRectD.Height" /> of the resulting rectangle is increased by twice the <paramref name="height" /> value.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.TransformRect(Leadtools.LeadRectD,Leadtools.LeadMatrix)">
      <summary>
            Transforms a rectangle by applying the specified matrix.
            </summary>
      <param name="rect">The rectangle to transform.</param>
      <param name="matrix">A matrix that specifies the transformationt to apply.</param>
      <returns>The resulting rectangle.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Transform(Leadtools.LeadMatrix)">
      <summary>
            Transforms the rectangle by applying the specified matrix.
            </summary>
      <param name="matrix">A matrix that specifies the transformationt to apply.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.Scale(System.Double,System.Double)">
      <summary>
            Multiplies the size of the current rectangle by the specified x and y values.
            </summary>
      <param name="scaleX">The scale factor in the x-direction</param>
      <param name="scaleY">The scale factor in the y-direction</param>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectD.ToLeadRect">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRectD" /> to a <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <returns>The converted rectangle.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Empty">
      <summary>
            Gets a special value that represents a rectangle with no coordinates.
            </summary>
      <value>The empty rectangle, which has <see cref="P:Leadtools.LeadRectD.X" /> and <see cref="P:Leadtools.LeadRectD.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" /> and <see cref="P:Leadtools.LeadRectD.Width" /> and <see cref="P:Leadtools.LeadRectD.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.IsEmpty">
      <summary>
            Gets a value that indicates whether the rectangle is the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.
            </summary>
      <value>
        <strong>true</strong> if the rectangle is the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle; otherwise, <strong>false</strong>.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Location">
      <summary>
            Gets or sets the position of the top-left corner of the rectangle.
            </summary>
      <value>The position of the top-left corner of the rectangle.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Size">
      <summary>
            Gets or sets the width and height of the rectangle.
            </summary>
      <value>The width and height of the rectangle.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.X">
      <summary>
            Gets or sets the x-axis value of the left side of the rectangle.
            </summary>
      <value>x-axis value of the left side of the rectangle.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Y">
      <summary>
            Gets or sets the y-axis value of the top side of the rectangle.
            </summary>
      <value>y-axis value of the top size of the rectangle.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Width">
      <summary>
            Gets or sets the width of the rectangle.
            </summary>
      <value>The width of the rectangle.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Height">
      <summary>
            Gets or sets the height of the rectangle.
            </summary>
      <value>The width of the rectangle.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadRectD.Empty" /> rectangle.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Left">
      <summary>
            Gets the x-axis value of the left side of the rectangle.
            </summary>
      <value>The x-axis value of the left side of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Top">
      <summary>
            Gets the y-axis value of the top side of the rectangle.
            </summary>
      <value>The y-axis value of the top side of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Right">
      <summary>
            Gets the x-axis value of the right side of the rectangle.
            </summary>
      <value>The x-axis value of the right side of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.Bottom">
      <summary>
            Gets the y-axis value of the bottom side of the rectangle.
            </summary>
      <value>The y-axis value of the bottom side of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.TopLeft">
      <summary>
            Gets the position of the top-left corner of the rectangle. 
            </summary>
      <value>The position of the top-left corner of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.TopRight">
      <summary>
            Gets the position of the top-right corner of the rectangle. 
            </summary>
      <value>The position of the top-right corner of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.BottomLeft">
      <summary>
            Gets the position of the bottom-left corner of the rectangle. 
            </summary>
      <value>The position of the bottom-left corner of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectD.BottomRight">
      <summary>
            Gets the position of the bottom-right corner of the rectangle. 
            </summary>
      <value>The position of the bottom-right corner of the rectangle.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadRectDConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadRectD" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadRectDHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.LeadRectD" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.LeadRectD" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Create(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadRectD" /> object with explicit parameters.
            </summary>
      <param name="x">
            Specifies the X coordinates of the <see cref="T:Leadtools.LeadRectD" />.
            </param>
      <param name="y">
            Specifies the Y coordinates of the <see cref="T:Leadtools.LeadRectD" />.
            </param>
      <param name="width">
            Specifies the width of the <see cref="T:Leadtools.LeadRectD" />. Must be a value greater than or equal to 0.
            </param>
      <param name="height">
            Specifies the height of the <see cref="T:Leadtools.LeadRectD" />. Must be a value greater than or equal to 0.
            </param>
      <returns>A <see cref="T:Leadtools.LeadRectD" /> with <see cref="P:Leadtools.LeadRectD.X" /> set to <paramref name="x" />, <see cref="P:Leadtools.LeadRectD.Y" /> set to <paramref name="y" />, <see cref="P:Leadtools.LeadRectD.Width" /> set to
            <paramref name="width" /> and <see cref="P:Leadtools.LeadRectD.Height" /> set to <paramref name="height" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Returns a <see cref="T:Leadtools.LeadRectD" /> structure with the specified edge locations.
            </summary>
      <param name="left">
            The x-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRectD" />. 
            </param>
      <param name="top">
            The y-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRectD" />. 
            </param>
      <param name="right">
            The x-coordinate of the lower-right corner of the <see cref="T:Leadtools.LeadRectD" />. 
            </param>
      <param name="bottom">
            The y-coordinate of the lower-right corner of the <see cref="T:Leadtools.LeadRectD" />. 
            </param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.IsEmpty(Leadtools.LeadRectD)">
      <summary>
            Gets a value indicating whether this <see cref="T:Leadtools.LeadRectD" /> structure is empty.
            </summary>
      <param name="rect">The rectangle to check.</param>
      <returns>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadRectD" /> structure is empty; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadRectD" /> contains values of <see cref="P:Leadtools.LeadRectD.X" />, <see cref="P:Leadtools.LeadRectD.Y" />, <see cref="P:Leadtools.LeadRectD.Width" /> and <see cref="P:Leadtools.LeadRectD.Height" /> of "maximum double", "maximum double", "minimum double" and "minimum double" respectively.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.IsEqual(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadRectD" /> objects contain the same location and size.
            </summary>
      <param name="rect1">
            The first <see cref="T:Leadtools.LeadRectD" /> on the left side of the comparison operator.
            </param>
      <param name="rect2">
            The second <see cref="T:Leadtools.LeadRectD" /> on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRectD" /> have the same location and size; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Left(Leadtools.LeadRectD)">
      <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:Leadtools.LeadRectD" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The left edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Right(Leadtools.LeadRectD)">
      <summary>
            Gets the x-coordinate of the right edge of this <see cref="T:Leadtools.LeadRectD" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The right edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Top(Leadtools.LeadRectD)">
      <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:Leadtools.LeadRectD" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The top edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Bottom(Leadtools.LeadRectD)">
      <summary>
            Gets the y-coordinate of the bottom edge of this <see cref="T:Leadtools.LeadRectD" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The bottom edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.TopLeft(Leadtools.LeadRectD)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the top-left edge of this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the top-left edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.TopRight(Leadtools.LeadRectD)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the top-right edge of this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the top-right edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.BottomRight(Leadtools.LeadRectD)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-right edge of this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-right edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.BottomLeft(Leadtools.LeadRectD)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-left edge of this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-left edge of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Location(Leadtools.LeadRectD)">
      <summary>
            Gets the coordinates of the upper-left corner of this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The upper-left corner coordinates of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Size(Leadtools.LeadRectD)">
      <summary>
            Gets or sets the size of this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The width and height of this <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.ContainsPoint(Leadtools.LeadRectD,Leadtools.LeadPointD)">
      <summary>
            Determines whether the specified point is contained within this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="testPoint">The point to test.</param>
      <returns>
        <strong>true</strong> if the specified point is contained within this <see cref="T:Leadtools.LeadRectD" />; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.ContainsRect(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Determines if the rectangular region represented by the specified value is entirely contained within this <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="testRect">The <see cref="T:Leadtools.LeadRectD" /> to be tested.</param>
      <returns>This method returns <strong>true</strong> if the rectangular region represented by <paramref name="testRect" /> is entirely 
            contained within the rectangular region represented by this <see cref="T:Leadtools.LeadRectD" />; otherwise, it is <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Inflate(Leadtools.LeadRectD,Leadtools.LeadSizeD)">
      <summary>
            Inflates a <see cref="T:Leadtools.LeadRectD" /> by the specified amount.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="size">The amount to inflate this <see cref="T:Leadtools.LeadRectD" /> horizontally and vertically.</param>
      <returns>The result rectangle.</returns>
      <remarks>
        <para>This method inflates the rectangle itself, not a copy of it. 
            The inflation along an axis is in two directions (minus direction and plus direction). For example, if a 150 by 150 rectangle is inflated by 50 in
            the x-axis, the resulting rectangle will be 250 units long (the original 150, the 50 in the minus direction, and the 50 in the plus direction)
            maintaining the rectangle's geometric center. If either width or height is negative, the rectangle is deflated in the corresponding direction.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Intersect(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Returns an <see cref="T:Leadtools.LeadRectD" /> that represents the intersection of two rectangles.
            </summary>
      <param name="rect1">A rectangle to intersect.</param>
      <param name="rect2">A rectangle to intersect</param>
      <returns>A third <see cref="T:Leadtools.LeadRectD" /> the size of which represents the overlapped area of the two specified rectangles. 
            If there is no intersection, an <see cref="P:Leadtools.LeadRectDHelper.Empty" /> rectangle is returned.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.IntersectsWith(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Determines whether this <see cref="T:Leadtools.LeadRectD" /> intersects with a test value.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="testRect">The rectangle to test.</param>
      <returns>This method returns <strong>true</strong> if there is any intersection; <strong>false</strong> otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Union(Leadtools.LeadRectD,Leadtools.LeadRectD)">
      <summary>
            Returns a <see cref="T:Leadtools.LeadRectD" /> that contains the union of two rectangles.
            </summary>
      <param name="rect1">
            First rectangle.
            </param>
      <param name="rect2">
            Second rectangle.
            </param>
      <returns>A third <see cref="T:Leadtools.LeadRectD" /> the size of which represents the union of the area of the two specified rectangles.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Offset(Leadtools.LeadRectD,Leadtools.LeadSizeD)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="size">The x- and y-amounts to offset the location.</param>
      <remarks>The result rectangle.</remarks>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.ToRect(Leadtools.LeadRectD)">
      <summary>
            Converts a <see cref="T:Leadtools.LeadRectD" /> to <see cref="T:Leadtools.LeadRect" /></summary>
      <param name="rect">The rectangle object</param>
      <returns>The result <see cref="T:Leadtools.LeadRect" /> object.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Scale(Leadtools.LeadRectD,System.Double,System.Double)">
      <summary>
            Scales this <see cref="T:Leadtools.LeadRectD" /> by the specified amount.
            </summary>
      <param name="rect">The rectangle object</param>
      <param name="scaleX">Horizontal scale value</param>
      <param name="scaleY">Vertical scale value</param>
      <returns>The result rectangle object.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.Transform(Leadtools.LeadRectD,Leadtools.LeadMatrix)">
      <summary>
            Transforms the rectangle by applying the specified matrix.
            </summary>
      <param name="rect">The rectangle object</param>
      <param name="matrix">A matrix that specifies the transformation to apply. Must not be <strong>null</strong> (<strong>Nothing</strong> in Visual Basic).</param>
      <returns>The result rectangle object.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectDHelper.GetStringDescription(Leadtools.LeadRectD)">
      <summary>
            Returns A human-readable representation of the specified <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A human-readable representation of the specified <see cref="T:Leadtools.LeadRectD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectDHelper.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadRectD" /> with uninitialized members.
            </summary>
      <value>A new instance of the <see cref="T:Leadtools.LeadRectD" /> with uninitialized members.</value>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadRectD" /> contains values of <see cref="P:Leadtools.LeadRectD.X" />, <see cref="P:Leadtools.LeadRectD.Y" />, <see cref="P:Leadtools.LeadRectD.Width" /> 
            and <see cref="P:Leadtools.LeadRectD.Height" /> to "maximum double", "maximum double", "minimum double" and "minimum double" respectively.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.LeadPointD">
      <summary>
            Stores two double numbers that represent the coordinates of a point (X and Y).
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.LeadPointD" /> structure specifies a platform-independent representation of a point with double precision floating values</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.LeadPointD" /> with the specified values.
            </summary>
      <param name="x">The X-coordinate.</param>
      <param name="y">The Y-coordinate.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Create(System.Double,System.Double)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.LeadPointD" /> with the specified values.
            </summary>
      <param name="x">The X-coordinate.</param>
      <param name="y">The Y-coordinate.</param>
      <remarks>The object this method creates.</remarks>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Clone">
      <summary>
            Returns an exact copy of this <see cref="T:Leadtools.LeadPointD" /></summary>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Equals(Leadtools.LeadPointD,Leadtools.LeadPointD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadPointD" /> structures contain the same values.
            </summary>
      <param name="point1">
            The first <see cref="T:Leadtools.LeadPointD" /> structure to use in the comparison.
            </param>
      <param name="point2">
            The second <see cref="T:Leadtools.LeadPointD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPointD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.op_Equality(Leadtools.LeadPointD,Leadtools.LeadPointD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadPointD" /> structures contain the same values.
            </summary>
      <param name="point1">
            The first <see cref="T:Leadtools.LeadPointD" /> structure to use in the comparison.
            </param>
      <param name="point2">
            The second <see cref="T:Leadtools.LeadPointD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPointD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.op_Inequality(Leadtools.LeadPointD,Leadtools.LeadPointD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadPointD" /> structures do not contain the same values.
            </summary>
      <param name="point1">
            The first <see cref="T:Leadtools.LeadPointD" /> structure to use in the comparison.
            </param>
      <param name="point2">
            The second <see cref="T:Leadtools.LeadPointD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPointD" /> structures do not have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadPointD" /> structure contains the same values as the specified object.
            </summary>
      <param name="obj">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPointD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Equals(Leadtools.LeadPointD)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadPointD" /> structure contains the same values as the specified object.
            </summary>
      <param name="value">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPointD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Leadtools.LeadPointD" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadPointD" /> from it.
            </summary>
      <param name="source">The source string. This must contain two double values (invariant culture)</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadPointD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPointD" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPointD" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPointD" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Offset(System.Double,System.Double)">
      <summary>
            Offsets point's <see cref="P:Leadtools.LeadPointD.X" /> and <see cref="P:Leadtools.LeadPointD.Y" /> coordinates by the specified amounts.
            </summary>
      <param name="offsetX">The amount to offset the point's <see cref="P:Leadtools.LeadPointD.X" /> coordinate.</param>
      <param name="offsetY">The amount to offset the point's <see cref="P:Leadtools.LeadPointD.Y" /> coordinate.</param>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadPointD.Empty" /> point.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.op_Multiply(Leadtools.LeadPointD,Leadtools.LeadMatrix)">
      <summary>
            Transforms the specified <see cref="T:Leadtools.LeadPoint" /> structure by the specified <see cref="T:Leadtools.LeadMatrix" /> structure.
            </summary>
      <param name="point">The point to transform.</param>
      <param name="matrix">The transformation matrix.</param>
      <returns>The transformed point.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.Multiply(Leadtools.LeadPointD,Leadtools.LeadMatrix)">
      <summary>
            Transforms the specified <see cref="T:Leadtools.LeadPoint" /> structure by the specified <see cref="T:Leadtools.LeadMatrix" /> structure.
            </summary>
      <param name="point">The point to transform.</param>
      <param name="matrix">The transformation matrix.</param>
      <returns>The transformed point.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.op_Explicit(Leadtools.LeadPointD)~Leadtools.LeadSizeD">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPointD" /> structure to a <see cref="T:Leadtools.LeadSizeD" /> structure.
            </summary>
      <param name="point">The point to convert.</param>
      <returns>The <see cref="T:Leadtools.LeadSizeD" /> structure.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointD.ToLeadPoint">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPointD" /> to a <see cref="T:Leadtools.LeadPoint" />.
            </summary>
      <returns>The converted point.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadPointD.Empty">
      <summary>
            Gets a special value that represents a point with no coordinates.
            </summary>
      <value>The empty point, which has <see cref="P:Leadtools.LeadPointD.X" /> and <see cref="P:Leadtools.LeadPointD.Y" /> property values of <see cref="F:System.Double.NaN" />.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadPointD.IsEmpty">
      <summary>
            Gets a value that indicates whether the point is the <see cref="P:Leadtools.LeadPointD.Empty" /> point.
            </summary>
      <value>
        <strong>true</strong> if the point is the <see cref="P:Leadtools.LeadPointD.Empty" /> point; otherwise, <strong>false</strong>.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadPointD.X">
      <summary>
            Gets or sets the X-coordinate of this <see cref="T:Leadtools.LeadPointD" /> structure.
            </summary>
      <value>The X-coordinate value of this point.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadPointD.Empty" /> point.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadPointD.Y">
      <summary>
            Gets or sets the Y-coordinate of this <see cref="T:Leadtools.LeadPointD" /> structure.
            </summary>
      <value>The Y-coordinate value of this point.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadPointD.Empty" /> point.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.LeadPointDConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadPointD" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadPointDHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.LeadPointD" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.LeadPointD" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadPointDHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadPointDHelper.Create(System.Double,System.Double)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadPointD" /> object with explicit parameters.
            </summary>
      <param name="x">
            Specifies the X-coordinate of the <see cref="T:Leadtools.LeadPointD" />.
            </param>
      <param name="y">
            Specifies the Y-coordinate of the <see cref="T:Leadtools.LeadPointD" />.
            </param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> object with <see cref="P:Leadtools.LeadPointD.X">LeadPointD.X</see> set to <paramref name="x" /> and
            <see cref="P:Leadtools.LeadPointD.Y">LeadPointD.Y</see> set to <paramref name="y" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDHelper.IsEmpty(Leadtools.LeadPointD)">
      <summary>
            Returns a value indicating whether a <see cref="T:Leadtools.LeadPointD" /> structure is empty.
            </summary>
      <param name="point">The point to check.</param>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadPointD" /> structure is empty; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>An empty <see cref="T:Leadtools.LeadPointD" /> object has coordinate values of NaN for both <see cref="P:Leadtools.LeadPointD.X" /> and <see cref="P:Leadtools.LeadPointD.Y" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDHelper.IsEqual(Leadtools.LeadPointD,Leadtools.LeadPointD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadPointD" /> objects contains the same coordinates.
            </summary>
      <param name="point1">
            The first <see cref="T:Leadtools.LeadPointD" /> on the left side of the comparison operator.
            </param>
      <param name="point2">
            The second <see cref="T:Leadtools.LeadPointD" /> on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPointD" /> have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDHelper.Multiply(Leadtools.LeadPointD,Leadtools.LeadMatrix)">
      <summary>
            Multiplies the specified <see cref="T:Leadtools.LeadPointD" />.
            </summary>
      <param name="point">The <see cref="T:Leadtools.LeadPointD" /> to multiply.</param>
      <param name="matrix">The amount to multiply.</param>
      <returns>The result <see cref="T:Leadtools.LeadPoint" /> object.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDHelper.ToPoint(Leadtools.LeadPointD)">
      <summary>
            Converts a <see cref="T:Leadtools.LeadPointD" /> to <see cref="T:Leadtools.LeadPoint" /></summary>
      <param name="point">The point object</param>
      <returns>The result <see cref="T:Leadtools.LeadPoint" /> object.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointDHelper.GetStringDescription(Leadtools.LeadPointD)">
      <summary>
            Returns A human-readable representation of the specified <see cref="T:Leadtools.LeadPointD" />.
            </summary>
      <param name="point">The point object.</param>
      <returns>A human-readable representation of the specified <see cref="T:Leadtools.LeadPointD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadPointDHelper.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadPointD" /> with uninitialized members.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.LeadPointD" /> with uninitialized members.
            </value>
      <para>An empty <see cref="T:Leadtools.LeadPointD" /> object has coordinate values of NaN for both <see cref="P:Leadtools.LeadPointD.X" /> and <see cref="P:Leadtools.LeadPointD.Y" />.</para>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadSizeD">
      <summary>
            Stores two double numbers that represent the size of an object.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.LeadSizeD" /> structure specifies a platform-independent representation of a size with double precision floating values</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.LeadSizeD" /> with the specified values.
            </summary>
      <param name="width">The width value. Must be a value greater than or equal to 0.</param>
      <param name="height">The height value. Must be a value greater than or equal to 0.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.Create(System.Double,System.Double)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.LeadSizeD" /> with the specified values.
            </summary>
      <param name="width">The width value. Must be a value greater than or equal to 0.</param>
      <param name="height">The height value. Must be a value greater than or equal to 0.</param>
      <remarks>The object this method creates.</remarks>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.Clone">
      <summary>
            Returns an exact copy of this <see cref="T:Leadtools.LeadSizeD" /></summary>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.Equals(Leadtools.LeadSizeD,Leadtools.LeadSizeD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadSizeD" /> structures contain the same values.
            </summary>
      <param name="size1">
            The first <see cref="T:Leadtools.LeadSizeD" /> structure to use in the comparison.
            </param>
      <param name="size2">
            The second <see cref="T:Leadtools.LeadSizeD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSizeD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.op_Equality(Leadtools.LeadSizeD,Leadtools.LeadSizeD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadSizeD" /> structures contain the same values.
            </summary>
      <param name="size1">
            The first <see cref="T:Leadtools.LeadSizeD" /> structure to use in the comparison.
            </param>
      <param name="size2">
            The second <see cref="T:Leadtools.LeadSizeD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSizeD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.op_Inequality(Leadtools.LeadSizeD,Leadtools.LeadSizeD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadSizeD" /> structures do not contain the same values.
            </summary>
      <param name="size1">
            The first <see cref="T:Leadtools.LeadSizeD" /> structure to use in the comparison.
            </param>
      <param name="size2">
            The second <see cref="T:Leadtools.LeadSizeD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSizeD" /> structures do not have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadSizeD" /> structure contains the same values as the specified object.
            </summary>
      <param name="obj">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSizeD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.Equals(Leadtools.LeadSizeD)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadSizeD" /> structure contains the same values as the specified object.
            </summary>
      <param name="value">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSizeD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Leadtools.LeadSizeD" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadSizeD" /> from it.
            </summary>
      <param name="source">The source string. This must contain two double values (invariant culture)</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadSizeD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSizeD" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSizeD" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSizeD" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.op_Explicit(Leadtools.LeadSizeD)~Leadtools.LeadPointD">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSizeD" /> structure to a <see cref="T:Leadtools.LeadPointD" /> structure.
            </summary>
      <param name="size">The size to convert.</param>
      <returns>The <see cref="T:Leadtools.LeadPointD" /> structure.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeD.ToLeadSize">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSizeD" /> to a <see cref="T:Leadtools.LeadSize" />.
            </summary>
      <returns>The converted size.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadSizeD.Empty">
      <summary>
            Gets a special value that represents a size with no coordinates.
            </summary>
      <value>The empty size, which has <see cref="P:Leadtools.LeadSizeD.Width" /> and <see cref="P:Leadtools.LeadSizeD.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadSizeD.IsEmpty">
      <summary>
            Gets a value that indicates whether the size is the <see cref="P:Leadtools.LeadSizeD.Empty" /> size.
            </summary>
      <value>
        <strong>true</strong> if the size is the <see cref="P:Leadtools.LeadSizeD.Empty" /> size; otherwise, <strong>false</strong>.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadSizeD.Width">
      <summary>
            Gets or sets the width of this <see cref="T:Leadtools.LeadSizeD" /> structure.
            </summary>
      <value>The width of this size. Must be a value greater than or equal to 0.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadSizeD.Empty" /> size.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadSizeD.Height">
      <summary>
            Gets or sets the height this <see cref="T:Leadtools.LeadSizeD" /> structure.
            </summary>
      <value>The height of this size. Must be a value greater than or equal to 0.</value>
      <remarks>
        <para>You cannot change the values of the <see cref="P:Leadtools.LeadSizeD.Empty" /> size.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.LeadSizeDConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadSizeD" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadSizeDHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.LeadSizeD" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.LeadSizeD" /> structures.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadSizeDHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadSizeDHelper.Create(System.Double,System.Double)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadSizeD" /> structure with explicit parameters.
            </summary>
      <param name="width">
            Specifies the width of the <see cref="T:Leadtools.LeadSizeD" /> structure.
            </param>
      <param name="height">
            Specifies the height of the <see cref="T:Leadtools.LeadSizeD" /> structure.
            </param>
      <returns>A <see cref="T:Leadtools.LeadSizeD" /> structure with <see cref="P:Leadtools.LeadSizeD.Width">LeadSizeD.Width</see> set to <paramref name="width" /> and
            <see cref="P:Leadtools.LeadSizeD.Height">LeadSizeD.Height</see> set to <paramref name="height" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDHelper.IsEmpty(Leadtools.LeadSizeD)">
      <summary>
            Returns a value indicating whether a <see cref="T:Leadtools.LeadSizeD" /> structure is empty.
            </summary>
      <param name="size">The size to check.</param>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadSizeD" /> structure is empty; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>An empty <see cref="T:Leadtools.LeadSizeD" /> structure has coordinate values of "minimum double" for both the <see cref="P:Leadtools.LeadSizeD.Width" /> and <see cref="P:Leadtools.LeadSizeD.Height" /> objects.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDHelper.IsEqual(Leadtools.LeadSizeD,Leadtools.LeadSizeD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadSizeD" /> structures contains the same coordinates.
            </summary>
      <param name="size1">
            The first <see cref="T:Leadtools.LeadSizeD" /> structure on the left side of the comparison operator.
            </param>
      <param name="size2">
            The second <see cref="T:Leadtools.LeadSizeD" /> structure on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSizeD" /> structures have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDHelper.ToSize(Leadtools.LeadSizeD)">
      <summary>
            Converts a <see cref="T:Leadtools.LeadSizeD" /> to <see cref="T:Leadtools.LeadSize" /></summary>
      <param name="size">The size object</param>
      <returns>The resulting <see cref="T:Leadtools.LeadSize" /> object.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeDHelper.GetStringDescription(Leadtools.LeadSizeD)">
      <summary>
            Returns A human-readable representation of the specified <see cref="T:Leadtools.LeadSizeD" />.
            </summary>
      <param name="size">The size object.</param>
      <returns>A human-readable representation of the specified <see cref="T:Leadtools.LeadSizeD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadSizeDHelper.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadSizeD" /> structure with uninitialized members.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.LeadSizeD" /> structure with uninitialized members.
            </value>
      <para>An empty <see cref="T:Leadtools.LeadSizeD" /> structure has coordinate values of "minimum double" for both the <see cref="P:Leadtools.LeadSizeD.Width" /> and <see cref="P:Leadtools.LeadSizeD.Height" /> objects.</para>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadLengthD">
      <summary>
            Defines a double length value
            </summary>
      <remarks>
        <para>A double length value</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.#ctor(System.Double)">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.LeadLengthD" /> with the specified value.
            </summary>
      <param name="value">New value.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.Create(System.Double)">
      <summary>
            Creates a new instance of <see cref="T:Leadtools.LeadLengthD" /> with the specified value.
            </summary>
      <param name="value">Value to set.</param>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.Clone">
      <summary>
            Returns an exact copy of this <see cref="T:Leadtools.LeadLengthD" /></summary>
      <returns>The object this method creates.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.Equals(Leadtools.LeadLengthD,Leadtools.LeadLengthD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadLengthD" /> structures contain the same values.
            </summary>
      <param name="length1">
            The first <see cref="T:Leadtools.LeadLengthD" /> structure to use in the comparison.
            </param>
      <param name="length2">
            The second <see cref="T:Leadtools.LeadLengthD" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadLengthD" /> structures have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.op_Equality(Leadtools.LeadLengthD,Leadtools.LeadLengthD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadLengthD" /> structures contains the same values.
            </summary>
      <param name="length1">
            The first <see cref="T:Leadtools.LeadLengthD" /> structure on the left side of the comparison operator.
            </param>
      <param name="length2">
            The second <see cref="T:Leadtools.LeadLengthD" /> structure on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadLengthD" /> have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.op_Inequality(Leadtools.LeadLengthD,Leadtools.LeadLengthD)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadLengthD" /> structure does not contain the same values as the specified object.
            </summary>
      <param name="length1">
            The first <see cref="T:Leadtools.LeadLengthD" /> structure on the left side of the comparison operator.
            </param>
      <param name="length2">
            The second <see cref="T:Leadtools.LeadLengthD" /> structure on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadLengthD" /> do not have the same values; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadLengthD" /> structure contains the same value as the specified object.
            </summary>
      <param name="obj">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadLengthD" /> structures have the same value; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.Equals(Leadtools.LeadLengthD)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadLengthD" /> structure contains the same value as the specified object.
            </summary>
      <param name="value">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadLengthD" /> structures have the same value; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Leadtools.LeadLengthD" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadLengthD" /> from it.
            </summary>
      <param name="source">The source string. This must contain a single double value (invariant culture)</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadLengthD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadLengthD" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadLengthD" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthD.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadLengthD" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadLengthD.Value">
      <summary>
            Gets or sets the value of this <see cref="T:Leadtools.LeadLengthD" /> object.
            </summary>
      <value>The value of this <see cref="T:Leadtools.LeadLengthD" /> object</value>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadLengthDConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadLengthD" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthDConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthDConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadLengthDHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.LeadLengthD" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.LeadLengthD" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadLengthDHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadLengthDHelper.Create(System.Double)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadLengthD" /> object with explicit parameters.
            </summary>
      <param name="lengthValue">
            Specifies the value of the <see cref="T:Leadtools.LeadLengthD" />.
            </param>
      <returns>A <see cref="T:Leadtools.LeadLengthD" /> object with <see cref="P:Leadtools.LeadLengthD.Value">LeadLengthD.Value</see> set to <paramref name="lengthValue" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthDHelper.IsEqual(Leadtools.LeadLengthD,Leadtools.LeadLengthD)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadLengthD" /> objects contains the same coordinates.
            </summary>
      <param name="length1">
            The first <see cref="T:Leadtools.LeadLengthD" /> on the left side of the comparison operator.
            </param>
      <param name="length2">
            The second <see cref="T:Leadtools.LeadLengthD" /> on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadLengthD" /> have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadLengthDHelper.GetStringDescription(Leadtools.LeadLengthD)">
      <summary>
            Returns a human-readable representation of the specified <see cref="T:Leadtools.LeadLengthD" />.
            </summary>
      <param name="length">The length object.</param>
      <returns>A human-readable representation of the specified <see cref="T:Leadtools.LeadLengthD" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadPoint">
      <summary>
            Stores two integer numbers that represent the coordinates of a point (X and Y).
            </summary>
      <remarks>
        <para>Various parts of the LEADTOOLS toolkit require a structure that represents a point with X and Y values.
            Although the .NET framework contains many structures that can be used for this such as <strong>System.Drawing.Point</strong> and <strong>System.Windows.Point</strong>, they
            are tied to specific platforms (GDI+ and WPF/Silverlight in the previous case).</para>
        <para>The <see cref="T:Leadtools.LeadPoint" /> structure specifies a platform-independent representation of a point. If required, you can convert a <see cref="T:Leadtools.LeadPoint" /> structure
            to a platform-independent point.</para>
        <para>To convert a GDI+ System.Drawing.Point (source) to LeadPoint, use the following code:</para>
        <para>
          <c>LeadPoint dest = new LeadPoint(source.X, source.Y)</c>
        </para>
        <para>To convert a LeadPoint (source) to GDI+ System.Drawing.Point, use the following code:</para>
        <para>
          <c>System.Drawing.Point dest = new System.Drawing.Point(source.X, source.Y)</c>
        </para>
        <para>To convert a WPF System.Windows.Point (source) to LeadPoint, use the following code:</para>
        <para>
          <c>LeadPoint dest = new LeadPoint((int)source.X, (int)source.Y)</c>
        </para>
        <para>To convert a LeadPoint (source) to WPF System.Windows.Point, use the following code:</para>
        <para>
          <c>System.Windows.Point dest = new System.Windows.Point(source.X, source.Y)</c>
        </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>typedef struct LeadPoint LeadPoint;</pre>
      </objectivec>
      <java>
        <pre>public final class LeadPoint</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadPoint.Equals(Leadtools.LeadPoint,Leadtools.LeadPoint)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadPoint" /> structures contain the same coordinates.
            </summary>
      <param name="point1">
            The first <see cref="T:Leadtools.LeadPoint" /> structure to use in the comparison.
            </param>
      <param name="point2">
            The second <see cref="T:Leadtools.LeadPoint" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPoint" /> structures have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>int LeadPoint_IsEqual(LeadPoint point1, LeadPoint point2);</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.LeadPoint.Create(System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadPoint" /> structure with explicit parameters.
            </summary>
      <param name="x">
            Specifies the X-coordinate of the <see cref="T:Leadtools.LeadPoint" /> structure.
            </param>
      <param name="y">
            Specifies the Y-coordinate of the <see cref="T:Leadtools.LeadPoint" /> structure.
            </param>
      <returns>A <see cref="T:Leadtools.LeadPoint" /> structure with <see cref="P:Leadtools.LeadPoint.X" /> set to <paramref name="x" /> and <see cref="P:Leadtools.LeadPoint.Y" /> set to <paramref name="y" />.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadPoint LeadPoint_Make(int x, int y);</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.LeadPoint.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadPoint" /> structure with explicit parameters.
            </summary>
      <param name="x">
            Specifies the X-coordinate of the <see cref="T:Leadtools.LeadPoint" /> structure.
            </param>
      <param name="y">
            Specifies the Y-coordinate of the <see cref="T:Leadtools.LeadPoint" /> structure.
            </param>
      <noremarks />
      <noexample />
      <java>
        <pre>public LeadPoint (int x, int y)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadPoint.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPoint" /> structure to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadPoint.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPoint" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPoint.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPoint" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPoint.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadPoint" /> from it.
            </summary>
      <param name="source">The source string. This must contain two integer values (invariant culture)</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadPoint" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPoint.op_Equality(Leadtools.LeadPoint,Leadtools.LeadPoint)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadPoint" /> structure contains the same coordinates as the specified object.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.LeadPoint" /> structure on the left side of the comparison operator.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.LeadPoint" /> structure on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPoint" /> have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPoint.op_Inequality(Leadtools.LeadPoint,Leadtools.LeadPoint)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadPoint" /> structure does not contain the same coordinates as the specified object.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.LeadPoint" /> structure on the left side of the comparison operator.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.LeadPoint" /> structure on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPoint" /> structures do not have the same  coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPoint.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadPoint" /> structure contains the same coordinates as the specified object.
            </summary>
      <param name="obj">
            The object to be used in the comparison with the current structure.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPoint" /> structures have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
      <java>
        <pre>public boolean equals(Object obj)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadPoint.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Leadtools.LeadPoint" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPoint.clone_Java">
      <summary>
            Returns a copy of this LeadPoint
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public LeadPoint clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadPoint.ToLeadPointD">
      <summary>
            Converts this <see cref="T:Leadtools.LeadPoint" /> to a <see cref="T:Leadtools.LeadPointD" />.
            </summary>
      <returns>The converted point.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadPoint.Empty">
      <summary>
            Represents a new instance of a <see cref="T:Leadtools.LeadPoint" /> structure with uninitialized members.
            </summary>
      <value>
            A new instance of a <see cref="T:Leadtools.LeadPoint" /> structure with uninitialized members.
            </value>
      <para>An empty <see cref="T:Leadtools.LeadPoint" /> structure has coordinate values of zero for both <see cref="P:Leadtools.LeadPoint.X" /> and <see cref="P:Leadtools.LeadPoint.Y" />.</para>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadPoint LeadPoint_Empty();</pre>
      </objectivec>
      <java>
        <pre>static public LeadPoint getEmpty()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadPoint.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Leadtools.LeadPoint" /> structure is empty.
            </summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadPoint" /> structure is empty; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>An empty <see cref="T:Leadtools.LeadPoint" /> has coordinates value of zero for both <see cref="P:Leadtools.LeadPoint.X" /> and <see cref="P:Leadtools.LeadPoint.Y" />.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>int LeadPoint_IsEmpty(LeadPoint point);</pre>
      </objectivec>
      <java>
        <pre>public boolean isEmpty()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadPoint.X">
      <summary>
            Gets or sets a value that represents the X coordinate for this <see cref="T:Leadtools.LeadPoint" /> structure.
            </summary>
      <value>The x-coordinate of this <see cref="T:Leadtools.LeadPoint" /> structure.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getX()
public void setX(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadPoint.Y">
      <summary>
            Gets or sets a value that represents the Y coordinate for this <see cref="T:Leadtools.LeadPoint" /> structure.
            </summary>
      <value>The y-coordinate of this <see cref="T:Leadtools.LeadPoint" /> structure.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getY()
public void setY(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.LeadSize">
      <summary>
            Stores two integer numbers that represent a size (Width and Height).
            </summary>
      <remarks>
        <para>Various parts of the LEADTOOLS toolkit require a structure that represents a size with width and height values.
            Although the .NET framework contains many structures that can be used for this such as <strong>System.Drawing.Size</strong> and <strong>System.Windows.Size</strong> they
            are tied to a specific platform (GDI+ and WPF/Silverlight in the previous case).</para>
        <para>The <see cref="T:Leadtools.LeadSize" /> structure specifies a platform-independent representation of a size. If required, you can convert a <see cref="T:Leadtools.LeadSize" /> structure
            to a platform-independent size.</para>
        <para>To convert a GDI+ System.Drawing.Size (source) to LeadSize, use the following code:</para>
        <para>
          <c>LeadSize dest = new LeadSize(source.Width, source.Height)</c>
        </para>
        <para>To convert a LeadSize (source) to GDI+ System.Drawing.Size, use the following code:</para>
        <para>
          <c>System.Drawing.Size dest = new System.Drawing.Size(source.Width, source.Height)</c>
        </para>
        <para>To convert a WPF System.Windows.Size (source) to LeadSize, use the following code:</para>
        <para>
          <c>LeadSize dest = new LeadSize((int)source.Width, (int)source.Height)</c>
        </para>
        <para>To convert a LeadSize (source) to WPF System.Windows.Size, use the following code:</para>
        <para>
          <c>System.Windows.Size dest = new System.Windows.Size(source.Width, source.Height)</c>
        </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>typedef struct LeadSize LeadSize;</pre>
      </objectivec>
      <java>
        <pre>public final class LeadSize implements Serializable</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadSize.Create(System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadSize" /> structure with explicit parameters.
            </summary>
      <param name="width">
            Specifies the width of the <see cref="T:Leadtools.LeadSize" /> structure. Must be a value greater than or equal to 0.
            </param>
      <param name="height">
            Specifies the height of the <see cref="T:Leadtools.LeadSize" /> structure. Must be a value greater than or equal to 0.
            </param>
      <returns>A <see cref="T:Leadtools.LeadSize" /> structure with the <see cref="P:Leadtools.LeadSize.Width" /> set to <paramref name="width" /> and the <see cref="P:Leadtools.LeadSize.Height" /> set to <paramref name="height" />.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadSize LeadSize_Make(int width, int height);</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.LeadSize.Equals(Leadtools.LeadSize,Leadtools.LeadSize)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadSize" /> structures contain the same coordinates.
            </summary>
      <param name="size1">
            The first <see cref="T:Leadtools.LeadSize" /> structure to use in the comparison.
            </param>
      <param name="size2">
            The second <see cref="T:Leadtools.LeadSize" /> structure to use in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSize" /> structures have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>int LeadSize_IsEqual(LeadSize size1, LeadSize size2);</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.LeadSize.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadSize" /> structure object with explicit parameters.
            </summary>
      <param name="width">
            Specifies the width of the <see cref="T:Leadtools.LeadSize" />.
            </param>
      <param name="height">
            Specifies the height of the <see cref="T:Leadtools.LeadSize" />.
            </param>
      <noremarks />
      <noexample />
      <java>
        <pre>public LeadSize(int width, int height)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadSize.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSize" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadSize.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSize" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSize.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSize" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSize.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadSize" /> from it.
            </summary>
      <param name="source">The source string. This must contain two integer values (invariant culture)</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadSize" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSize.op_Equality(Leadtools.LeadSize,Leadtools.LeadSize)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadSize" /> contains the same width and height as the specified object.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.LeadSize" /> to be used in the comparison.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.LeadSize" /> to be used in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSize" /> have the same width and height; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSize.op_Inequality(Leadtools.LeadSize,Leadtools.LeadSize)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadSize" /> does not contain the same width and height as the specified object.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.LeadSize" /> to be used in the comparison.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.LeadSize" /> to be used in the comparison.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSize" /> do not have the same width and height; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
      <docaddon>yes</docaddon>
    </member>
    <member name="M:Leadtools.LeadSize.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadSize" /> contains the same width and height as the specified object.
            </summary>
      <param name="obj">
            The object to be used in the comparison with the current object.
            </param>
      <returns>
        <strong>true</strong> if the <paramref name="obj" /> has the same width and height as this <see cref="T:Leadtools.LeadSize" />; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
      <java>
        <pre>public boolean equals(Object obj)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadSize.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Leadtools.LeadSize" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
      <java>
        <pre>public int hashCode()</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadSize.clone_Java">
      <summary>
            Returns a copy of this LeadSize
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public LeadSize clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadSize.ToLeadSizeD">
      <summary>
            Converts this <see cref="T:Leadtools.LeadSize" /> to a <see cref="T:Leadtools.LeadSizeD" />.
            </summary>
      <returns>The converted size.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadSize.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadSize" /> structure with uninitialized members.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.LeadSize" /> structure with uninitialized members.
            </value>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadSize" /> has width and height values of zero.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>LeadSize LeadSize_Empty();</pre>
      </objectivec>
      <java>
        <pre>static public LeadSize getEmpty()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadSize.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Leadtools.LeadSize" /> structure is empty.
            </summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadSize" /> structure is empty; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadSize" /> has a width and height value of zero.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>int LeadSize_IsEmpty(LeadSize size);</pre>
      </objectivec>
      <java>
        <pre>public boolean isEmpty()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadSize.Width">
      <summary>
            Gets or sets a value that represents the width for this <see cref="T:Leadtools.LeadSize" />.
            </summary>
      <value>Value that indicates the width of the size.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadSize.Height">
      <summary>
            Gets or sets a value that represents the height for this <see cref="T:Leadtools.LeadSize" />.
            </summary>
      <value>Value that indicates the height of the size.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.LeadRect">
      <summary>
            Stores four integer numbers that represent the coordinates and size of a rectangle (X, Y, Width, and Height).
            </summary>
      <remarks>
        <para>Various parts of the LEADTOOLS toolkit require a structure that represents a rectangle with location and size values.
            Although the .NET framework contains many structures that can be used for this such as <strong>System.Drawing.Rectangle</strong> and <strong>System.Windows.Rect</strong> they
            are tied to a specific platform (GDI+ and WPF/Silverlight in the previous case).</para>
        <para>The <see cref="T:Leadtools.LeadRect" /> structure specifies a platform independent representation of a rectangle. If required, you can convert <see cref="T:Leadtools.LeadRect" />
            to a platform independent rectangle.</para>
        <para>To convert a GDI+ System.Drawing.Rectangle (source) to LeadRect, use the following code:</para>
        <para>
          <c>LeadRect dest = new LeadRect(source.X, source.Y, source.Width, source.Height)</c>
        </para>
        <para>To convert a LeadRect (source) to GDI+ System.Drawing.Rectangle, use the following code:</para>
        <para>
          <c>System.Drawing.Rectangle dest = new System.Drawing.Rectangle(source.X, source.Y, source.Width, source.Height)</c>
        </para>
        <para>To convert a WPF System.Windows.Rect (source) to LeadRect, use the following code:</para>
        <para>
          <c>LeadRect dest = new LeadRect((int)source.X, (int)source.Y, (int)source.Width, (int)source.Height)</c>
        </para>
        <para>To convert a LeadRect (source) to WPF System.Windows.Rect, use the following code:</para>
        <para>
          <c>System.Windows.Rect dest = new System.Windows.Rect(source.X, source.Y, source.Width, source.Height)</c>
        </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>typedef struct LeadRect LeadRect;</pre>
      </objectivec>
      <java>
        <pre>public final class LeadRect</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Create(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadRect" /> object with explicit parameters.
            </summary>
      <param name="x">
            Specifies the X coordinates of the <see cref="T:Leadtools.LeadRect" />.
            </param>
      <param name="y">
            Specifies the Y coordinates of the <see cref="T:Leadtools.LeadRect" />.
            </param>
      <param name="width">
            Specifies the width of the <see cref="T:Leadtools.LeadRect" />. Must be a value greater than or equal to 0.
            </param>
      <param name="height">
            Specifies the height of the <see cref="T:Leadtools.LeadRect" />. Must be a value greater than or equal to 0.
            </param>
      <returns>A <see cref="T:Leadtools.LeadRect" /> with <see cref="P:Leadtools.LeadRect.X" /> set to <paramref name="x" />, <see cref="P:Leadtools.LeadRect.Y" /> set to <paramref name="y" />, <see cref="P:Leadtools.LeadRect.Width" /> set to
            <paramref name="width" /> and <see cref="P:Leadtools.LeadRect.Height" /> set to <paramref name="height" />.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadRect LeadRect_Make(int x, int y, int width, int height);</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.LeadRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadRect" /> structure with the specified location and size
            </summary>
      <param name="left">
            The x-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="top">
            The y-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="width">
            The width of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="height">
            The height of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <noremarks />
      <noexample />
      <java>
        <pre>public LeadRect(int x, int y, int width, int height)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a <see cref="T:Leadtools.LeadRect" /> structure with the specified edge locations.
            </summary>
      <param name="left">
            The x-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="top">
            The y-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="right">
            The x-coordinate of the lower-right corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="bottom">
            The y-coordinate of the lower-right corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadRect LeadRect_FromLTRB(int left, int top, int right, int bottom);</pre>
      </objectivec>
      <java>
        <pre>public static LeadRect fromLTRB(int left, int top, int right, int bottom)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.ToString">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRect" /> to a human-readable string.
            </summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public String toString()</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRect" /> to a human-readable string using the specified provider.
            </summary>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRect" /> to a human-readable string using the specified format and provider.
            </summary>
      <param name="format">Format</param>
      <param name="provider">Format provider</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.Parse(System.String)">
      <summary>
            Parses a string and returns a new instance of <see cref="T:Leadtools.LeadRect" /> from it.
            </summary>
      <param name="source">The source string. This must contain four integer values (invariant culture)</param>
      <returns>Returns a new instance of <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.#ctor(Leadtools.LeadPoint,Leadtools.LeadSize)">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.LeadRect" /> class with the specified location and size.
            </summary>
      <param name="location">
            The coordinates of the upper-left corner of the rectangle.
            </param>
      <param name="size">
            The width and height of the rectangle.
            </param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.Equals(System.Object)">
      <summary>
            Determines whether the specified object equals this <see cref="T:Leadtools.LeadRect" /> object.
            </summary>
      <param name="obj">
            The <see cref="T:System.Object" /> to test.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRect" /> have the same location and size; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>For more information refer to <see cref="M:System.Object.Equals(System.Object)" />.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>int LeadRect_IsEqual(LeadRect rect1, LeadRect rect2);</pre>
      </objectivec>
      <java>
        <pre>public boolean equals(Object obj)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.op_Equality(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadRect" /> contains the same location and size as the specified object.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.LeadRect" /> on the left side of the comparison operator.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.LeadRect" /> on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRect" /> have the same location and size; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.op_Inequality(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Specifies whether this <see cref="T:Leadtools.LeadRect" /> does not contain the same location and size as the specified object.
            </summary>
      <param name="left">
            The first <see cref="T:Leadtools.LeadRect" /> on the left side of the comparison operator.
            </param>
      <param name="right">
            The second <see cref="T:Leadtools.LeadRect" /> on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRect" /> do not have the same location and size; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.Contains(System.Int32,System.Int32)">
      <summary>
            Determines whether the specified point is contained within this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="x">
            The x-coordinate of the point to test.
            </param>
      <param name="y">
            The y-coordinate of the point to test.
            </param>
      <returns>
        <strong>true</strong> if the specified point is contained within this <see cref="T:Leadtools.LeadRect" />; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>public boolean contains(int x, int y)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Contains(Leadtools.LeadPoint)">
      <summary>
            Determines if the specified point is contained within this <see cref="T:Leadtools.LeadPoint" /> structure.
            </summary>
      <param name="pt">The <see cref="T:Leadtools.LeadPoint" /> structure to be tested.</param>
      <returns>This method returns <strong>true</strong> if the point represented by the <i>pt</i> parameter is contained within this <see cref="T:Leadtools.LeadPoint" /> structure; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>int LeadRect_ContainsPoint(LeadRect rect, LeadPoint testPoint);</pre>
      </objectivec>
      <java>
        <pre>public boolean containsPoint(LeadPoint point)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Contains(Leadtools.LeadRect)">
      <summary>
            Determines if the rectangular region represented by <i>rect</i> is entirely contained within this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Leadtools.LeadRect" /> structure to be tested.</param>
      <returns>This method returns <strong>true</strong> if the rectangular region represented by <i>rect</i> is entirely contained within the rectangular region represented by this <see cref="T:Leadtools.LeadRect" />; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>int LeadRect_ContainsRect(LeadRect rect, LeadRect testRect);</pre>
      </objectivec>
      <java>
        <pre>public boolean containsRect(LeadRect rect)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.GetHashCode">
      <summary>
            Returns the hash code for this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <remarks>
        <para>For information about this method, see <see cref="M:System.Object.GetHashCode" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.Inflate(System.Int32,System.Int32)">
      <summary>
            Inflates a <see cref="T:Leadtools.LeadRect" /> structure by the specified amount.
            </summary>
      <param name="width">
            The amount to inflate this <see cref="T:Leadtools.LeadRect" /> horizontally.
            </param>
      <param name="height">
            The amount to inflate this <see cref="T:Leadtools.LeadRect" /> vertically.
            </param>
      <remarks>
        <para>This method inflates this rectangle, not a copy of it. The inflation along an axis is in two directions (minus direction and plus direction). For example, if a 150 by 150 rectangle is inflated by 50 in the x-axis, the resulting rectangle will be 250 units long (the original 150, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.
            If either width or height is negative, the rectangle structure is deflated in the corresponding direction.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.Inflate(Leadtools.LeadSize)">
      <summary>
            Inflates this <see cref="T:Leadtools.LeadRect" /> structure by the specified amount.
            </summary>
      <param name="size">The amount to inflate this rectangle.</param>
      <remarks>
        <para>This method inflates this rectangle, not a copy of it. The inflation along an axis is in two directions (minus direction and plus direction). For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resulting rectangle will be 150 units long (the original 50, plus the 50 in the minus direction, and plus the 50 in the plus direction). The rectangle's geometric center is maintained.</para>
        <para>If either size.Width or size.Height is negative, the <see cref="T:Leadtools.LeadRect" /> is deflated in the corresponding direction.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>LeadRect LeadRect_Inflate(LeadRect rect, LeadSize size);</pre>
      </objectivec>
      <java>
        <pre>public void inflate(int width, int height)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Inflate(Leadtools.LeadRect,System.Int32,System.Int32)">
      <summary>
            Creates and returns an inflated copy of the specified <see cref="T:Leadtools.LeadRect" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.
            </summary>
      <param name="rect">The <see cref="T:Leadtools.LeadRect" /> to be copied.  This rectangle is not modified.</param>
      <param name="x">The amount to inflate the copy of the rectangle along the x-axis.</param>
      <param name="y">The amount to inflate the copy of the rectangle along the y-axis.</param>
      <returns>The inflated <see cref="T:Leadtools.LeadRect" /> structure.</returns>
      <remarks>
        <para>This method inflates this rectangle, not a copy of it. The inflation along an axis is in two directions (minus direction and plus direction). For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resulting rectangle will be 150 units long (the original 50, plus the 50 in the minus direction, and plus the 50 in the plus direction). The rectangle's geometric center is maintained.</para>
        <para>If either size.Width or size.Height is negative, the <see cref="T:Leadtools.LeadRect" /> is deflated in the corresponding direction.</para>
      </remarks>
      <noexample />
      <java>
        <pre>public static LeadRect inflateRect(LeadRect rect, int width, int height)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Intersect(Leadtools.LeadRect)">
      <summary>
            Replaces this <see cref="T:Leadtools.LeadRect" /> structure with the intersection of itself and the specified <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="rect">The rectangle to intersect.</param>
      <noremarks />
      <noexample />
      <java>
        <pre>public void intersect(LeadRect rect)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Intersect(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Returns an <see cref="T:Leadtools.LeadRect" /> structure that represents the intersection of two rectangles. If there is no intersection, an empty rectangle is returned.
            </summary>
      <param name="a">A rectangle to intersect.</param>
      <param name="b">A rectangle to intersect</param>
      <returns>A third <see cref="T:Leadtools.LeadRect" /> structure the size of which represents the overlapped area of the two specified rectangles.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadRect LeadRect_Intersect(LeadRect rect1, LeadRect rect2);</pre>
      </objectivec>
      <java>
        <pre>public static LeadRect intersectRects(LeadRect rect1, LeadRect rect2)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.IntersectsWith(Leadtools.LeadRect)">
      <summary>
            Determines if this rectangle intersects with a test rectangle.
            </summary>
      <param name="rect">The rectangle to test.</param>
      <returns>This method returns <strong>true</strong> if there is any intersection; <strong>false</strong> otherwise.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>int LeadRect_IntersectsWith(LeadRect rect, LeadRect testRect);</pre>
      </objectivec>
      <java>
        <pre>public boolean intersectsWith(LeadRect rect)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Union(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Gets a rectangle structure that contains the union of two rectangle structures.
            </summary>
      <param name="a">
            A rectangle to union.
            </param>
      <param name="b">
            A rectangle to union 
            </param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadRect LeadRect_Union(LeadRect rect1, LeadRect rect2);</pre>
      </objectivec>
      <java>
        <pre>public void union(LeadRect rect)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Offset(Leadtools.LeadPoint)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="pos">The amount to offset the location.</param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadRect LeadRect_Offset(LeadRect rect, LeadSize size);</pre>
      </objectivec>
      <java>
        <pre>public void offset(int offsetX, int offsetY)</pre>
      </java>
    </member>
    <member name="M:Leadtools.LeadRect.Offset(System.Int32,System.Int32)">
      <summary>
            Adjusts the location of this rectangle by the specified amounts.
            </summary>
      <param name="x">The amount to offset the location horizontally.</param>
      <param name="y">The amount to offset the location vertically.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.ToLeadRectD">
      <summary>
            Converts this <see cref="T:Leadtools.LeadRect" /> to a <see cref="T:Leadtools.LeadRectD" />.
            </summary>
      <returns>The converted rect.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.Normalize">
      <summary>
            Normalizes the rectangle so that both the height and width are positive.
            </summary>
      <remarks>
        <para>This method compares the top and bottom values, and swaps them if the top is greater than the bottom. Similarly, it swaps the left and right
            values if the left is greater than the right. This method is useful when dealing with different mapping modes and inverted rectangles.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRect.Normalize(Leadtools.LeadRect)">
      <summary>
            Gets the normalized version of a rectangle so that both the height and width are positive.
            </summary>
      <remarks>
        <para>This method compares the top and bottom values, and swaps them if the top is greater than the bottom. Similarly, it swaps the left and right
            values if the left is greater than the right. This method is useful when dealing with different mapping modes and inverted rectangles.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRect.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadRect" /> with uninitialized members.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.LeadRect" /> with uninitialized members.
            </value>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadRect" /> contains values of <see cref="P:Leadtools.LeadRect.X" />, <see cref="P:Leadtools.LeadRect.Y" />, <see cref="P:Leadtools.LeadRect.Width" /> and <see cref="P:Leadtools.LeadRect.Height" /> of zero.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>LeadRect LeadRect_Empty();</pre>
      </objectivec>
      <java>
        <pre>static public LeadRect getEmpty()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Leadtools.LeadRect" /> structure is empty.
            </summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadRect" /> structure is empty; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadRect" /> contains values of <see cref="P:Leadtools.LeadRect.X" />, <see cref="P:Leadtools.LeadRect.Y" />, <see cref="P:Leadtools.LeadRect.Width" /> and <see cref="P:Leadtools.LeadRect.Height" /> of zero.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>int LeadRect_IsEmpty(LeadRect rect);</pre>
      </objectivec>
      <java>
        <pre>public boolean isEmpty()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.X">
      <summary>
            Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>The x-coordinate of this <see cref="T:Leadtools.LeadRect" />.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getX()
public void setX(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Y">
      <summary>
            Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>The y-coordinate of this <see cref="T:Leadtools.LeadRect" />.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getY()
public void setY(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Right">
      <summary>
            Gets the x-coordinate of the upper-right corner of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>The right edge of this <see cref="T:Leadtools.LeadRect" />.</value>
      <remarks>
        <para>The upper-right corner is the sum of the <see cref="P:Leadtools.LeadRect.X" /> and the <see cref="P:Leadtools.LeadRect.Width" /> property values of this <see cref="T:Leadtools.LeadRect" /> structure.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>int LeadRect_Right(LeadRect rect);</pre>
      </objectivec>
      <java>
        <pre>public int getRight()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Bottom">
      <summary>
            Gets the y-coordinate of the lower-right corner of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>The bottom edge of this <see cref="T:Leadtools.LeadRect" />.</value>
      <remarks>
        <para>The lower-right corner is the sum of the <see cref="P:Leadtools.LeadRect.Y" /> and the <see cref="P:Leadtools.LeadRect.Height" /> property values of this <see cref="T:Leadtools.LeadRect" /> structure.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>int LeadRect_Bottom(LeadRect rect);</pre>
      </objectivec>
      <java>
        <pre>public int getBottom()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Left">
      <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>The left edge of this <see cref="T:Leadtools.LeadRect" />.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>int LeadRect_Left(LeadRect rect);</pre>
      </objectivec>
      <java>
        <pre>public int getLeft()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Top">
      <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>The top edge of this <see cref="T:Leadtools.LeadRect" />.</value>
      <noremarks />
      <noexample />
      <docaddon>yes</docaddon>
      <objectivec>
        <pre>int LeadRect_Top(LeadRect rect);</pre>
      </objectivec>
      <java>
        <pre>public int getTop()</pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Width">
      <summary>
            Gets or sets the width of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>Value that indicates the width of the rectangle.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Height">
      <summary>
            Gets or sets the height of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>Value that indicates the height of the rectangle.</value>
      <noremarks />
      <noexample />
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Location">
      <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <value>The upper-left corner coordinates of this <see cref="T:Leadtools.LeadRect" />.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadPoint LeadRect_Location(LeadRect rect);</pre>
      </objectivec>
      <java>
        <pre>
public LeadPoint getLocation()
public void setLocation(LeadPoint value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.LeadRect.Size">
      <summary>
            Gets or sets the size of this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <value>The width and height of this <see cref="T:Leadtools.LeadRect" />.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>LeadSize LeadRect_Size(LeadRect rect);</pre>
      </objectivec>
      <java>
        <pre>
public LeadSize getSize()
public void setSize(LeadSize value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.LeadFillMode">
      <summary>
            Specifies how a polygonal shape with crossing lines is filled.
            </summary>
      <remarks>
        <para>The following figure describes how fill mode is used:</para>
        <para>
          <img src="FillMode.gif" title="Fill Mode" />
        </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterImage.AddPolygonToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterCollection{Leadtools.LeadPoint},Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)" />.</example>
    </member>
    <member name="F:Leadtools.LeadFillMode.Alternate">
      <summary>
            (0)The filled area includes the area between odd-numbered and even-numbered polygon sides on each scan line.
            </summary>
    </member>
    <member name="F:Leadtools.LeadFillMode.Winding">
      <summary>
            (1)All pixels that are inside the resulting exterior lines are filled.
            </summary>
    </member>
    <member name="T:Leadtools.LeadPointHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.LeadPoint" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.LeadPoint" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadPointHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadPointHelper.Create(System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadPoint" /> object with explicit parameters.
            </summary>
      <param name="x">
            Specifies the X-coordinate of the <see cref="T:Leadtools.LeadPoint" />.
            </param>
      <param name="y">
            Specifies the Y-coordinate of the <see cref="T:Leadtools.LeadPoint" />.
            </param>
      <returns>A <see cref="T:Leadtools.LeadPoint" /> object with <see cref="P:Leadtools.LeadPoint.X">LeadPoint.X</see> set to <paramref name="x" /> and
            <see cref="P:Leadtools.LeadPoint.Y">LeadPoint.Y</see> set to <paramref name="y" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointHelper.IsEmpty(Leadtools.LeadPoint)">
      <summary>
            Returns a value indicating whether a <see cref="T:Leadtools.LeadPoint" /> structure is empty.
            </summary>
      <param name="point">The point to check.</param>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadPoint" /> structure is empty; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>An empty <see cref="T:Leadtools.LeadPoint" /> has coordinates value of zero for both <see cref="P:Leadtools.LeadPoint.X" /> and <see cref="P:Leadtools.LeadPoint.Y" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointHelper.IsEqual(Leadtools.LeadPoint,Leadtools.LeadPoint)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadPoint" /> objects contains the same coordinates.
            </summary>
      <param name="point1">
            The first <see cref="T:Leadtools.LeadPoint" /> on the left side of the comparison operator.
            </param>
      <param name="point2">
            The second <see cref="T:Leadtools.LeadPoint" /> on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadPoint" /> have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointHelper.GetStringDescription(Leadtools.LeadPoint)">
      <summary>
            Returns a humand-readable representation of the specified <see cref="T:Leadtools.LeadPoint" />.
            </summary>
      <param name="point">The point object.</param>
      <returns>A human-readable representation of the specified <see cref="T:Leadtools.LeadPoint" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadPointHelper.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadPoint" /> with uninitialized members.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.LeadPoint" /> with uninitialized members.
            </value>
      <para>An empty <see cref="T:Leadtools.LeadPoint" /> has coordinates value of zero for both <see cref="P:Leadtools.LeadPoint.X" /> and <see cref="P:Leadtools.LeadPoint.Y" />.</para>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadRectHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.LeadRect" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.LeadRect" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadRectHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Create(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadRect" /> object with explicit parameters.
            </summary>
      <param name="x">
            Specifies the X coordinates of the <see cref="T:Leadtools.LeadRect" />.
            </param>
      <param name="y">
            Specifies the Y coordinates of the <see cref="T:Leadtools.LeadRect" />.
            </param>
      <param name="width">
            Specifies the width of the <see cref="T:Leadtools.LeadRect" />. Must be a value greater than or equal to 0.
            </param>
      <param name="height">
            Specifies the height of the <see cref="T:Leadtools.LeadRect" />. Must be a value greater than or equal to 0.
            </param>
      <returns>A <see cref="T:Leadtools.LeadRect" /> with <see cref="P:Leadtools.LeadRect.X" /> set to <paramref name="x" />, <see cref="P:Leadtools.LeadRect.Y" /> set to <paramref name="y" />, <see cref="P:Leadtools.LeadRect.Width" /> set to
            <paramref name="width" /> and <see cref="P:Leadtools.LeadRect.Height" /> set to <paramref name="height" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a <see cref="T:Leadtools.LeadRect" /> structure with the specified edge locations.
            </summary>
      <param name="left">
            The x-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="top">
            The y-coordinate of the upper-left corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="right">
            The x-coordinate of the lower-right corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <param name="bottom">
            The y-coordinate of the lower-right corner of the <see cref="T:Leadtools.LeadRect" />. 
            </param>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.IsEmpty(Leadtools.LeadRect)">
      <summary>
            Gets a value indicating whether this <see cref="T:Leadtools.LeadRect" /> structure is empty.
            </summary>
      <param name="rect">The rectangle to check.</param>
      <returns>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadRect" /> structure is empty; <strong>false</strong>, otherwise.</returns>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadRect" /> contains values of <see cref="P:Leadtools.LeadRect.X" />, <see cref="P:Leadtools.LeadRect.Y" />, <see cref="P:Leadtools.LeadRect.Width" /> and <see cref="P:Leadtools.LeadRect.Height" /> of zero.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.IsEqual(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadRect" /> objects contain the same location and size.
            </summary>
      <param name="rect1">
            The first <see cref="T:Leadtools.LeadRect" /> on the left side of the comparison operator.
            </param>
      <param name="rect2">
            The second <see cref="T:Leadtools.LeadRect" /> on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadRect" /> have the same location and size; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Left(Leadtools.LeadRect)">
      <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The left edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Right(Leadtools.LeadRect)">
      <summary>
            Gets the x-coordinate of the right edge of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The right edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Top(Leadtools.LeadRect)">
      <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The top edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Bottom(Leadtools.LeadRect)">
      <summary>
            Gets the y-coordinate of the bottom edge of this <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The bottom edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.TopLeft(Leadtools.LeadRect)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the top-left edge of this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the top-left edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.TopRight(Leadtools.LeadRect)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the top-right edge of this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the top-right edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.BottomRight(Leadtools.LeadRect)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-right edge of this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-right edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.BottomLeft(Leadtools.LeadRect)">
      <summary>
            Gets a <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-left edge of this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A <see cref="T:Leadtools.LeadPointD" /> that represents the bottom-left edge of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Location(Leadtools.LeadRect)">
      <summary>
            Gets the coordinates of the upper-left corner of this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The upper-left corner coordinates of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Size(Leadtools.LeadRect)">
      <summary>
            Gets or sets the size of this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>The width and height of this <see cref="T:Leadtools.LeadRect" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.ContainsPoint(Leadtools.LeadRect,Leadtools.LeadPoint)">
      <summary>
            Determines whether the specified point is contained within this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="testPoint">The point to test.</param>
      <returns>
        <strong>true</strong> if the specified point is contained within this <see cref="T:Leadtools.LeadRect" />; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.ContainsRect(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Determines if the rectangular region represented by the specified value is entirely contained within this <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="testRect">The <see cref="T:Leadtools.LeadRect" /> to be tested.</param>
      <returns>
        <strong>true</strong> if the rectangular region represented by <paramref name="testRect" /> is entirely 
            contained within the rectangular region represented by this <see cref="T:Leadtools.LeadRect" />; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Inflate(Leadtools.LeadRect,Leadtools.LeadSize)">
      <summary>
            Inflates a <see cref="T:Leadtools.LeadRect" /> by the specified amount.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="size">The amount to inflate this <see cref="T:Leadtools.LeadRect" /> horizontally and vertically.</param>
      <returns>The result rectangle.</returns>
      <remarks>
        <para>This method inflates the rectangle itself, not a copy of it. 
            The inflation along an axis is in two directions (minus direction and plus direction). For example, if a 150 by 150 rectangle is inflated by 50 in
            the x-axis, the resulting rectangle will be 250 units long (the original 150, the 50 in the minus direction, and the 50 in the plus direction)
            maintaining the rectangle's geometric center. If either width or height is negative, the rectangle is deflated in the corresponding direction.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Intersect(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Returns an <see cref="T:Leadtools.LeadRect" /> that represents the intersection of two rectangles.
            </summary>
      <param name="rect1">A rectangle to intersect.</param>
      <param name="rect2">A rectangle to intersect</param>
      <returns>A third <see cref="T:Leadtools.LeadRect" /> the size of which represents the overlapped area of the two specified rectangles. 
            If there is no intersection, an <see cref="P:Leadtools.LeadRectHelper.Empty" /> rectangle is returned.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.IntersectsWith(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Determines whether this <see cref="T:Leadtools.LeadRect" /> intersects with a test value.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="testRect">The rectangle to test.</param>
      <returns>This method returns <strong>true</strong> if there is any intersection; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Union(Leadtools.LeadRect,Leadtools.LeadRect)">
      <summary>
            Returns a <see cref="T:Leadtools.LeadRect" /> that contains the union of two rectangles.
            </summary>
      <param name="rect1">
            First rectangle.
            </param>
      <param name="rect2">
            Second rectangle.
            </param>
      <returns>A third <see cref="T:Leadtools.LeadRect" /> the size of which represents the union of the area of the two specified rectangles.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.Offset(Leadtools.LeadRect,Leadtools.LeadSize)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="rect">The rectangle object.</param>
      <param name="size">The x- and y-amounts to offset the location.</param>
      <remarks>The result rectangle.</remarks>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectHelper.GetStringDescription(Leadtools.LeadRect)">
      <summary>
            Returns a humand-readable representation of the specified <see cref="T:Leadtools.LeadSize" />.
            </summary>
      <param name="rect">The rectangle object.</param>
      <returns>A humand-readable representation of the specified <see cref="T:Leadtools.LeadSize" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadRectHelper.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadRect" /> with uninitialized members.
            </summary>
      <value>A new instance of the <see cref="T:Leadtools.LeadRect" /> with uninitialized members.</value>
      <remarks>
        <para>An uninitialized <see cref="T:Leadtools.LeadRect" /> contains values of <see cref="P:Leadtools.LeadRect.X" />, <see cref="P:Leadtools.LeadRect.Y" />, <see cref="P:Leadtools.LeadRect.Width" /> and <see cref="P:Leadtools.LeadRect.Height" /> of zero.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.LeadSizeHelper">
      <summary>
            Utility class for <see cref="T:Leadtools.LeadSize" /></summary>
      <remarks>
        <para>Contains methods to create and manipulate <see cref="T:Leadtools.LeadSize" /> objects.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.LeadSizeHelper.#ctor">
      <exclude />
    </member>
    <member name="M:Leadtools.LeadSizeHelper.Create(System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:Leadtools.LeadSize" /> object with explicit parameters.
            </summary>
      <param name="width">
            Specifies the width of the <see cref="T:Leadtools.LeadSize" />.
            </param>
      <param name="height">
            Specifies the height of the <see cref="T:Leadtools.LeadSize" />.
            </param>
      <returns>A <see cref="T:Leadtools.LeadSize" /> object with <see cref="P:Leadtools.LeadSize.Width">LeadSize.Width</see> set to <paramref name="width" /> and
            <see cref="P:Leadtools.LeadSize.Height">LeadSize.Height</see> set to <paramref name="height" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeHelper.IsEmpty(Leadtools.LeadSize)">
      <summary>
            Returns a value indicating whether a <see cref="T:Leadtools.LeadSize" /> structure is empty.
            </summary>
      <param name="size">The Size to check.</param>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.LeadSize" /> structure is empty; <strong>false</strong>, otherwise.</value>
      <remarks>
        <para>An empty <see cref="T:Leadtools.LeadSize" /> structure has coordinate values of zero for both <see cref="P:Leadtools.LeadSize.Width" /> and <see cref="P:Leadtools.LeadSize.Height" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeHelper.IsEqual(Leadtools.LeadSize,Leadtools.LeadSize)">
      <summary>
            Specifies whether two <see cref="T:Leadtools.LeadSize" /> structures contain the same coordinates.
            </summary>
      <param name="size1">
            The first <see cref="T:Leadtools.LeadSize" /> structure on the left side of the comparison operator.
            </param>
      <param name="size2">
            The second <see cref="T:Leadtools.LeadSize" /> structure on the right side of the comparison operator.
            </param>
      <returns>
        <strong>true</strong> if the two <see cref="T:Leadtools.LeadSize" /> structures have the same coordinates; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeHelper.GetStringDescription(Leadtools.LeadSize)">
      <summary>
            Returns a humand-readable representation of the specified <see cref="T:Leadtools.LeadSize" />.
            </summary>
      <param name="size">The size object.</param>
      <returns>A humand-readable representation of the specified <see cref="T:Leadtools.LeadSize" />.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.LeadSizeHelper.Empty">
      <summary>
            Represents a new instance of the <see cref="T:Leadtools.LeadSize" /> structure with uninitialized members.
            </summary>
      <value>
            A new instance of the <see cref="T:Leadtools.LeadSize" /> structure with uninitialized members.
            </value>
      <para>An empty <see cref="T:Leadtools.LeadSize" /> structure has coordinate values of zero for both <see cref="P:Leadtools.LeadSize.Width" /> and <see cref="P:Leadtools.LeadSize.Height" />.</para>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadPointConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadPoint" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadPointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadSizeConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadSize" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.LeadRectConverter">
      <summary>
            Converts a <see cref="T:Leadtools.LeadRect" /> from one data type to another.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="sourceType">The type from which you want to convert</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Returns a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type that represents the type to which you want to convert.</param>
      <returns>
        <strong>true</strong> if this object can perform the conversion; otherwise, <strong>false</strong>.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Converts the given object to the converter's native type.
            </summary>
      <param name="context">A <see cref="T:System.ComponentModel.TypeDescriptor" /> that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="M:Leadtools.LeadRectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Converts the specified object to another type.
            </summary>
      <param name="context">A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may return null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to represent the object.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>An Object representing the converted value.</returns>
      <noremarks />
      <noexample />
    </member>
    <member name="T:Leadtools.RasterRegion">
      <summary>
            Describes a region of interest in a <see cref="T:Leadtools.RasterImage" /> object.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterImage" /> object contains a region of interest value that can be used to limit the portion
            available for updating when using the image processing command. The region can be set using a geometric shape such as
            <see cref="M:Leadtools.RasterImage.AddRectangleToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)">RasterImage.AddRectangleToRegion</see> and
            <see cref="M:Leadtools.RasterImage.AddEllipseToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)">RasterImage.AddEllipseToRegion</see> or with image data
            attributes such as <see cref="M:Leadtools.RasterImage.AddColorToRegion(Leadtools.RasterColor,Leadtools.RasterRegionCombineMode)">RasterImage.AddColorToRegion</see> and
            <see cref="M:Leadtools.RasterImage.AddMaskToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterImage,Leadtools.RasterRegionCombineMode)">RasterImage.AddMaskToRegion</see>.</para>
        <para>At any point, you can get a copy of the region inside a <see cref="T:Leadtools.RasterImage" /> object using the
            <see cref="M:Leadtools.RasterImage.GetRegion(Leadtools.RasterRegionXForm)">RasterImage.GetRegion</see> method and update the region inside an image
            using the <see cref="M:Leadtools.RasterImage.SetRegion(Leadtools.RasterRegionXForm,Leadtools.RasterRegion,Leadtools.RasterRegionCombineMode)">RasterImage.SetRegion</see> method.</para>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class provides a platform independent representation of a region of interest in an image that can be used in any
            platform supported by LEADTOOLS such as GDI, GDI+, WPF and Silverlight.</para>
        <para>To convert a LEADTOOLS <see cref="T:Leadtools.RasterRegion" /> object to/from a device dependent region, you can use the following helper classes:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="T:Leadtools.Drawing.RasterRegionConverter">Leadtools.Drawing.RasterRegionConverter</see> to convert to/from a System.Drawing (GDI+) <see cref="T:System.Drawing.Region">System.Drawing.Region</see> or Windows HRGN objects.</description>
          </item>
          <item>
            <description>
              <see cref="T:Leadtools.Windows.Media.RasterRegionConverter">Leadtools.Windows.Media.RasterRegionConverter</see> to convert to/from a WPF and Silverlight <see cref="T:System.Windows.Media.Geometry">System.Windows.Media.Geometry</see> object.</description>
          </item>
        </list>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class implements the <see cref="T:System.IDisposable" /> interface, so you must call <see cref="M:System.IDisposable.Dispose" /> on any
            region objects you create after using it.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>
        <!--RasterRegion-->
      </example>
      <objectivec>
        <pre>@interface LTRasterRegion : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class RasterRegion</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.#ctor">
      <summary>
            Initializes a new empty <see cref="T:Leadtools.RasterRegion" />.
            </summary>
      <remarks>
        <para>This constructor initializes a new empty <see cref="T:Leadtools.RasterRegion" /> object. The <see cref="P:Leadtools.RasterRegion.IsEmpty" /> property will be <strong>true</strong> and <see cref="M:Leadtools.RasterRegion.GetBounds" /> will return an empty rectangle.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" /></example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public RasterRegion()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.#ctor(Leadtools.LeadRect)">
      <summary>
            Initializes a new <see cref="T:Leadtools.RasterRegion" /> from the specified <see cref="T:Leadtools.LeadRect" /> structure.
            </summary>
      <param name="rect">A <see cref="T:Leadtools.LeadRect" /> structure that defines the interior of the new <see cref="T:Leadtools.RasterRegion" />.</param>
      <remarks>
        <para>This method creates a new <see cref="T:Leadtools.RasterRegion" /> with a rectangular interior. The interior is defined by the <paramref name="rect" /> parameter.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.CreatingaRegion">Creating a Region</see>.</para>
        <para>For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" /></example>
      <java>
        <pre>public RasterRegion(LeadRect rect)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.Finalize">
      <summary>
            This member overrides <see cref="M:System.Object.Finalize" />.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterRegion" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
      <java>
        <pre>protected void finalize()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.Dispose">
      <summary>
            Releases all resources used by this <see cref="T:Leadtools.RasterRegion" />.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterRegion" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
    </member>
    <member name="M:Leadtools.RasterRegion.Dispose(System.Boolean)">
      <summary>
            Releases all the resources used by this <see cref="T:Leadtools.RasterRegion" />.
            </summary>
      <param name="disposing">
        <strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.RasterRegion" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you
            follow the standard .NET dispose pattern when using the <see cref="T:Leadtools.RasterRegion" /> class. For more information, refer to
            the <see cref="T:System.IDisposable" /> interface documentation in MSDN.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
    </member>
    <member name="M:Leadtools.RasterRegion.Clone">
      <summary>
            Creates an exact copy if this <see cref="T:Leadtools.RasterRegion" />.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterRegion" /> that this method creates.</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>public RasterRegion clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.GetBounds">
      <summary>
            Gets a <see cref="T:Leadtools.LeadRect" /> structure that represents a rectangle that bounds this <see cref="T:Leadtools.RasterRegion" /> in pixels.
            </summary>
      <returns>A <see cref="T:Leadtools.LeadRect" /> structure that represents a rectangle that bounds this <see cref="T:Leadtools.RasterRegion" /> in pixels.</returns>
      <remarks>
        <para>The bounding rectangle is always the smallest possible bounding rectangle of this <see cref="T:Leadtools.RasterRegion" />. The returned rectangle
            is empty (all values equals to zero) if the region is empty.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
      <objectivec>
        <pre>-(LeadRect)getBounds;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getBounds()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.MakeEmpty">
      <summary>
            Initializes this <see cref="T:Leadtools.RasterRegion" /> to an empty interior.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
      <objectivec>
        <pre>-(void)makeEmpty;</pre>
      </objectivec>
      <java>
        <pre>public void makeEmpty()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.Combine(Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)">
      <summary>
            Updates this <see cref="T:Leadtools.RasterRegion" /> to a combination of itself and the specified <see cref="T:Leadtools.LeadRect" /></summary>
      <param name="rect">The <see cref="T:Leadtools.LeadRect" /> structure to combine with this <see cref="T:Leadtools.RasterRegion" />.</param>
      <param name="combineMode">One of the <see cref="T:Leadtools.RasterRegionCombineMode" /> enumeration members that describes the combine method to use. This cannot be
            <see cref="T:Leadtools.RasterRegionCombineMode">RasterRegionCombineMode.AndNotImage</see> or <see cref="T:Leadtools.RasterRegionCombineMode">RasterRegionCombineMode.AndNotRegion</see>. Using
            any of these combine method will result in an exception.</param>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
      </remarks>
      <example>
        <!--RasterRegion.CombineRect-->
      </example>
      <objectivec>
        <pre>
-(BOOL)combineWithRect:(LeadRect)rect 
           combineMode:(LTRasterRegionCombineMode)combineMode 
                 error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void combine(
  LeadRect rect, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.Combine(Leadtools.RasterRegion,Leadtools.RasterRegionCombineMode)">
      <summary>
            Updates this <see cref="T:Leadtools.RasterRegion" /> to a combination of itself and the specified <see cref="T:Leadtools.RasterRegion" /></summary>
      <param name="region">The <see cref="T:Leadtools.RasterRegion" /> to combine with this <see cref="T:Leadtools.RasterRegion" />.</param>
      <param name="combineMode">One of the <see cref="T:Leadtools.RasterRegionCombineMode" /> enumeration members that describes the combine method to use. This cannot be
            <see cref="T:Leadtools.RasterRegionCombineMode">RasterRegionCombineMode.AndNotImage</see> or <see cref="T:Leadtools.RasterRegionCombineMode">RasterRegionCombineMode.AndNotRegion</see>. Using
            any of these combine method will result in an exception.</param>
      <remarks>
        <para>For more information, refer to <see cref="T:Leadtools.RasterRegionCombineMode" />.</para>
      </remarks>
      <example>
        <!--RasterRegion.CombineRegion-->
      </example>
      <objectivec>
        <pre>
-(BOOL)combineWithRegion:(LTRasterRegion*)region 
             combineMode:(LTRasterRegionCombineMode)combineMode 
                   error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void combine(
  RasterRegion region, 
  RasterRegionCombineMode combineMode
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.IsVisible(Leadtools.LeadPoint)">
      <summary>
            Tests whether the specified <see cref="T:Leadtools.LeadPoint" /> structure is contained within this <see cref="T:Leadtools.RasterRegion" />.
            </summary>
      <param name="point">The <see cref="T:Leadtools.LeadPoint" /> structure to test.</param>
      <returns>
        <strong>true</strong> when point is contained within this <see cref="T:Leadtools.RasterRegion" />; <strong>false</strong>, otherwise.</returns>
      <noremarks />
      <example>
        <para>This example will create a small elliptical region in an image, gets the <see cref="T:Leadtools.RasterRegion" /> object before resetting the image region. It will
            then switch the red and blue component of every pixel inside the region data.</para>
        <!--RasterRegion.IsVisible-->
      </example>
      <objectivec>
        <pre>-(BOOL)isVisible:(LeadPoint)point;</pre>
      </objectivec>
      <java>
        <pre>public boolean isVisible(LeadPoint point)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.Clip(Leadtools.LeadRect)">
      <summary>
            Trims this <see cref="T:Leadtools.RasterRegion" /> to fit inside a specified <see cref="T:Leadtools.LeadRect" />.
            </summary>
      <param name="rect">A <see cref="T:Leadtools.LeadRect" /> that defines the clipping boundaries.</param>
      <noremarks />
      <example>
        <para>This example will create a large elliptical region in an image and fill it with yellow. It will then clip this region by 10 pixels from
            each side and fill the new region with red.</para>
        <!--RasterRegion.Clip-->
      </example>
      <objectivec>
        <pre>-(BOOL)clip:(LeadRect)rect error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void clip(LeadRect rect)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">
      <summary>
            Transforms this <see cref="T:Leadtools.RasterRegion" /> by the specified <see cref="T:Leadtools.RasterRegionXForm" />.
            </summary>
      <param name="xform">The <see cref="T:Leadtools.RasterRegionXForm" /> by which to transform this region</param>
      <remarks>
        <para>The <see cref="P:Leadtools.RasterRegionXForm.ViewPerspective">RasterRegionXForm.ViewPerspective</see> member of <paramref name="xform" /> is ignored
            by this method. For more information, refer to <see cref="T:Leadtools.RasterRegionXForm" />.</para>
      </remarks>
      <example>
        <para>This example will create a large elliptical region in an image and fill it with yellow. It will then transform this region by making it twice
            as small and fill the new region with red.</para>
        <!--RasterRegion.Transform-->
      </example>
      <objectivec>
        <pre>
-(BOOL)transform:(LTRasterRegionXForm*)xform 
           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public void transform(
  RasterRegionXForm xform
)            </pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.#ctor(System.Byte[])">
      <summary>
            Initializes a new <see cref="T:Leadtools.RasterRegion" /> from the specified data.
            </summary>
      <param name="data">A an array of <see cref="T:System.Byte" /> that defines the interior of the new <see cref="T:Leadtools.RasterRegion" /></param>
      <remarks>
        <para>You can get the data that defines a region by creating a <see cref="T:Leadtools.RasterRegion" /> using any of the region methods and using
            the <see cref="M:Leadtools.RasterRegion.GetData" /> method to obtain the data.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.GetData" />.</example>
      <java>
        <pre>public RasterRegion(byte[] data)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.GetData">
      <summary>
            Returns an array of <see cref="T:System.Byte" /> that represents the information that describes this <see cref="T:Leadtools.RasterRegion" />.
            </summary>
      <returns>An array of <see cref="T:System.Byte" /> that represents the information that describes this <see cref="T:Leadtools.RasterRegion" />.</returns>
      <remarks>
        <para>You can use the <see cref="M:Leadtools.RasterRegion.GetData" /> and <see cref="M:Leadtools.RasterRegion.SetData(System.Byte[])" /> methods to save and load the content of a region to disk or memory.</para>
        <para>If this <see cref="T:Leadtools.RasterRegion" /> is empty, then this method will return an array of 0 items.</para>
      </remarks>
      <example>
        <para>This example will loads an image, adds a region to it, gets the <see cref="T:Leadtools.RasterRegion" /> object from the image and set it to disk. It will
            then re-load this data from disk and set it back to another image.</para>
        <!--RasterRegion.Data-->
      </example>
      <java>
        <pre>public byte[] getData()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.SetData(System.Byte[])">
      <summary>
            Overrides the data of this <see cref="T:Leadtools.RasterRegion" /> from an array of <see cref="T:System.Byte" />.
            </summary>
      <param name="data">An array of <see cref="T:System.Byte" /> that represents the information that describes a <see cref="T:Leadtools.RasterRegion" />.</param>
      <remarks>
        <para>You can use the <see cref="M:Leadtools.RasterRegion.GetData" /> and <see cref="M:Leadtools.RasterRegion.SetData(System.Byte[])" /> methods to save and load the content of a region to disk or memory.</para>
        <para>If <paramref name="data" /> is an array of 0 items or is null (Nothing in Visual Basic), then this method will make the <see cref="T:Leadtools.RasterRegion" />
            object empty. This is the equivalent of calling <see cref="M:Leadtools.RasterRegion.MakeEmpty" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.GetData" />.</example>
      <java>
        <pre>public void setData(byte[] data)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegion.FromData(System.Byte[])">
      <summary>
            Creates a new <see cref="T:Leadtools.RasterRegion" /> from the specified data.
            </summary>
      <param name="data">A an array of <see cref="T:System.Byte" /> that defines the interior of the new <see cref="T:Leadtools.RasterRegion" /></param>
      <returns>A new <see cref="T:Leadtools.RasterRegion" /> from the specified data.</returns>
      <remarks>
        <para>You can get the data that defines a region by creating a <see cref="T:Leadtools.RasterRegion" /> using any of the region methods and using
            the <see cref="M:Leadtools.RasterRegion.GetData" /> method to obtain the data.</para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterRegion.#ctor(System.IntPtr,System.Boolean)">
      <exclude />
      <winrt />
      <java>
        <pre>public RasterRegion(int leadRegion, boolean makeCopy)</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegion.IsEmpty">
      <summary>
            Tests whether this <see cref="T:Leadtools.RasterRegion" /> has an empty interior.
            </summary>
      <value>
        <strong>true</strong> if the interior of this <see cref="T:Leadtools.RasterRegion" /> is empty; <strong>false</strong>, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.RasterRegion" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isEmpty;</pre>
      </objectivec>
      <java>
        <pre>public boolean isEmpty()</pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterRegionXForm">
      <summary>
             Provides data for translating between region coordinates and external representations of those coordinates.
             </summary>
      <remarks>
        <para>All region methods accept a null reference (Nothing in Visual Basic). In that case, no transformation occurs. The scalar fields default to
             1, the offsets default to 0, and the view perspective defaults to the image view perspective.</para>
        <para>Several of the LEADTOOLS methods for creating and working with an image region use coordinates from an external representation of the
             region, such as a shape drawn in a device context. To compensate for possible differences in view perspective, scaling, and display offsets,
             these LEADTOOLS methods require that you provide translation information in an <see cref="T:Leadtools.RasterRegionXForm" /> object.</para>
        <para>In most cases, the external representation of an image region is scaled and positioned relative to the display coordinates of a
             LEADTOOLS painting method. Therefore, the following table describes the fields to set in the <see cref="T:Leadtools.RasterRegionXForm" /> object, based on
             the parameters of the display methods.</para>
        <para>
             When assigning an external representation to an image, every point (Xa, Ya) in the an external representation is transformed
             (by <see cref="T:Leadtools.RasterRegionXForm" />) to point (Xc, Yc) in the image region as follows:</para>
        <para>
          <code>
             1. Add offsets:
                  Xb = Xa + XForm.XOffset
                  Yb = Ya + XForm.YOffset
            
             2. Multiply by scalars:
                  Xc = (Xb * XForm.XScalarNumerator) / XForm.XScalarDenominator
                  Yc = (Yb * XForm.YScalarNumerator) / XForm.YScalarDenominator
            
             3. Compensate for view perspective (updating Xc and Yc in place):
                  PointToImage(XForm.ViewPerspective, Xc, Yc)
             </code>
        </para>
        <para>
             When retrieving an external representation from an image, every point (Xa, Ya) in the image region is transformed
             (by <see cref="T:Leadtools.RasterRegionXForm" />) to point (Xc, Yc) in the external region as follows:</para>
        <para>
          <code>
             1. Compensate for view perspective (updating Xa and Ya in place):
                  PointFromImage(XForm.ViewPerspective, Xa, Ya)
            
             2. Mulitply by scalars:
                  Xb = (Xa * XForm.XScalarNumerator) / XForm.XScalarDenominator
                  Yb = (Ya * XForm.YScalarNumerator) / XForm.YScalarDenominator
            
             3. Add offsets:
                  Xc = Xb + XForm.XOffset
                  Yc = Yb + XForm.YOffset
             </code>
        </para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region.</see>.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CreatingaRegion">Creating an Image Region</seealso>
      <seealso cref="T:Leadtools.Topics.WorkingWithTheExistingRegion">Working with the Existing Image Region</seealso>
      <seealso cref="T:Leadtools.Topics.MethodsThatTransformTheRegionAndtheImage">Commands and Methods That Transform The Region And the Image</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@interface LTRasterRegionXForm : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class RasterRegionXForm</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegionXForm.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Leadtools.RasterRegionXForm" /> class with default values.
            </summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public RasterRegionXForm()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegionXForm.Clone">
      <summary>
            Creates an exact copy of this <see cref="T:Leadtools.RasterRegionXForm" />.
            </summary>
      <returns>The <see cref="T:Leadtools.RasterRegionXForm" /> this method creates</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>public RasterRegionXForm clone()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterRegionXForm.FromUnmanaged(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.RasterRegionXForm.ToUnmanaged(System.IntPtr)">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.RasterRegionXForm.Default">
      <summary>
            Returns the default <see cref="T:Leadtools.RasterRegionXForm" /> values.
            </summary>
      <value>An <see cref="T:Leadtools.RasterRegionXForm" /> initialized to the default values.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <java>
        <pre>static public RasterRegionXForm Default()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegionXForm.ViewPerspective">
      <summary>
            The view perspective of the external representation.
            </summary>
      <value>The view perspective of the external representation.</value>
      <remarks>
        <para>With LEADTOOLS painting methods, the view perspective is always <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterViewPerspective viewPerspective;</pre>
      </objectivec>
      <java>
        <pre>
public int getViewPerspective()
public RasterViewPerspective getViewPerspectiveAsInt()
public void setRasterViewPerspective(RasterViewPerspective value)
public void setRasterViewPerspective(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegionXForm.XScalarNumerator">
      <summary>
            The numerator for the X scaling factor.
            </summary>
      <value>The numerator for the X scaling factor.</value>
      <remarks>
        <para>When translating information from the image, you can use the width of the painting method destination rectangle for this value.</para>
        <para>Methods that translate in this direction are <see cref="M:Leadtools.Drawing.RasterImagePainter.PaintRegion(Leadtools.RasterImage,System.IntPtr,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.Drawing.RasterPaintProperties)" /> and <see cref="M:Leadtools.RasterImage.GetRegionBounds(Leadtools.RasterRegionXForm)" />.</para>
        <para>When translating information to the image, you can use the width of the painting method source rectangle for this value.
            (By default, it is the image width.)</para>
        <para>
            Methods that translate in this direction include:
            <list type="bullet"><item><description><see cref="M:Leadtools.RasterImage.AddRectangleToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)" /></description></item><item><description><see cref="M:Leadtools.RasterImage.AddRectangleToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.RasterRegionCombineMode)" /></description></item><item><description><see cref="M:Leadtools.RasterImage.AddRoundRectangleToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadRect,Leadtools.LeadSize,Leadtools.RasterRegionCombineMode)" /></description></item><item><description><see cref="M:Leadtools.RasterImage.AddPolygonToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadPoint[],Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)" /></description></item><item><description><see cref="M:Leadtools.RasterImage.AddCurveToRegion(Leadtools.RasterRegionXForm,Leadtools.RasterCurve,Leadtools.RasterRegionCombineMode)" /></description></item><item><description><see cref="M:Leadtools.RasterImage.AddBeziersToRegion(Leadtools.RasterRegionXForm,Leadtools.LeadPoint[],Leadtools.LeadFillMode,Leadtools.RasterRegionCombineMode)" /></description></item></list></para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int xScalarNumerator;</pre>
      </objectivec>
      <java>
        <pre>
public int getXScalarNumerator()
public void setXScalarNumerator(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegionXForm.XScalarDenominator">
      <summary>
            The denominator for the X scaling factor.
            </summary>
      <value>The denominator for the X scaling factor.</value>
      <remarks>
        <para>When translating information from the image, you can use the width of the painting method source rectangle for this value.
            (By default, it is the image width.)</para>
        <para>When translating information to the image, you can use the width of the painting method destination rectangle for this value.</para>
        <para>Refer to the <see cref="P:Leadtools.RasterRegionXForm.XScalarNumerator" /> property to see which methods translate which direction.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int xScalarDenominator;</pre>
      </objectivec>
      <java>
        <pre>
public int getXScalarDenominator()
public void setXScalarDenominator(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegionXForm.YScalarNumerator">
      <summary>
            The denominator for the Y scaling factor.<br /></summary>
      <value>The denominator for the Y scaling factor.</value>
      <remarks>
        <para>When translating information from the image, you can use the height of the painting method destination rectangle for this value.</para>
        <para>When translating information to the image, you can use the height of the painting method source rectangle for this value. (By default,
            it is the image height.)</para>
        <para>Refer to the <see cref="P:Leadtools.RasterRegionXForm.XScalarNumerator" /> property to see which methods translate which direction.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int yScalarNumerator;</pre>
      </objectivec>
      <java>
        <pre>
public int getYScalarNumerator()
public void setYScalarNumerator(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegionXForm.YScalarDenominator">
      <summary>
            The denominator for the Y scaling factor.<br /></summary>
      <value>The denominator for the Y scaling factor.</value>
      <remarks>
        <para>When translating information from the image, you can use the height of the painting method source rectangle for this value.
            (By default, it is the image height.)</para>
        <para>When translating information to the image, you can use the height of the painting method destination rectangle for this value.</para>
        <para>Refer to the <see cref="P:Leadtools.RasterRegionXForm.XScalarNumerator" /> property to see which methods translate which direction.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int yScalarDenominator;</pre>
      </objectivec>
      <java>
        <pre>
public int getYScalarDenominator()
public void setYScalarDenominator(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegionXForm.XOffset">
      <summary>
            The X offset of the external representation.<br /></summary>
      <value>The X offset of the external representation.</value>
      <remarks>
        <para>When translating information from the image, you can use the left value of the painting method destination rectangle.</para>
        <para>When translating information to the image, you can negate the left value of the painting method destination rectangle (-left).</para>
        <para>Refer to the <see cref="P:Leadtools.RasterRegionXForm.XScalarNumerator" /> property to see which methods translate which direction.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int xOffset;</pre>
      </objectivec>
      <java>
        <pre>
public int getXOffset()
public void setXOffset(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterRegionXForm.YOffset">
      <summary>
            The Y offset of the external representation.<br /></summary>
      <value>The Y offset of the external representation.</value>
      <remarks>
        <para>When translating information from the image, you can use the top value of the painting method destination rectangle.</para>
        <para>When translating information to the image, you can negate the top value of the painting method destination rectangle (-top).</para>
        <para>Refer to the <see cref="P:Leadtools.RasterRegionXForm.XScalarNumerator" /> property to see which methods translate which direction.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.TranslatingCoordinatesForARegion">Translating Coordinates for a Region</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.RasterRegion.Transform(Leadtools.RasterRegionXForm)">RasterRegion.Transform</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int yOffset;</pre>
      </objectivec>
      <java>
        <pre>
public int getYOffset()
public void setYOffset(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.RasterKernelType">
      <summary>
            Indicates the Leadtools Kernel type.
            </summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef enum LTRasterKernelType LTRasterKernelType;</pre>
      </objectivec>
    </member>
    <member name="F:Leadtools.RasterKernelType.Release">
      <summary>
            (0)Kernel is a Release build.
            </summary>
    </member>
    <member name="F:Leadtools.RasterKernelType.Evaluation">
      <summary>
            (1)Kernel is an Evaluation build, and will expire at some point in the future.  Kernel will also display an evaluation message box during
            execution.
            </summary>
    </member>
    <member name="T:Leadtools.RasterSupportType">
      <summary>
            Indicates the optional LEADTOOLS feature to check.
            </summary>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">Unlocking Special LEAD Features</see> and <see cref="T:Leadtools.Topics.ASpecialNoteaboutLoading12and16BitGrayscaleImages">A Special Note about Loading 12 and 16 Bit Grayscale Images</see>.
            </remarks>
      <noexample />
      <objectivec>
        <pre>typedef enum LTRasterSupportType LTRasterSupportType;</pre>
      </objectivec>
      <java>
        <pre>public enum RasterSupportType</pre>
      </java>
    </member>
    <member name="F:Leadtools.RasterSupportType.Document">
      <summary>
            (0)Support for LEADTOOLS Document features (ABC, ABIC, JPEG 2000, JBIG2, NITF, CMW, Document Cleanup, Annotations, Windows Phone, Silverlight, JPIP and more). A LEADTOOLS Document license is required.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Barcodes1D">
      <summary>
            (1)Support for reading and writing Linear bar codes. This is available in the LEADTOOLS Barcode 1D Module.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Barcodes2D">
      <summary>
            (2)Support for reading and writing 2D bar codes. This is available in the LEADTOOLS Barcode 2D Module.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.RasterPdfRead">
      <summary>
            (3)Support for loading PDF, PS and EPS file formats as raster images. Available in the LEADTOOLS PDF Plug in. If this support is locked, the PDF, PS and EPS files will not be loaded.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.RasterPdfSave">
      <summary>
            (4)Support for saving raster images as a PDF file. Available in selected LEADTOOLS products.  Includes support for MRC PDF compression and JBIG2 support.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.PdfAdvanced">
      <summary>
            (5)Support for advanced PDF  features.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Jbig2">
      <summary>
            (6)Support for the JBIG2 file format.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrAdvantage">
      <summary>
            (7)Support for the OCR features provided by the OCR Advantage engine. OCR add-on to Document and Medical Imaging toolkits.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrPlus">
      <summary>
            (8) (Deprecated) Support for the OCR features provided by the OCR Plus engine. OCR add-on to Document and Medical Imaging toolkits.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrProfessional">
      <summary>
            (9)Support for the OCR features provided by the OCR Professional engine. OCR add-on to Document and Medical Imaging toolkits.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrProfessionalAsian">
      <summary>
            (10)Support for the OCR Professional engine to recognize Asian text. Available in selected LEADTOOLS products.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrArabic">
      <summary>
            (11)Support for Arabic OCR.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrAdvantagePdfOutput">
      <summary>
            (12)Support for saving OCR results from the OCR Advantage engine as a PDF file. This license is in addition to the cost of the OCR Plugin or Document Imaging.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrPlusPdfOutput">
      <summary>
            (13) (Deprecated) Support for saving OCR results from the OCR Plus engine as a PDF file. This license is in addition to the cost of the OCR Plugin or Document Imaging.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrProfessionalPdfOutput">
      <summary>
            (14)Support for saving OCR results from the OCR Professional and Professional Asian engines as a PDF file. This license is in addition to the cost of the OCR Plugin or Document Imaging.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.OcrArabicPdfOutput">
      <summary>
            (15)Support for saving OCR results from the OCR Arabic engine as a PDF file. This license is in addition to the cost of the OCR Plugin or Document Imaging.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Omr">
      <summary>
            (16)Support for the LEADTOOLS OMR Module. This supports the recognition of check boxes. Available in selected LEADTOOLS products.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.IcrPlus">
      <summary>
            (17) (Deprecated) Support for the ICR Module within the OCR Plus engine. This supports the recognition of handwritten text. Available in selected LEADTOOLS products
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.IcrProfessional">
      <summary>
            (18)Support for the ICR Module within the OCR Professional engine. This supports the recognition of handwritten text. Available in selected LEADTOOLS products
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.DocumentWriters">
      <summary>
            (19)Support for LEADTOOLS Document Writer functionality.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.DocumentWritersPdf">
      <summary>
            (20)Support for PDF output when using the LEADTOOLS Document Writer functionality.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.PrintDriver">
      <summary>
            (21)Support for LEADTOOLS Virtual Printer Driver functionality.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.PrintDriverServer">
      <summary>
            (22)Support for LEADTOOLS Virtual Printer Driver functionality on Windows Server.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.PrintDriverNetwork">
      <summary>
            (23)Support for LEADTOOLS Virtual Network Printer Driver functionality.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Forms">
      <summary>
            (24)Support for Forms Recognition and Processing functionality. Available in selected LEADTOOLS products.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.MediaWriter">
      <summary>
            (25)Support for Data DVD Writing.  Available in selected LEADTOOLS products.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Medical">
      <summary>
            (26)Support for the DICOM file format, document, and all medical features excluding DICOM Communication. Also includes support for 12 bit grayscale, 16-bit grayscale, 48-bit color and 64-bit images.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Medical3d">
      <summary>
            (27)Support for Medical 3D features.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.DicomCommunication">
      <summary>
            (28)Support for everything unlocked by Medical, plus support for DICOM Network Communication.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Ccow">
      <summary>
            (29)Support for CCOW features.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Vector">
      <summary>
            (30)Support for the Vector Features and Vector file formats. available in selected LEADTOOLS products.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Cloud">
      <summary>
            (31)Support for LEADTOOLS Cloud SDK.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.AppStore">
      <summary>
            (32)Support for using LEADTOOLS in an App Store application (Windows Store, Apple Store, Android Store).  A LEADTOOLS App Store license is required.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Basic">
      <summary>
            (33)Support for LEADTOOLS Basic features.
            </summary>
    </member>
    <member name="F:Leadtools.RasterSupportType.Hl7">
      <summary>
            (34)Support for the Medical HL7 features.
            </summary>
    </member>
    <member name="T:Leadtools.RasterSupport">
      <summary>
            The <see cref="T:Leadtools.RasterSupport" /> class provides methods for setting a LEADTOOLS runtime license and unlocking support for optional LEADTOOLS features,
            such as LEADTOOLS Document/Medical capabilities. For activating server licenses, see <see cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</see>.
            </summary>
      <remarks>
            For more information, refer to <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">Unlocking Special LEAD Features</see>.
            </remarks>
      <example>
            This example will set a runtime license and check for Document support.  You must obtain the proper license and developer key from LEAD.
            <!--RasterSupport--></example>
      <objectivec>
        <pre>interface LTRasterSupport : NSObject</pre>
      </objectivec>
      <java>
        <pre>public final class RasterSupport </pre>
      </java>
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
    </member>
    <member name="M:Leadtools.RasterSupport.IsLocked(Leadtools.RasterSupportType)">
      <summary>
            Indicates whether support is locked for an optional feature, such as LEADTOOLS Document/Medical capabilities.
            </summary>
      <param name="support">Support type</param>
      <returns>true or false</returns>
      <remarks>
        <para>To set a runtime license and unlock a feature, use the <see cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)" /> method.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">Unlocking Special LEAD Features</see> 
            and <see cref="T:Leadtools.Topics.ASpecialNoteaboutLoading12and16BitGrayscaleImages">A Special Note about Loading 12 and 16 Bit Grayscale Images</see>.</para>
        <para>For information about LEADTOOLS Document/Medical capabilities, contact LEAD.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterSupport" />.
            </example>
      <objectivec>
        <pre>+(BOOL)isLocked:(LTRasterSupportType)support;</pre>
      </objectivec>
      <java>
        <pre>public static boolean IsLocked(RasterSupportType support)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)">
      <summary>
            Sets the runtime license for LEADTOOLS and unlocks support for optional features such as <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">LEADTOOLS Imaging Pro, Document and Medical</see> capabilities, or PDF support.
            </summary>
      <param name="licenseFile">Character string containing the name of the LEADTOOLS runtime license file to load.</param>
      <param name="developerKey">Character string containing the developer key.</param>
      <remarks>
        <para>
            You must use this function to set the runtime license for LEADTOOLS and to unlock support for any optional features that you have licensed. 
            If you do not set a runtime license, your application will display a "nag" message dialog at runtime, indicating that you have developed the 
            application without a valid runtime license.
            </para>
        <para>
            In order to obtain a runtime license and developer key, you must contact LEAD. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/licensing/runtimelicences.html">About LEADTOOLS Runtime Licenses</a>.
            </para>
        <para>
            For information about LEADTOOLS Document/Medical capabilities, contact LEAD.
            </para>
        <para>
            To determine if support for optional features has been unlocked, use <see cref="M:Leadtools.RasterSupport.IsLocked(Leadtools.RasterSupportType)" /></para>
        <para>
            To set the runtime license from a memory buffer instead of disk file, use <see cref="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">SetLicense(byte[] licenseBuffer, string developerKey)</see>.
            </para>
        <para>
          <b>NOTE:</b> As an alternative to calling RasterSupport.SetLicense, you can specify your runtime
            license in the Leadtools.dll.config file.  For more information, see <see cref="T:Leadtools.Topics.LEADTOOLSConfigLicense">LEADTOOLS Config License</see>.
            </para>
        <para>
          <b>NOTE:</b> Do not use this overload from the main UI thread in WinRT applications.  This method uses blocking reads internally, which if called from an 
            UI thread can block too long and cause and exception to be thrown.  Instead, use <see cref="M:Leadtools.RasterSupport.SetLicenseAsync(Leadtools.Junk.IRandomAccessStream,System.String)" />, and disable input for the UI until
            the asynchronous operation has completed.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterSupport" />.
            </example>
      <objectivec>
        <pre>
+(BOOL)setLicenseFile:(NSString*)licenseFile 
         developerKey:(NSString*)developerKey 
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>
public static void setLicense(
  String licenseFile, 
  String developerKey
)            </pre>
      </java>
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">SetLicense(byte[] licenseBuffer, string developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicenseAsync(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicenseAsync</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicense(IRandomAccessStream licenseStream, String developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.IO.Stream,System.String)">SetLicense(Stream licenseFile, string developerKey)</seealso>
    </member>
    <member name="M:Leadtools.RasterSupport.SetLicense(System.IO.Stream,System.String)">
      <summary>
            Sets the runtime license for LEADTOOLS and unlocks support for optional features such as <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">LEADTOOLS Imaging Pro, Document and Medical</see> capabilities, or PDF support.
            </summary>
      <param name="licenseStream">
        <see cref="T:System.IO.Stream" /> containing the LEADTOOLS runtime license to load.</param>
      <param name="developerKey">Character string containing the developer key.</param>
      <remarks>
        <para>
            You must use this function to set the runtime license for LEADTOOLS and to unlock support for any optional features that you have licensed. 
            If you do not set a runtime license, your application will display a "nag" message dialog at runtime, indicating that you have developed the 
            application without a valid runtime license.
            </para>
        <para>
            In order to obtain a runtime license and developer key, you must contact LEAD. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/licensing/runtimelicences.html">About LEADTOOLS Runtime Licenses</a>.
            </para>
        <para>
            For information about LEADTOOLS Document/Medical capabilities, contact LEAD.
            </para>
        <para>
            To determine if support for optional features has been unlocked, use <see cref="M:Leadtools.RasterSupport.IsLocked(Leadtools.RasterSupportType)" /></para>
        <para>
            To set the runtime license from a memory buffer instead of stream, use <see cref="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">SetLicense(byte[] licenseBuffer, string developerKey)</see>.
            </para>
        <para>
          <b>NOTE:</b> As an alternative to calling RasterSupport.SetLicense, you can specify your runtime
            license in the Leadtools.dll.config file.  For more information, see <see cref="T:Leadtools.Topics.LEADTOOLSConfigLicense">LEADTOOLS Config License</see>.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterSupport" />.
            </example>
      <java>
        <pre>
public static void setLicense(
  InputStream licenseStream, 
  String developerKey
)            </pre>
      </java>
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">SetLicense(byte[] licenseBuffer, string developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicenseAsync(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicenseAsync</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicense(IRandomAccessStream licenseStream, String developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)">SetLicense(string licenseFile, string developerKey)</seealso>
    </member>
    <member name="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">
      <summary>
            Sets the runtime license for LEADTOOLS and unlocks support for optional features such as <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">LEADTOOLS Imaging Pro, Document and Medical</see> capabilities, or PDF support.
            </summary>
      <param name="licenseBuffer">Byte array containing the LEADTOOLS runtime license to load.</param>
      <param name="developerKey">Character string containing the developer key.</param>
      <remarks>
        <para>
            You must use this function to set the runtime license for LEADTOOLS and to unlock support for any optional features that you have licensed. 
            If you do not set a runtime license, your application will display a "nag" message dialog at runtime, indicating that you have developed the 
            application without a valid runtime license.
            </para>
        <para>
            In order to obtain a runtime license and developer key, you must contact LEAD. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/licensing/runtimelicences.html">About LEADTOOLS Runtime Licenses</a>.
            </para>
        <para>
            For information about LEADTOOLS Document/Medical capabilities, contact LEAD.
            </para>
        <para>
            To determine if support for optional features has been unlocked, use <see cref="M:Leadtools.RasterSupport.IsLocked(Leadtools.RasterSupportType)" /></para>
        <para>
            To set the runtime license from a disk file instead of memory buffer, use <see cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)">SetLicense(string licenseFile, string developerKey)</see>.
            </para>
        <para>
          <b>NOTE:</b> As an alternative to calling RasterSupport.SetLicense, you can specify your runtime
            license in the Leadtools.dll.config file.  For more information, see <see cref="T:Leadtools.Topics.LEADTOOLSConfigLicense">LEADTOOLS Config License</see>.
            </para>
      </remarks>
      <example>
        <!--RasterSupportByteArray-->
      </example>
      <objectivec>
        <pre>
+(BOOL)setLicenseBuffer:(const unsigned char*)licenseBuffer 
                 length:(size_t)length 
           developerKey:(NSString*)developerKey 
                  error:(NSError**)outError;            </pre>
      </objectivec>
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicenseAsync(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicenseAsync</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicense(IRandomAccessStream licenseStream, String developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.IO.Stream,System.String)">SetLicense(Stream licenseFile, string developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)">SetLicense(string licenseFile, string developerKey)</seealso>
    </member>
    <member name="M:Leadtools.RasterSupport.ResetLicense">
      <summary>
            Clears any LEADTOOLS runtime licenses that were previously set by calling <see cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)" />.
            </summary>
      <remarks>
            To set a LEADTOOLS runtime license, call <see cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)" />.
            </remarks>
      <noexample />
      <objectivec>
        <pre>+(BOOL)resetLicense:error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public static void resetLicense()</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterSupport.Initialize">
      <summary>
            Initializes the LEADTOOLS WinRT class library for use.
            </summary>
      <remarks>
        <para>
            If you set a valid runtime license for your application using <see cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)" />, then you do not need to call this static method.
            </para>
        <para>
            If you do not set a valid runtime license for your application using <see cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)" />, then you <strong>must</strong> call this
            static method prior to using any other LEADTOOLS functionality.  This method <strong>must</strong> be called from the
            main / UI thread of your application.  Failure to call this method as described above will cause other LEADTOOLS methods
            to throw a Kernel Expired exception or behave in an undefined manner.
            </para>
      </remarks>
      <noexample />
      <winrt />
      <java>
        <pre>public static void initialize(Context context)</pre>
      </java>
    </member>
    <member name="M:Leadtools.RasterSupport.SetLicenseAsync(Leadtools.Junk.IRandomAccessStream,System.String)">
      <summary>
            Sets the runtime license for LEADTOOLS and unlocks support for optional features such as <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">LEADTOOLS Imaging Pro, Document and Medical</see> capabilities, or PDF support.
            </summary>
      <param name="licenseStream">
        <see cref="T:Leadtools.Junk.IRandomAccessStream" />Containing the LEADTOOLS runtime license to load.</param>
      <param name="developerKey">Character string containing the developer key.</param>
      <returns>The asynchronous save operation object.</returns>
      <remarks>
        <para>
            You must use this function to set the runtime license for LEADTOOLS and to unlock support for any optional features that you have licensed. 
            If you do not set a runtime license, your application will display a "nag" message dialog at runtime, indicating that you have developed the 
            application without a valid runtime license.
            </para>
        <para>
            In order to obtain a runtime license and developer key, you must contact LEAD. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/licensing/runtimelicences.html">About LEADTOOLS Runtime Licenses</a>.
            </para>
        <para>
            For information about LEADTOOLS Document/Medical capabilities, contact LEAD.
            </para>
        <para>
            To determine if support for optional features has been unlocked, use <see cref="M:Leadtools.RasterSupport.IsLocked(Leadtools.RasterSupportType)" /></para>
      </remarks>
      <winrt />
      <example>
            This example will set a runtime license and check for Document support.  You must obtain the proper license and developer key from LEAD.
            <!--RasterSupport.SetLicenseAsync--></example>
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">SetLicense(byte[] licenseBuffer, string developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicense(IRandomAccessStream licenseStream, String developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.IO.Stream,System.String)">SetLicense(Stream licenseFile, string developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)">SetLicense(string licenseFile, string developerKey)</seealso>
    </member>
    <member name="M:Leadtools.RasterSupport.SetLicense(Leadtools.Junk.IRandomAccessStream,System.String)">
      <summary>
            Sets the runtime license for LEADTOOLS and unlocks support for optional features such as <see cref="T:Leadtools.Topics.UnlockingSpecialLEADFeatures">LEADTOOLS Imaging Pro, Document and Medical</see> capabilities, or PDF support.
            </summary>
      <param name="licenseStream">
        <see cref="T:Leadtools.Junk.IRandomAccessStream" /> containing the LEADTOOLS runtime license to load.</param>
      <param name="developerKey">Character string containing the developer key.</param>
      <remarks>
        <para>
            You must use this function to set the runtime license for LEADTOOLS and to unlock support for any optional features that you have licensed. 
            If you do not set a runtime license, your application will display a "nag" message dialog at runtime, indicating that you have developed the 
            application without a valid runtime license.
            </para>
        <para>
            In order to obtain a runtime license and developer key, you must contact LEAD. For more information, refer to <a href="https://www.leadtools.com/help/leadtools/v19/licensing/runtimelicences.html">About LEADTOOLS Runtime Licenses</a>.
            </para>
        <para>
            For information about LEADTOOLS Document/Medical capabilities, contact LEAD.
            </para>
        <para>
            To determine if support for optional features has been unlocked, use <see cref="M:Leadtools.RasterSupport.IsLocked(Leadtools.RasterSupportType)" /></para>
        <para>
            To set the runtime license from a memory buffer instead of stream, use <see cref="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">SetLicense(byte[] licenseBuffer, string developerKey)</see>.
            </para>
        <para>
          <b>NOTE:</b> You should not use this overload from the main UI thread in WinRT applications.  This method uses blocking reads internally, which if called from
            UI thread can block too long and cause and exception to be thrown.  Instead, you should use <see cref="M:Leadtools.RasterSupport.SetLicenseAsync(Leadtools.Junk.IRandomAccessStream,System.String)" />, and disable input for your UI until
            the asynchronous operation has completed.
            </para>
      </remarks>
      <example>
            For an example, refer to <see cref="T:Leadtools.RasterSupport" />.
            </example>
      <winrt />
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
      <seealso cref="T:Leadtools.Topics.LEADTOOLSLicenseServer">Activating Server Licenses</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.Byte[],System.String)">SetLicense(byte[] licenseBuffer, string developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicenseAsync(Leadtools.Junk.IRandomAccessStream,System.String)">SetLicenseAsync</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.IO.Stream,System.String)">SetLicense(Stream licenseFile, string developerKey)</seealso>
      <seealso cref="M:Leadtools.RasterSupport.SetLicense(System.String,System.String)">SetLicense(string licenseFile, string developerKey)</seealso>
    </member>
    <member name="M:Leadtools.RasterSupport.EnableLicenseLogging(System.Boolean,System.String)">
      <summary>
            For internal use by LEADTOOLS.
            </summary>
      <param name="enable">Enable or disable logging.</param>
      <param name="logFile">Destination log file path.</param>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.RasterSupport.KernelType">
      <summary>
            Gets the type of the LEADTOOLS kernel.
            </summary>
      <value>Aa <see cref="T:Leadtools.RasterKernelType" /> enumeration member indicating the LEADTOOLS kernel type.</value>
      <remarks>
            There are 3 types of LEADTOOLS kernels, as described in the following table:
            <list type="table"><listheader><term>Kernel</term><description>Description</description></listheader><item><term>Release</term><description>
                 This is the Release kernel.
                 </description></item><item><term>Nag</term><description>
                 This is a special build of the kernel, which has specialty features (such as Document Imaging and Medical Imaging)
                 unlocked. This kernel is provided to Document and Medical imaging customers, and displays a "nag" message during execution.
                 To remove the nag, you must sign a royalty agreement.  For more information, contact
                 <a href="mailto::sales@leadtools.com">sales@leadtools.com</a>.
                 </description></item><item><term>Evaluation</term><description>
                 This is the Evaluation kernel, which has all features unlocked, but displays an "eval" message during execution.
                 This kernel will also expire.
                 </description></item></list></remarks>
      <example>
            This example will check the LEADTOOLS kernel type and whether it has expired
            <!--RasterSupport.KernelExpired--></example>
      <objectivec>
        <pre>+(LTRasterKernelType)kernelType;</pre>
      </objectivec>
      <java>
        <pre>public static RasterKernelType getKernelType()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterSupport.KernelExpired">
      <summary>
            Checks whether the LEADTOOLS kernel has expired.
            </summary>
      <value>true if the LEADTOOLS kernel has expired; false, otherwise.</value>
      <noremarks />
      <example>
            For an example, refer to <see cref="P:Leadtools.RasterSupport.KernelType" />.
            </example>
      <objectivec>
        <pre>+(BOOL)kernelExpired;</pre>
      </objectivec>
      <java>
        <pre>public static boolean getKernelExpired()</pre>
      </java>
    </member>
    <member name="P:Leadtools.RasterSupport.ConfigLicenseStatus">
      <summary>
            Gets the status of the <see cref="T:Leadtools.Topics.LEADTOOLSConfigLicense">LEADTOOLS Config License</see>.
            </summary>
      <value> A <see cref="T:Leadtools.RasterExceptionCode" /> value that indicates whether a valid license is found and set. If the license is found and set it returns <stong>Success</stong>. Otherwise, it will return an error, typically <strong>InvalidParameter</strong>.</value>
      <remarks>
            Check this property to determine the status of the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">LEADTOOLS Runtime License</see> 
            that was set in the <see cref="T:Leadtools.Topics.LEADTOOLSConfigLicense">LEADTOOLS Config License</see>.
            </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.RasterSupport.KernelExpireDate">
      <exclude />
    </member>
    <member name="P:Leadtools.RasterSupport.KernelHasExpireDate">
      <exclude />
    </member>
  </members>
</doc>