<?xml version="1.0"?>
<doc processed="true">
  <assembly>
    <name>Leadtools.Documents.Converters</name>
  </assembly>
  <members>
    <member name="T:Leadtools.Documents.Converters.DocumentConverter">
      <summary>
            Supports conversion from any type of document to another using SVG, OCR and Raster technologies.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> allows conversion from any type of document to another with minimal amount of code.</para>
        <para>The input and output document types can be any type of file formats supported by LEADTOOLS. but not limited to:</para>
        <list type="bullet">
          <item>
            <description>Adobe Acrobat PDF and PDF/A</description>
          </item>
          <item>
            <description>Microsoft Office DOC/DOCX, XLS/XLSX and PPT/PPTX</description>
          </item>
          <item>
            <description>CAD formats such as DXF, DWG and DWF</description>
          </item>
          <item>
            <description>TIFF, JPEG, PNG, EXIF, BMP and hundred more raster image formats</description>
          </item>
          <item>
            <description>Plain Text and RTF</description>
          </item>
          <item>
            <description>HTML</description>
          </item>
          <item>
            <description>ePub</description>
          </item>
        </list>
        <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> class will analyze the input and output documents types and then automatically uses a combination of the
            LEADTOOLS Raster, SVG and OCR engines to convert the data using the best possible combination of accuracy and speed. Each conversion operation is
            called a Document Converter Job in the framework.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Private Sub New()
      End Sub
      Public Shared Sub DocumentConverterExample()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.pdf")
            Dim format As DocumentFormat = DocumentFormat.Pdf
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"
            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterExample()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.pdf");
            var format = DocumentFormat.Pdf;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";
            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverter-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverter.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.
            </summary>
      <remarks>
        <para>This constructor will initialize the members of this class as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Value</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Jobs" />
            </term>
            <description>
              <para>A new instance of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobs" /></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Options" />
            </term>
            <description>
              <para>A new instance of <see cref="T:Leadtools.Documents.Converters.DocumentConverterOptions" /></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Preprocessor" />
            </term>
            <description>
              <para>A new instance of <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" /></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Diagnostics" />
            </term>
            <description>
              <para>A new instance of <see cref="T:Leadtools.Documents.Converters.DocumentConverterDiagnostics" /></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.OcrEngineInstance" />
            </term>
            <description>
              <para>
                <strong>null</strong> and must be set to a valid value if OCR conversion is used</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.DocumentWriterInstance" />
            </term>
            <description>
              <para>
                <strong>null</strong> and must be set to a valid value if document conversion is used</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.AnnRenderingEngineInstance" />
            </term>
            <description>
              <para>
                <strong>null</strong> and must be set to a valid value if annotations overlay support is used in the conversion</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverter.LoadDocumentOptions" />
            </term>
            <description>
              <para>Default <see cref="T:Leadtools.Documents.LoadDocumentOptions" /> value</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverter.Dispose">
      <summary>
            Releases all resources used by this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.
            </summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you follow the
            standard .NET dispose pattern when using the <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> class. For more information, refer to the <see cref="T:System.IDisposable" />
            interface documentation in MSDN.</para>
      </remarks>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverter.Finalize">
      <summary>
            This method overrides <see cref="M:System.Object.Finalize" /></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you follow the
            standard .NET dispose pattern when using the <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> class. For more information, refer to the <see cref="T:System.IDisposable" />
            interface documentation in MSDN.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverter.Dispose(System.Boolean)">
      <summary>
            Releases all resources used by this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.
            </summary>
      <param name="disposing">
        <strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> class implements the <see cref="T:System.IDisposable" /> interface, it is recommended that you follow the
            standard .NET dispose pattern when using the <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> class. For more information, refer to the <see cref="T:System.IDisposable" />
            interface documentation in MSDN.</para>
      </remarks>
      <noexample />
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverter.SetOcrEngineInstance(Leadtools.Forms.Ocr.IOcrEngine,System.Boolean)">
      <summary>
            Sets the engine instance to use when converting documents using OCR.
            </summary>
      <param name="instance">The OCR engine instance to use when converting documents. If this is not <strong>null</strong>, then the engine must be initialized and started.</param>
      <param name="autoDispose">
        <strong>true</strong> to transfer ownership of <paramref name="instance" /> to this document converter
            and automatically dispose it when the <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> is disposed, otherwise; <strong>false</strong> to not transfer ownership
            and not dispose <paramref name="instance" /> when this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> is disposed.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.Forms.Ocr.IOcrEngine" /> instance passed to this method will be used when the <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> uses OCR for the
            conversion. This <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> does not create its own <see cref="T:Leadtools.Forms.Ocr.IOcrEngine" /> and will throw an error if the user instruct
            it to use OCR without a previously set instance.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverter.OcrEngineInstance" /> will return the same value passed for <paramref name="instance" />.</para>
        <para>The previously set <see cref="T:Leadtools.Forms.Ocr.IOcrEngine" /> is removed and optionally disposed if it was set with <paramref name="autoDispose" /> value of
            <strong>true</strong>. If <paramref name="instance" /> is <strong>null</strong>, the previously set instance is removed and this
            <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> will not have an <see cref="T:Leadtools.Forms.Ocr.IOcrEngine" /> instance.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverter.SetDocumentWriterInstance(Leadtools.Forms.DocumentWriters.DocumentWriter)">
      <summary>
            Sets the document writer instance to use when converting documents.
            </summary>
      <param name="instance">The document writer instance to use when converting documents.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.Forms.DocumentWriters.DocumentWriter" /> instance passed to this method will be used when the <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> is in
            document conversion mode to create the output file. This <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> does not create its own <see cref="T:Leadtools.Forms.DocumentWriters.DocumentWriter" />
            and will throw an error if the user instruct it to run with document output without a previously set instance.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverter.DocumentWriterInstance" /> will return the same value passed for <paramref name="instance" />.</para>
        <para>The previously set <see cref="T:Leadtools.Forms.Ocr.IOcrEngine" /> is removed when a new instance is set. You can set a value of <strong>null</strong>.</para>
        <para>The document writer will use the options set in this <see cref="T:Leadtools.Forms.DocumentWriters.DocumentWriter" /> when saving documents. Refer to <see cref="T:Leadtools.Forms.DocumentWriters.DocumentOptions" />
            for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverter.SetAnnRenderingEngineInstance(Leadtools.Annotations.Core.AnnRenderingEngine)">
      <summary>
            Sets the rendering engine to use when overlaying annotations during document conversion.
            </summary>
      <param name="instance">The rendering engine to use when overlaying annotations during document conversion.</param>
      <remarks>
        <para>The <see cref="T:Leadtools.Annotations.Core.AnnRenderingEngine" /> instance passed to this method will be used when the any job has the value of
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" /> set to <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.Overlay</see>
            and raster conversion is used.</para>
        <para>You must initialize this object with the <see cref="T:Leadtools.Annotations.Core.IAnnObjectRenderer" />'s to use before starting any conversion if annotation containers
            are to be overlayed on images.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverter.AnnRenderingEngineInstance" /> will return the same value passed for <paramref name="instance" />.</para>
        <para>The previously set <see cref="P:Leadtools.Documents.Converters.DocumentConverter.AnnRenderingEngineInstance" /> is removed when a new instance is set. You can set a value of <strong>null</strong>.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.OcrEngineInstance">
      <summary>
            Gets the engine instance to use when converting documents using OCR.
            </summary>
      <value>The engine instance to use when converting documents using OCR.</value>
      <remarks>
        <para>This property will return the same instance previously set with <see cref="M:Leadtools.Documents.Converters.DocumentConverter.SetOcrEngineInstance(Leadtools.Forms.Ocr.IOcrEngine,System.Boolean)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.DocumentWriterInstance">
      <summary>
            Gets the document writer instance to use when converting documents.
            </summary>
      <value>The document writer instance to use when converting documents.</value>
      <remarks>
        <para>This property will return the same instance previously set with <see cref="M:Leadtools.Documents.Converters.DocumentConverter.SetDocumentWriterInstance(Leadtools.Forms.DocumentWriters.DocumentWriter)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.AnnRenderingEngineInstance">
      <summary>
            Gets the rendering engine to use when overlaying annotations during document conversion.
            </summary>
      <value>The rendering engine to use when overlaying annotations during document conversion.</value>
      <remarks>
        <para>This property will return the same instance previously set with <see cref="M:Leadtools.Documents.Converters.DocumentConverter.SetAnnRenderingEngineInstance(Leadtools.Annotations.Core.AnnRenderingEngine)" />.</para>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.LoadDocumentOptions">
      <summary>
            Gets or sets the options to use when creating <see cref="T:Leadtools.Documents.Document" /> objects.
            </summary>
      <value>The options to use when creating <see cref="T:Leadtools.Documents.Document" /> objects. Default value is <strong>null</strong>.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> will load the input file in a new <see cref="T:Leadtools.Documents.Document" /> object if
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName">DocumentConverterJobData.InputDocumentFileName</see> is used (when
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document">DocumentConverterJobData.Document</see> is <strong>null</strong>).</para>
        <para>This is performed using <see cref="M:Leadtools.Documents.DocumentFactory.LoadFromFile(System.String,Leadtools.Documents.LoadDocumentOptions)">DocumentFactory.LoadFromFile</see> and this method requires
            an instance of <see cref="T:Leadtools.Documents.LoadDocumentOptions" /> with cache and other settings.</para>
        <para>If the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverter.LoadDocumentOptions" /> is not <strong>null</strong>, then this object is passed as is to the
            <see cref="M:Leadtools.Documents.DocumentFactory.LoadFromFile(System.String,Leadtools.Documents.LoadDocumentOptions)">DocumentFactory.LoadFromFile</see> method. If the value is <strong>null</strong>, then the converter
            will create a new instance with these parameters:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.LoadDocumentOptions.UseCache" />
            </term>
            <description>
              <para>
                <strong>false</strong> since cache is not required when converting and does not speed up the operation.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.LoadDocumentOptions.CachePolicy" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.LoadDocumentOptions.Password" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.LoadDocumentOptions.WebClient" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.LoadDocumentOptions.AnnotationsUri" />
            </term>
            <description>
              <para>Set to a new URI containing the value of
             <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputAnnotationsFileName">DocumentConverterJobData.InputAnnotationsFileName</see></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.LoadDocumentOptions.LoadEmbeddedAnnotations" />
            </term>
            <description>
              <para>
                <strong>false</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.LoadDocumentOptions.MayHaveDifferentPageSizes" />
            </term>
            <description>
              <para>
                <strong>false</strong>
              </para>
            </description>
          </item>
        </list>
      </remarks>
      <noexample />
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.Diagnostics">
      <summary>
            Gets the object that manages the diagnostics options to use with the document converter.
            </summary>
      <value>The object that manages the diagnostics options to use with this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterDiagnostics" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterDiagnostics" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.Options">
      <summary>
            Gets the object that manages the extra options to use with the document converter.
            </summary>
      <value>The object that manages the extra options to use with this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterOptions" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterOptions" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.Jobs">
      <summary>
            Gets the object that manages creating and running jobs in this document converter as well as job status events.
            </summary>
      <value>The object that manages creating and running jobs in this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> as well as job status events.</value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobs" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobs" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverter.Preprocessor">
      <summary>
            Gets the object that manages the pre-processing options of the document converter.
            </summary>
      <value>The object that manages the pre-processing options of this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" />.</para>
      </example>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterDiagnostics">
      <summary>
            Manages the diagnostics options of the document converter.
            </summary>
      <remarks>
        <para>
          <see cref="T:Leadtools.Documents.Converters.DocumentConverterDiagnostics" /> manages the diagnostics and debugging options of the document converter and can be accessed through the
            <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Diagnostics" /> property of <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
        <para>This class contains the following members:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterDiagnostics.EnableTrace" />
            </term>
            <description>
              <para>Enable outputting debug messages to the standard .NET trace listeners.</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <seealso cref="T:Leadtools.Documents.Document" />
      <seealso cref="T:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager" />
      <seealso cref="T:FO.Topics.ProgrammingWithOcr">Programming with the LEADTOOLS .NET OCR</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Public Shared Sub DocumentConverterDiagnosticsExample()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            'enables diagnostics print out
            documentConverter.Diagnostics.EnableTrace = True
            'output traces to console's window
            Trace.Listeners.Add(New TextWriterTraceListener(Console.Out))

            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.pdf")
            Dim format As DocumentFormat = DocumentFormat.Pdf
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"

            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterDiagnosticsExample()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            //enables diagnostics print out
            documentConverter.Diagnostics.EnableTrace = true;
            //output traces to console's window
            Trace.Listeners.Add(new TextWriterTraceListener(Console.Out));

            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.pdf");
            var format = DocumentFormat.Pdf;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";

            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterDiagnostics-->
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterDiagnostics.EnableTrace">
      <summary>
            Gets or sets a value that indicates whether this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> should output debug messages to the standard .NET trace listeners.
            </summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> should output debug messages to the standard .NET trace listeners, otherwise;
            <strong>false</strong> Default value is <strong>false</strong>.</value>
      <remarks>
        <para>If the value of this property is set to <strong>true</strong>, then this <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> object will output debug messages with current
            status (page being loaded, converted, saved, etc.) and any errors that may occur to the default .NET trace listener.</para>
        <para>For example, to enable tracing to the .NET console, use the following code:</para>
        <para>
          <pre>
            <code>
            // Trace to the console
            System.Diagnostics.Trace.Listeners.Add(new TextWriterTraceListener(Console.Out));
            // Enable tracing in the document converter
            documentConverter.Diagnostics.EnableTrace = true;
            // Run the job
            documentConverter.Jobs.RunJob(job);
            </code>
          </pre>
        </para>
        <para>When tracing is enabled, the engine will use the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName">DocumentConverterJobData.JobName</see> value when writing
            trace messages to help easily identity jobs.</para>
        <para>For more information on .NET tracing and how to redirect the messages to a file, the system log or a database, refer to
            <see cref="T:System.Diagnostics.Trace">System.Diagnostics.Trace</see> in MSDN.</para>
      </remarks>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterDiagnostics" />.</para>
      </example>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">
      <summary>
            Document converter operation.
            </summary>
      <remarks>
        <para>Used as type for the following properties:</para>
        <list type="bullet">
          <item>
            <description>
              <para>The <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Operation">DocumentConverterJobEventArgs.Operation</see> property used
            with the <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted">DocumentConverterJobs.JobStarted</see>,
            <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation">DocumentConverterJobs.JobOperation</see> and
            <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted">DocumentConverterJobs.JobCompleted</see> events. Specifes the current operation.</para>
            </description>
          </item>
          <item>
            <description>
              <para>The <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobError.Operation">DocumentConverterJobError.Operation</see> property. Specifies the
            operation that caused the error.</para>
            </description>
          </item>
        </list>
        <para>When the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode">DocumentConverterOptions.JobErrorMode</see> is
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Continue</see>, then the engine can continue to work if an error occured
            during specific operations. In the members table, each entry has a note that specifies whether errors occuring the operation is considered critical.
            Critical errors will cause the whole conversion process to fail and will never continue.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.Started">
      <summary>(0x00000000)<para>The conversion has started. Only with the <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted">DocumentConverterJobs.JobStarted</see> event.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.Completed">
      <summary>(0x00000001)<para>The conversion has completed. Only with the <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted">DocumentConverterJobs.JobCompleted</see> event.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.CreateDocument">
      <summary>(0x00000002)<para>A new <see cref="T:Leadtools.Documents.Document" /> object is creaed from <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" />.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.BeginDocumentWriter">
      <summary>(0x00000003)<para><see cref="M:Leadtools.Forms.DocumentWriters.DocumentWriter.BeginDocument(System.String,Leadtools.Forms.DocumentWriters.DocumentFormat)">DocumentWriter.BeginDocument</see> is called to create the output document. Document conversion only.</para><para>Any errors that occur during this operation are critical.</para><para>Override: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.DocumentWriter">DocumentConverterJobEventArgs.DocumentWriter</see> will contain document writer
            to use to create the output document. The user can modify the options of this class if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.EndDocumentWriter">
      <summary>(0x00000004)<para><see cref="M:Leadtools.Forms.DocumentWriters.DocumentWriter.EndDocument">DocumentWriter.EndDocument</see> is called to finalize the output document. Document conversion only.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.Other">
      <summary>(0x00000005)<para>General operation.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.LoadRasterPage">
      <summary>(0x00000006)<para><see cref="M:Leadtools.Documents.DocumentPage.GetImage">DocumentPage.GetImage</see> is called get the raster image of a page. Document and Raster conversion.</para><para>Any errors that occur during this operation are critical.</para><para>Override:</para><list type="bullet"><item><description><para>SVG conversion: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage">DocumentConverterJobEventArgs.RasterImage</see> will contain the overlay image to use if the
            output document format requires one. The user can modify this object if needed.</para></description></item><item><description><para>OCR conversion: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>false</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPageImage">DocumentConverterJobEventArgs.OcrPageImage</see> is <strong>null</strong> and will be loaded
            by the engine from the current document. The user override this behavior by setting their own value in <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPageImage">DocumentConverterJobEventArgs.OcrPageImage</see>
            and this image will be used for recognition. The engine will not dispose this image, it is the user responsibility to perform this
            during the next event when <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>.</para></description></item><item><description><para>Raster conversion: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage">DocumentConverterJobEventArgs.RasterImage</see> will contain the raster image object to be added
            to the output document. The user can modify this object if needed.</para></description></item></list></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.SaveRasterPage">
      <summary>(0x00000007)<para><see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">RasterCodecs.Save</see>
            is called to save the page image. Raster conversion only.</para><para>Any errors that occur during this operation are critical.</para><para>Override: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage">DocumentConverterJobEventArgs.RasterImage</see> will contain the raster image object to be added
            to the output document. The user can modify this object if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.LoadSvgPage">
      <summary>(0x00000008)<para><see cref="M:Leadtools.Documents.DocumentPage.GetSvg(Leadtools.Codecs.CodecsLoadSvgOptions)">DocumentPage.GetSvg</see> is called get the SVG image of a page. Document conversion.</para><para>Any errors that occur during this operation are critical.</para><para>Override: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.SvgDocument">DocumentConverterJobEventArgs.SvgDocument</see> will contain the SVG document object to be added
            to the output document. The user can modify this object if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.AddDocumentPage">
      <summary>(0x00000009)<para><see cref="M:Leadtools.Forms.DocumentWriters.DocumentWriter.AddPage(Leadtools.Forms.DocumentWriters.DocumentPage)">DocumentWriter.AddPage</see> is called to add a page to the document. Document conversion.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.PreprocessPage">
      <summary>(0x0000000A)<para><see cref="M:Leadtools.Forms.Ocr.IOcrPage.AutoPreprocess(Leadtools.Forms.Ocr.OcrAutoPreprocessPageCommand,Leadtools.Forms.Ocr.OcrProgressCallback)">IOcrPage.AutoPreprocess</see> or <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" /> is called to pre-process the page.
            Document and Raster conversion.</para><para>Any errors that occur during this operation are not critical. The error will be logged and pre-processing canceled.</para><para>Override:</para><list type="bullet"><item><description><para>SVG conversion: None.</para></description></item><item><description><para>OCR conversion: <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage">DocumentConverterJobEventArgs.OcrPage</see>
            will contain the page before and after it has been processed.</para></description></item><item><description><para>Raster conversion: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>false</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage">DocumentConverterJobEventArgs.RasterImage</see> will contain the raster image object before it has been
            pre-processed. When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage">DocumentConverterJobEventArgs.RasterImage</see> will contain the raster image object after it has been
            pre-processed. The user can modify either image if required.</para></description></item></list></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.CreateOcrDocument">
      <summary>(0x0000000B)<para><see cref="M:Leadtools.Forms.Ocr.IOcrDocumentManager.CreateDocument">IOcrDocumentManager.CreateDocument</see> is called to create an <see cref="T:Leadtools.Forms.Ocr.IOcrDocument" />
            object. Document conversion.</para><para>Override (OCR conversion only): When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrDocument">DocumentConverterJobEventArgs.OcrDocument</see> will contain the <see cref="T:Leadtools.Forms.Ocr.IOcrDocument" /> object
            used by this conversion. The user can modify this value if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.AddOcrPage">
      <summary>(0x0000000C)<para><see cref="M:Leadtools.Forms.Ocr.IOcrPageCollection.AddPage(Leadtools.RasterImage,Leadtools.Forms.Ocr.OcrProgressCallback)">IOcrPageCollection.AddPage</see> is called to add the <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> object. Document conversion.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.AutoZoneOcrPage">
      <summary>(0x0000000D)<para><see cref="M:Leadtools.Forms.Ocr.IOcrPage.AutoZone(Leadtools.Forms.Ocr.OcrProgressCallback)">IOcrPage.AutoZone</see> is called. Document conversion.</para><para>Any errors that occur during this operation are not critical. The error will be logged and a graphics zone is added to the page instead. The
            end result will be to not recognize this page, instead, add it as a raster page to the output document.</para><para>Override (OCR conversion only): When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>false</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage">DocumentConverterJobEventArgs.OcrPage</see> will contain <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> to be zoned. if
            the user sets their own zone, then the engine will not perform auto-zoning automatically. When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage">DocumentConverterJobEventArgs.OcrPage</see> will contain <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> with the zones
            set. The user can modify this object if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.RecognizeOcrPage">
      <summary>(0x0000000E)<para><see cref="M:Leadtools.Forms.Ocr.IOcrPage.Recognize(Leadtools.Forms.Ocr.OcrProgressCallback)">IOcrPage.Recognize</see> is called. Document conversion.</para><para>Any errors that occur during this operation are not critical. The error will be logged. The raster image without recognition data will be added
            as is to the output document.</para><para>Override (OCR conversion only): When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>false</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage">DocumentConverterJobEventArgs.OcrPage</see> will contain <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> to be recognized. if
            the user performs the recognition manually, then the engine will not recognize the page automatically. When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage">DocumentConverterJobEventArgs.OcrPage</see> will contain <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> with the current
            recognition data. The user can modify this object if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.SaveOcrPage">
      <summary>(0x0000000F)<para><see cref="M:Leadtools.Forms.Ocr.IOcrDocument.Save(System.String,Leadtools.Forms.DocumentWriters.DocumentFormat,Leadtools.Forms.Ocr.OcrProgressCallback)">IOcrDocument.Save</see> with a single page is called. Document conversion.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.SaveOcrDocument">
      <summary>(0x00000010)<para><see cref="M:Leadtools.Forms.Ocr.IOcrDocument.Save(System.String,Leadtools.Forms.DocumentWriters.DocumentFormat,Leadtools.Forms.Ocr.OcrProgressCallback)">IOcrDocument.Save</see> is called. Document conversion.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.ConvertOcrDocument">
      <summary>(0x00000011)<para><see cref="M:Leadtools.Forms.DocumentWriters.DocumentWriter.Convert(System.String,System.String,Leadtools.Forms.DocumentWriters.DocumentFormat)">DocumentWriter.Convert</see> is called. Document conversion.</para><para>Any errors that occur during this operation are critical.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.LoadAnnotations">
      <summary>(0x00000012)<para><see cref="M:Leadtools.Annotations.Core.AnnCodecs.Load(System.String,System.Int32)">AnnCodecs.Load</see> is called to load the annotations from the input document or external input annotations file.</para><para>Any errors that occur during this operation are not critical. The error will be logged. The annotations for the current page are ignored.</para><para>Override: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>true</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnContainer">DocumentConverterJobEventArgs.AnnContainer</see> will contain the annotation container to be used
            for this page and the user can modify this container if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.SaveAnnotations">
      <summary>(0x00000013)<para><see cref="M:Leadtools.Annotations.Core.AnnCodecs.Save(System.String,Leadtools.Annotations.Core.AnnContainer,Leadtools.Annotations.Core.AnnFormat,System.Int32)">AnnCodecs.Save</see> is called to save the annotations to the external output annotations file.</para><para>Any errors that occur during this operation are not critical. The error will be logged. The annotations for the current page are ignored.</para><para>Override: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>false</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnContainer">DocumentConverterJobEventArgs.AnnContainer</see> will contain the annotation container to be used
            for this page and the user can modify this container if needed.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobOperation.EmbedAnnotations">
      <summary>(0x00000014)<para>The annotations are being embedded into the output document.</para><para>Any errors that occur during this operation are not critical. The error will be logged. The annotations are not embedded and ignored.</para><para>Override: When <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see> is <strong>false</strong>,
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnContainer">DocumentConverterJobEventArgs.AnnContainer</see> will contain the annotation container to be used
            for this page and the user can modify this container if needed.</para></summary>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">
      <summary>
            Controls how the engine handles errors that may occur during conversion.
            </summary>
      <remarks>
        <para>
          <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode" /> is used as the type for the <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode">DocumentConverterOptions.JobErrorMode</see>
            property that controls how the engine handles errors that may occur during conversion.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> on which operation is considered critical.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobErrorMode.Abort">
      <summary>(0x00000000)<para>Abort the conversion job.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobErrorMode.Continue">
      <summary>(0x00000001)<para>Continue on non critical errors.</para></summary>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">
      <summary>
            Job status.
            </summary>
      <remarks>
        <para>
          <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus" /> is used as the type for these properties:</para>
        <list type="table">
          <listheader>
            <term>Property</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Status">DocumentConverterJob.Status</see>
            </term>
            <description>
              <para>Final status of the conversion job</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Status">DocumentConverterJobEventArgs.Status</see>
            </term>
            <description>
              <para>Current job status and to allow the user to abort the operation</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobStatus.Success">
      <summary>(0x00000000)The job is successful.</summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobStatus.SuccessWithErrors">
      <summary>(0x00000001)The job is partially successful. Errors occured</summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterJobStatus.Aborted">
      <summary>(0x00000002)The job was not successful and is aborted. Errors occured</summary>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">
      <summary>
            Annotation conversion options.
            </summary>
      <remarks>
        <para>Controls how the input annotations are used by the document converter during a job.</para>
      </remarks>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode.None">
      <summary>(0x00000000)<para>Do not save any annotations.</para><para><see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName">DocumentConverterJobData.OutputAnnotationsFileName</see> is ignored.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode.External">
      <summary>(0x00000001)<para>Export the annotations to an external file.</para><para>Uses <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName">DocumentConverterJobData.OutputAnnotationsFileName</see>.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode.Overlay">
      <summary>(0x00000002)<para>Overlay the annotations over the image (raster conversion only).</para><para><see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName">DocumentConverterJobData.OutputAnnotationsFileName</see> is ignored.</para></summary>
    </member>
    <member name="F:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode.Embed">
      <summary>(0x00000003)<para>Embed the annotations in the final document (for PDF and TIFF file formats only).</para><para><see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName">DocumentConverterJobData.OutputAnnotationsFileName</see> is ignored. The
            annotations are saved into <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName">DocumentConverterJobData.OutputDocumentFileName</see> itself
            if the format supports embedding annotations (currently only PDF and TIFF file formats).</para></summary>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJobError">
      <summary>
            Contains information on an document converter job error
            </summary>
      <remarks>
        <para>When the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode">DocumentConverterOptions.JobErrorMode</see> is 
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Abort</see>, any error that may occur while running a job will result in an
            exception being thrown.</para>
        <para>If the value of this property is <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Continue</see>, then none critical errors
            can be logged and running continues. For example, if a source document has a page that could not be recognized with OCR. The offending page will be
            added to the final document as a graphics images and recognition will continue to the next page. In this mode, the engine will not throw an exception if
            an error occur, instead, all errors will be logged into the job's <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">DocumentConverterJob.Errors</see>
            collection. When conversion finishes, you can check if this collection is not empty and get the information of the errors and act upon them according
            to your application logic.</para>
        <para>Each error value in <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">DocumentConverterJob.Errors</see> contain the following information:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobError.InputDocumentPageNumber" />
            </term>
            <description>
              <para>The 1-based number of the page in the input document that caused the error. This value may be 0 if the error that occur is not
            specific for any page.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobError.Operation" />
            </term>
            <description>
              <para>The operation that was running when the error occured.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobError.Error" />
            </term>
            <description>
              <para>The exception that was thrown (if any). May be <strong>null</strong>.</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobError.InputDocumentPageNumber">
      <summary>
            The 1-based number of the page in the input document file file that caused the error.
            </summary>
      <value>The 1-based number of the page in the input document file file that caused the error.</value>
      <remarks>
        <para>This value may be 0 if the error that occur is not specific for any page.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobError.Operation">
      <summary>
            The operation that was running when the error occured.
            </summary>
      <value>An <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> enumeration member that specifies the operation that was running when the error occured.</value>
      <noremarks />
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobError.Error">
      <summary>
            The exception that was thrown (if any).
            </summary>
      <value>The <see cref="T:System.Exception" /> object that was thrown and caught by the engine. May be a <strong>null</strong> value.</value>
      <noremarks />
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJobData">
      <summary>
            Data for a document converter job.
            </summary>
      <remarks>
        <para>Use this structure to specify the input data for a document converter job. After you create an instance of this structure with the data, you should
            pass it to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)">DocumentConverterJobs.CreateJob</see> to create an <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object.
            You can then use this with the <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> methods to run and monitor
            the conversion job.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document">
      <summary>
        <see cref="T:Leadtools.Documents.Document" /> object to be used as the input of the conversion. Either this or <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" /> are used.
            </summary>
      <value>The <see cref="T:Leadtools.Documents.Document" /> object to be used as the input of the conversion. If this value is not <strong>null</strong>,
            then it will be used as the input document for the conversion, if the value is <strong>null</strong>, then <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" /> is
            used instead.</value>
      <remarks>
        <para>If <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document" /> is set by the user, then the document converter will use this <see cref="T:Leadtools.Documents.Document" /> object
            as is and the conversion will use any updated data.</para>
        <para>The ownership of this object belongs to the user and <see cref="T:Leadtools.Documents.Converters.DocumentConverter" /> will not dispose it after it has been used.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName">
      <summary>
            Path to the input file for the conversion. Either this or <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document" /> are used.
            </summary>
      <value>The path to the input file for the conversion. If this value is not <strong>null</strong>, then it will be used as the input document for
            the conversion, if the value is <strong>null</strong>, then <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document" /> is used instead.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" /> can be any single or multi-page file formats supported by LEADTOOLS. If the value is not
            <strong>null</strong>, then it must point to an existing file on disk with read-access.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputAnnotationsFileName">
      <summary>
            Path to the file containing the annotations file to be added to the output document. Optional.
            </summary>
      <value>The path to the file containing the annotations file to be added to the output document. This is an optional value and will be used
            if <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" /> is not <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.None</see>.</value>
      <remarks>
        <para>If <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputAnnotationsFileName" /> is not <strong>null</strong> and
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" /> is not <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.None</see>, then the converter
            will load the LEADTOOLS annotations contained in this file and use them during the conversion. The file can have multiple annotations containers
            saved using <see cref="T:Leadtools.Annotations.Core.AnnCodecs" /> and the converter will load the container that corresponds to the current page number.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" /> dictates how the annotations are used with the output document.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber">
      <summary>
            Gets or sets the number of the first page to be converted from the input document
            </summary>
      <value>The 1-based number of the first page to be converted from the input document. Default value is 0.</value>
      <remarks>
        <para>The converter will automatically uses 1 for <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" /> and -1 (last page) in 
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" /> if the values are left as the default of 0.</para>
        <para>You can use <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" /> and <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" /> to recognize only a certain range of pages in
            the input document file.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber">
      <summary>
            Gets or sets the number of the last page to be converted from the input document
            </summary>
      <value>The 1-based number of the last page to be converted from the input document. A value of -1 means to use the last page in the document. Default value is 0.</value>
      <remarks>
        <para>The converter will automatically uses 1 for <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" /> and -1 (last page) in 
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" /> if the values are left as the default of 0.</para>
        <para>You can use <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" /> and <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" /> to recognize only a certain range of pages in
            the input document file.</para>
        <para>If <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" /> is -1, then the converter will automatically obtain the correct value of the last page number
            from the input document.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat">
      <summary>
            Gets or sets the output format to use for document conversion.
            </summary>
      <value>The output format to use for document conversion.</value>
      <remarks>
        <para>Jobs can be converted using document or raster formats for the output. To convert to a document format (using <see cref="T:Leadtools.Forms.DocumentWriters.DocumentWriter" />),
            set <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> to the desired <see cref="T:Leadtools.Forms.DocumentWriters.DocumentFormat" /> value and set
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> to <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Unknown</see>.</para>
        <para>To convert to a raster format (using <see cref="T:Leadtools.Codecs.RasterCodecs" />),
            set <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> to the desired <see cref="T:Leadtools.RasterImageFormat" /> value and set
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> to <see cref="T:Leadtools.Forms.DocumentWriters.DocumentFormat">DocumentFormat.User</see>.</para>
        <para>Therefore, one of <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> and <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> is used during the conversion, otherwise, an exception
            will be thrown.</para>
        <para>Use <see cref="P:Leadtools.Documents.Converters.DocumentConverter.DocumentWriterInstance">DocumentConverter.DocumentWriterInstance</see> to set the extra format options
            to use whenc converting to a document format.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat">
      <summary>
            Gets or sets the output format to use for raster conversion.
            </summary>
      <value>The output format to use for raster conversion.</value>
      <remarks>
        <para>Jobs can be converted using document or raster formats for the output. To convert to a document format (using <see cref="T:Leadtools.Forms.DocumentWriters.DocumentWriter" />),
            set <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> to the desired <see cref="T:Leadtools.Forms.DocumentWriters.DocumentFormat" /> value and set
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> to <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Unknown</see>.</para>
        <para>To convert to a raster format (using <see cref="T:Leadtools.Codecs.RasterCodecs" />),
            set <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> to the desired <see cref="T:Leadtools.RasterImageFormat" /> value and set
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> to <see cref="T:Leadtools.Forms.DocumentWriters.DocumentFormat">DocumentFormat.User</see>.</para>
        <para>Therefore, one of <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> and <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> is used during the conversion, otherwise, an exception
            will be thrown.</para>
        <para>Use <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageBitsPerPixel" /> to set the bits/pixel value to use for the output document when using raster conversion.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageBitsPerPixel">
      <summary>
            Gets or sets the bits per pixel to use for the output document when raster conversion is used.
            </summary>
      <value>The bits per pixel to use for the output document when raster conversion is used. Default value is 0.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageBitsPerPixel" /> is only used when the job uses raster conversion (the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> is not
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Unknown</see>).</para>
        <para>This value is passed as the <i>bitsPerPixel</i> parameter to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">RasterCodecs.Save</see> method
            used during raster conversion. The default value of 0 means use the best bits per pixel from the input document and the values supported by the
            output document.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName">
      <summary>
            Name of the output file to be generated by this conversion.
            </summary>
      <value>Name of the output file to be generated by this conversion.</value>
      <remarks>
        <para>The file will be overwritten if it previously exist. The full path must contain a valid file name that can be created using the current
            process.</para>
        <para>You can use <see cref="M:Leadtools.Forms.DocumentWriters.DocumentWriter.GetFormatFileExtension(Leadtools.Forms.DocumentWriters.DocumentFormat)" /> to get the default extension to use
            with the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> when generating this file name.</para>
        <para>If the output file format used (either <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> or <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" />) does not support multi-page files
            and the input document contains multiple pages, then the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.PageNumberingTemplate">DocumentConverterOptions.PageNumberingTemplate</see>
            is used to generate the names of the files created by the job.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName">
      <summary>
            Name of the file that will contain the annotations parsed from the input document. Optional
            </summary>
      <value>The name to the file that will contain the annotations parsed from the input document. Optional</value>
      <remarks>
        <para>The file will be overwritten if it previously exist. The full path must contain a valid file name that can be created using the current
            process.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName" /> is used when the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" /> is
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.External</see> and the input document contains annotations.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName">
      <summary>
            Gets or sets the optional job name.
            </summary>
      <value>The optional job name.</value>
      <remarks>
        <para>If tracing is enabled with <see cref="P:Leadtools.Documents.Converters.DocumentConverterDiagnostics.EnableTrace">DocumentConverterDiagnostics.EnableTrace</see>, then the engine
            will use this value in the trace messages. If this member is a <strong>null</strong> reference, then the trace will show the generic
            <c>[Untitled]</c> name next to the trace messages.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData">
      <summary>
            Optional user-defined object that can be used a long side the job events to pass application specified data.
            </summary>
      <value>The optional user-defined object that can be used a long side the job events to pass application specified data.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" /> can contain any application specific data. The value can be obtained at any time through the
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.JobData">DocumentConverterJob.JobData</see> property.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode">
      <summary>
            Gets or sets a value that controls how annotations are saved in the output document.
            </summary>
      <value>A <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode" /> enumeration value that controls how annotations are saved in the output document.</value>
      <remarks>
        <para>This value is only used if the input document contains annotations, otherwise it is ignored.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJob">
      <summary>
            Document converter job.
            </summary>
      <remarks>
        <para>To run a job with <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.DocumentConverter" />, first initialize a new <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> object with the job's parameters
            (input document or file name, pages, output format, output file name, optionsl annotations, etc.), then use
            <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)">DocumentConverterJobs.CreateJob</see> to create the <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object. Finally pass
            this job to either <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)">DocumentConverterJobs.RunJob</see> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)">DocumentConverterJobs.RunJobAsync</see>.</para>
        <para>The job instance can also be tracked and obtained through the <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted">DocumentConverterJobs.JobStarted</see>,
            <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation">DocumentConverterJobs.JobOperation</see> and <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted">DocumentConverterJobs.JobCompleted</see>,
            events through the event data (<see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job">DocumentConverterJobEventArgs.Job</see>).</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Status" /> will contain the final status of the job when it finishes running. If the value is not
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Success</see>, then errors might have occured and these errors are added to
            the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors" /> list.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJob.DocumentConverter">
      <summary>
            Gets the instance of the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.DocumentConverter" /> used to create and run this object.
            </summary>
      <value>The instance of the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.DocumentConverter" /> used to create and run this object.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJob.JobData">
      <summary>
            Gets the job data.
            </summary>
      <value>A copy of the <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> structure that was used to create this job.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.JobData" /> will contain the same value passed to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" />.</para>
        <para>You can use this member to get information about the original job data used to create this object. For example, to get the
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" /> or <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" /> associated with this job.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJob.Status">
      <summary>
            Gets the final job status.
            </summary>
      <value>The final job status.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Status" /> will be set the by the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.DocumentConverter" /> when the job finishes running.</para>
        <para>If the value is not <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Success</see>, then errors might have occured and these errors
            are added to the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors" /> list.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">
      <summary>
            Gets a list that contains any errors occured when this job is run
            </summary>
      <value>A list of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobError" /> objects that contain detailed information on any errors that may have occured when this job is run.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors" /> will contain detail information on what caused the job to fail (or partially succeed). The value of
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Status" /> will be <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Aborted</see> or
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.SuccessWithErrors</see> in this situation.</para>
        <para>If the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode">DocumentConverterOptions.JobErrorMode</see> was
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Continue</see> when this job is run, then none critical errors can be logged
            and running continues. For example, if a source document has a page that could not be recognized by OCR. The offending page will be added to the
            final document as a graphics images and recognition will continue to the next page. In this mode, the engine will not throw an exception if an error
            occur, instead, all errors will be logged into the job's <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors" /> collection. When recognition finishes, you can check if this collection
            is not empty and get the information of the errors and act upon them according to your application logic.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs">
      <summary>
            Data for the <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" />, <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation" /> and
            <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> events.
            </summary>
      <remarks>
        <para>These events will occur when <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> is called.</para>
        <para>You can use these event to keep track of the number of jobs pending running. You can also examine <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job">DocumentConverterJobEventArgs.Job</see>
            to get information on whether job finished successfully and get error status if any. <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> example shows complete source code of how to easily
            accomplish these tasks in your application.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> will occur exactly once per job. <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see>
            will always be <strong>false</strong>.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> event will always occur when a job is finished running whether the job is aborted or completed.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> event occurs when a job is about to start.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" />.
            </summary>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Status">
      <summary>
            Gets or sets the current status of the job and allow the user to cancel it.
            </summary>
      <value>The current status of the job and allow the user to cancel it.</value>
      <remarks>
        <para>Set <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Status" /> to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Abort</see> to abort this job.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job">
      <summary>
            The current job object.
            </summary>
      <value>The current job object that was passed to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</value>
      <noremarks />
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">
      <summary>
            A value that indicates whether the engine has already run the operation.
            </summary>
      <value>
        <strong>true</strong> if the engine has already run the operation, otherwise; <strong>false</strong> and the engine is about to run the operation.</value>
      <remarks>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation">DocumentConverterJobs.JobOperation</see> event occur twice for each operation, first
            with <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation" /> set to <strong>false</strong>, meaning the engine is about to run this operation and then with
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation" /> set to <strong>true</strong>, meaning the engine has run the operation.</para>
        <para>
          <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted">DocumentConverterJobs.JobStarted</see> and
            <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted">DocumentConverterJobs.JobCompleted</see> events fire once each with
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation" /> set to <strong>false</strong> always.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Operation">
      <summary>
            The current operation.
            </summary>
      <value>A <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> enumeration member that specifies the current operation.</value>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Document">
      <summary>
            The current input <see cref="T:Leadtools.Documents.Document" /> object.
            </summary>
      <value>The current input <see cref="T:Leadtools.Documents.Document" /> object.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Document" /> can either be the original value passed into <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document">DocumentConverterJobData.Document</see>
            or a temporarly once created by the engine from <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName">DocumentConverterJobData.InputDocumentFileName</see>.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.DocumentWriter">
      <summary>
            The <see cref="T:Leadtools.Forms.DocumentWriters.DocumentWriter" /> object used when saving document formats.
            </summary>
      <value>The <see cref="T:Leadtools.Forms.DocumentWriters.DocumentWriter" /> object used when saving document formats.</value>
      <remarks>
        <para>This value is the same as <see cref="P:Leadtools.Documents.Converters.DocumentConverter.DocumentWriterInstance">DocumentConverter.DocumentWriterInstance</see>.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrDocument">
      <summary>
            The <see cref="T:Leadtools.Forms.Ocr.IOcrDocument" /> object created when converting using OCR.
            </summary>
      <value>The <see cref="T:Leadtools.Forms.Ocr.IOcrDocument" /> object created by the engine when OCR is used in the conversion.</value>
      <remarks>
        <para>This value is always <strong>null</strong> if OCR is not used in the conversion and is not available with all operations.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage">
      <summary>
            The <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> object created when converting using OCR.
            </summary>
      <value>The <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> object created by the engine when OCR is used in the conversion.</value>
      <remarks>
        <para>This value is always <strong>null</strong> if OCR is not used in the conversion and is not available with all operations.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPageImage">
      <summary>
            Gets or sets the <see cref="T:Leadtools.RasterImage" /> object used as the input for a page when OCR conversion is used.
            </summary>
      <value>The <see cref="T:Leadtools.Forms.Ocr.IOcrPage" /> object used as the input for a page when OCR conversion is used.</value>
      <remarks>
        <para>This value is always <strong>null</strong> if OCR is not used in the conversion and is not available with all operations.</para>
        <para>By the default, the engine will get the image from the current <see cref="T:Leadtools.Documents.DocumentPage" />. You can override this behavior by supplying your
            own raster image object when <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">DocumentConverterJobOperation.LoadRasterImage</see> is called during
            OCR conversion.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage">
      <summary>
            The <see cref="T:Leadtools.RasterImage" /> object used as the input for raster conversion and optional overlay for SVG conversion.
            </summary>
      <value>The <see cref="T:Leadtools.RasterImage" /> object used as the input for raster conversion and optional overlay for SVG conversion.</value>
      <remarks>
        <para>This value is not always available and could be <strong>null</strong>.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.SvgDocument">
      <summary>
            The <see cref="T:Leadtools.Svg.SvgDocument" /> object used when SVG conversion is used.
            </summary>
      <value>The <see cref="T:Leadtools.Svg.SvgDocument" /> object used when SVG conversion is used.</value>
      <remarks>
        <para>This value is not always available and could be <strong>null</strong>.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnContainer">
      <summary>
            The <see cref="T:Leadtools.Annotations.Core.AnnContainer" /> object used when annotations are loaded or saved.
            </summary>
      <value>The <see cref="T:Leadtools.Annotations.Core.AnnContainer" /> object used when annotations are loaded or saved.</value>
      <remarks>
        <para>This value is not always available and could be <strong>null</strong>.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.InputDocumentPageNumber">
      <summary>
            The the current input page number.
            </summary>
      <value>The 1-based current input page number.</value>
      <remarks>
        <para>This value will go from <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber">DocumentConverterJobData.InputDocumentFirstPageNumber</see>
            to the last page of the document. The value is the current page of this operation.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OutputDocumentPageNumber">
      <summary>
            The the current output page number.
            </summary>
      <value>The 1-based current output page number.</value>
      <remarks>
        <para>This value will go from 1 to the last page in the conversion.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnotationsMode">
      <summary>
            Gets or sets the current annotations mode.
            </summary>
      <value>The current annotations mode.</value>
      <remarks>
        <para>This will hold the same value as the original <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData">DocumentConverterJobData.AnnotationsMode</see>. You
            can override the annotation more by replacing it with a new value here based on your application needs.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterJobs">
      <summary>
            Manages creating and running jobs in this document converter as well as job status events.
            </summary>
      <remarks>
        <para>
          <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobs" /> manages the creating and running jobs in this document converter as well as job status events and can be accessed through the
            <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Jobs" /> property of <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
        <para>This class contains the following members:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" />
            </term>
            <description>
              <para>Create a new job.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" />
            </term>
            <description>
              <para>Run a job.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.AbortAllJobs" /></term>
            <description>
              <para>Run jobs in separate threads and support for aborting.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" />, <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation" /> and <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /></term>
            <description>
              <para>Notification events for when a job starts, is in progress and when it is completed.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJobData(System.String,System.String,Leadtools.Forms.DocumentWriters.DocumentFormat)">CreateJobData</see>
            </term>
            <description>
              <para>Helper methods to quickly create a job from common input.</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <seealso cref="T:Leadtools.Documents.Document" />
      <seealso cref="T:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager" />
      <seealso cref="T:FO.Topics.ProgrammingWithOcr">Programming with the LEADTOOLS .NET OCR</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Public Shared Sub DocumentConverterJobsExample()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.pdf")
            Dim format As DocumentFormat = DocumentFormat.Pdf
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"
            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterJobsExample()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.pdf");
            var format = DocumentFormat.Pdf;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";
            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterJobs-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJobData(System.String,System.String,Leadtools.Forms.DocumentWriters.DocumentFormat)">
      <summary>
            Fills in a common document conversion job data.
            </summary>
      <param name="inputDocumentFileName">Path to the input file for the conversion.</param>
      <param name="outputDocumentFileName">Path to the output file to be generated by this conversion.</param>
      <param name="documentFormat">The output format.</param>
      <returns>The newly initialized job data.</returns>
      <remarks>
        <para>This method fills in the necessary members required for a job data to be used in a document conversion. The result 
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> will be initialized as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" />
            </term>
            <description>
              <paramref name="inputDocumentFileName" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName" />
            </term>
            <description>
              <paramref name="outputDocumentFileName" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" />
            </term>
            <description>
              <paramref name="documentFormat" />
            </description>
          </item>
        </list>
        <para>The rest of the members are initialized to the following default values to mark them as "unused"</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" />
            </term>
            <description>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Unknown.</see> Use <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> instead.</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />
            </term>
            <description>1 (first page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" />
            </term>
            <description>-1 (last page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageBitsPerPixel" />
            </term>
            <description>0 (default)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" />
            </term>
            <description>
              <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.None</see>
            </description>
          </item>
        </list>
        <para>You can modify the values of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> such as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" /> and
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" /> on the returned object before passing it to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" />.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Public Shared Sub DocumentConverterJobsCreateJobData1Example()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.pdf")
            Dim format As DocumentFormat = DocumentFormat.Pdf
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"
            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterJobsCreateJobData1Example()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.pdf");
            var format = DocumentFormat.Pdf;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";
            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterJobs.CreateJobData1-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJobData(System.String,System.String,Leadtools.RasterImageFormat)">
      <summary>
            Fills in a common raster conversion job data.
            </summary>
      <param name="inputDocumentFileName">Path to the input file for the conversion.</param>
      <param name="outputDocumentFileName">Path to the output file to be generated by this conversion.</param>
      <param name="rasterImageFormat">The output format.</param>
      <returns>The newly initialized job data.</returns>
      <remarks>
        <para>This method fills in the necessary members required for a job data to be used in a raster conversion. The result 
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> will be initialized as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" />
            </term>
            <description>
              <paramref name="inputDocumentFileName" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName" />
            </term>
            <description>
              <paramref name="outputDocumentFileName" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" />
            </term>
            <description>
              <paramref name="rasterImageFormat" />
            </description>
          </item>
        </list>
        <para>The rest of the members are initialized to the following default values to mark them as "unused"</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" />
            </term>
            <description>
              <see cref="T:Leadtools.Forms.DocumentWriters.DocumentFormat">DocumentFormat.User.</see> Use <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> instead.</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />
            </term>
            <description>1 (first page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" />
            </term>
            <description>-1 (last page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageBitsPerPixel" />
            </term>
            <description>0 (default)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" />
            </term>
            <description>
              <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.None</see>
            </description>
          </item>
        </list>
        <para>You can modify the values of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> such as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" /> and
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" /> on the returned object before passing it to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" />.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Public Shared Sub DocumentConverterJobsCreateJobData2Example()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.tif")
            Dim format As RasterImageFormat = RasterImageFormat.Tif
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"
            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterJobsCreateJobData2Example()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.tif");
            var format = RasterImageFormat.Tif;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";
            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterJobs.CreateJobData2-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJobData(Leadtools.Documents.Document,System.String,Leadtools.Forms.DocumentWriters.DocumentFormat)">
      <summary>
            Fills in a common document conversion job data for an input <see cref="T:Leadtools.Documents.Document" />.
            </summary>
      <param name="document">Input document to convert.</param>
      <param name="outputDocumentFileName">Path to the output file to be generated by this conversion.</param>
      <param name="documentFormat">The output format.</param>
      <returns>The newly initialized job data.</returns>
      <remarks>
        <para>This method fills in the necessary members required for a job data to be used in a document conversion. The result 
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> will be initialized as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document" />
            </term>
            <description>
              <paramref name="document" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName" />
            </term>
            <description>
              <paramref name="outputDocumentFileName" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" />
            </term>
            <description>
              <paramref name="documentFormat" />
            </description>
          </item>
        </list>
        <para>The rest of the members are initialized to the following default values to mark them as "unused"</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" />
            </term>
            <description>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Unknown.</see> Use <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" /> instead.</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />
            </term>
            <description>1 (first page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" />
            </term>
            <description>-1 (last page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageBitsPerPixel" />
            </term>
            <description>0 (default)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" />
            </term>
            <description>
              <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.None</see>
            </description>
          </item>
        </list>
        <para>You can modify the values of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> such as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" /> and
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" /> on the returned object before passing it to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" />.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Public Shared Sub DocumentConverterJobsCreateJobData3Example()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.tif")
            Dim format As RasterImageFormat = RasterImageFormat.Tif
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"
            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterJobsCreateJobData3Example()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.tif");
            var format = RasterImageFormat.Tif;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";
            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterJobs.CreateJobData3-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJobData(Leadtools.Documents.Document,System.String,Leadtools.RasterImageFormat)">
      <summary>
            Fills in a common raster conversion job data for an input <see cref="T:Leadtools.Documents.Document" />.
            </summary>
      <param name="document">Input document to convert.</param>
      <param name="outputDocumentFileName">Path to the output file to be generated by this conversion.</param>
      <param name="rasterImageFormat">The output format.</param>
      <returns>The newly initialized job data.</returns>
      <remarks>
        <para>This method fills in the necessary members required for a job data to be used in a raster conversion. The result 
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> will be initialized as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document" />
            </term>
            <description>
              <paramref name="document" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName" />
            </term>
            <description>
              <paramref name="outputDocumentFileName" />
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" />
            </term>
            <description>
              <paramref name="rasterImageFormat" />
            </description>
          </item>
        </list>
        <para>The rest of the members are initialized to the following default values to mark them as "unused"</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.DocumentFormat" />
            </term>
            <description>
              <see cref="T:Leadtools.Forms.DocumentWriters.DocumentFormat">DocumentFormat.User.</see> Use <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageFormat" /> instead.</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />
            </term>
            <description>1 (first page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentLastPageNumber" />
            </term>
            <description>-1 (last page)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.RasterImageBitsPerPixel" />
            </term>
            <description>0 (default)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputAnnotationsFileName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" />
            </term>
            <description>
              <strong>null</strong>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode" />
            </term>
            <description>
              <see cref="T:Leadtools.Documents.Converters.DocumentConverterAnnotationsMode">DocumentConverterAnnotationsMode.None</see>
            </description>
          </item>
        </list>
        <para>You can modify the values of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> such as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.JobName" /> and
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.UserData" /> on the returned object before passing it to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" />.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Private Shared Sub DocumentConverterJobsCreateJobData4Example()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            documentConverter.Diagnostics.EnableTrace = True
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")

            Dim options As New LoadDocumentOptions()
            options.UseCache = False

            Using document As Document = DocumentFactory.LoadFromFile(inFile, options)
               Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.converted.pdf")
               Dim format As DocumentFormat = DocumentFormat.Pdf
               Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(document, outFile, format)
               jobData.JobName = "conversion job"

               Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
               documentConverter.Jobs.RunJob(job)

               If job.Status = DocumentConverterJobStatus.Success Then
                  Console.WriteLine("Success")
               Else
                  Console.WriteLine("{0} Errors", job.Status)
                  For Each errorItem As DocumentConverterJobError In job.Errors
                     Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
                  Next
               End If
            End Using
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      static void DocumentConverterJobsCreateJobData4Example()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            documentConverter.Diagnostics.EnableTrace = true;
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");

            var options = new LoadDocumentOptions();
            options.UseCache = false;

            using (var document = DocumentFactory.LoadFromFile(inFile, options))
            {
               var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.converted.pdf");
               var format = DocumentFormat.Pdf;
               var jobData = DocumentConverterJobs.CreateJobData(document, outFile, format);
               jobData.JobName = "conversion job";

               var job = documentConverter.Jobs.CreateJob(jobData);
               documentConverter.Jobs.RunJob(job);

               if (job.Status == DocumentConverterJobStatus.Success)
               {
                  Console.WriteLine("Success");
               }
               else
               {
                  Console.WriteLine("{0} Errors", job.Status);
                  foreach (var error in job.Errors)
                  {
                     Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
                  }
               }
            }
         }
      }</code>
        <!--DocumentConverterJobs.CreateJobData4-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)">
      <summary>
            Creates a new job.
            </summary>
      <param name="jobData">Data containing the properties of the job.</param>
      <returns>The job data object ready to run.</returns>
      <remarks>
        <para>Use this method to create a document converter job that is ready to run. When this method returns, you can use <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />
            to start this job.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)">
      <summary>
            Runs a job.
            </summary>
      <param name="job">The <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> to run. This parameter cannot be <strong>null</strong>. Use <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" /> to create a valid
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object.</param>
      <remarks>
        <para>
          <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> will block the current thread till the method returns. To run a job asynchronously, use <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
        <para>When this method returns, <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Status">DocumentConverterJob.Status</see> will contain the status of the job and whether
            it was successful (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Success</see>), completed but with errors
            (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.SuccessWithErrors</see>) or was aborted by the user or due to recoverable errors
            (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Aborted</see>).</para>
        <para>If errors did occur, then <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">DocumentConverterJob.Errors</see> will contain a list of error description
            values.</para>
        <para>The above is correct when the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode">DocumentConverterOptions.JobErrorMode</see> is set to
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Continue</see> (the default) which catches all the exceptions and adds them to the error
            list. If the mode was set to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Abort</see> then exceptions are not cought by the engine
            and instead delegate up to the calling code as usual.</para>
        <para>To use this method, initialize a new <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> object with the job's parameters (input file name or document, pages, output
            format, output file name, annotations, etc.), then use <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" /> to create the <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object passed as job to
            this method. Finally, call <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> passing the <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" />.</para>
        <para>If tracing is enabled using <see cref="P:Leadtools.Documents.Converters.DocumentConverterDiagnostics.EnableTrace">DocumentConverterDiagnostics.EnableTrace</see>, then logging and debugging
            messages will be sent to any trace listener while the job is running.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> event will occur once right after <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> is called. Then one or more <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation" /> events will
            occur while the job is running with information on the various operations being performed. Finally the <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> will fire once when the job
            is completed (successfuly or not) and right before this method returns.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Public Shared Sub DocumentConverterJobsRunJobExample()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.tif")
            Dim format As RasterImageFormat = RasterImageFormat.Tif
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"
            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterJobsRunJobExample()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.tif");
            var format = RasterImageFormat.Tif;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";
            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterJobs.RunJob-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)">
      <summary>
            Runs a job asynchronously.
            </summary>
      <param name="job">The <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> to run. This parameter cannot be <strong>null</strong>. Use <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" /> to create a valid
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object.</param>
      <remarks>
        <para>
          <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> will use the thread pool to create a new work item and for running this method. Control will be returned to the user right after the
            method is called. The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> event will occur when <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> finishes running. To run a job synchronously, use <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
        <para>After the method finishes and the job is completed, <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Status">DocumentConverterJob.Status</see> will contain the status of the job and whether
            it was successful (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Success</see>), completed but with errors
            (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.SuccessWithErrors</see>) or was aborted by the user or due to recoverable errors
            (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Aborted</see>).</para>
        <para>If errors did occur, then <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">DocumentConverterJob.Errors</see> will contain a list of error description
            values.</para>
        <para>The above is correct when the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode">DocumentConverterOptions.JobErrorMode</see> is set to
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Continue</see> (the default) which catches all the exceptions and adds them to the error
            list. If the mode was set to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Abort</see> then exceptions are not cought by the engine
            and instead delegate up to the calling code as usual.</para>
        <para>To use this method, initialize a new <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobData" /> object with the job's parameters (input file name or document, pages, output
            format, output file name, annotations, etc.), then use <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.CreateJob(Leadtools.Documents.Converters.DocumentConverterJobData)" /> to create the <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object passed as job to
            this method. Finally, call <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> passing the <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" />.</para>
        <para>If tracing is enabled using <see cref="P:Leadtools.Documents.Converters.DocumentConverterDiagnostics.EnableTrace">DocumentConverterDiagnostics.EnableTrace</see>, then logging and debugging
            messages will be sent to any trace listener while the job is running.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> event will occur once right after <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> is called. Then one or more <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation" /> events will
            occur while the job is running with information on the various operations being performed. Finally the <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> will fire once when the job
            is completed (successfuly or not) and right before the internal work item exits.</para>
        <para>Call <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.AbortAllJobs" /> to abort all running and pending jobs that was started with <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Private Shared Sub DocumentConverterJobsRunJobAsyncExample()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            documentConverter.Diagnostics.EnableTrace = True
            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.converted.pdf")
            Dim format As DocumentFormat = DocumentFormat.Pdf
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"

            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)

            Dim finished As AutoResetEvent = Nothing

            Dim completed As EventHandler(Of DocumentConverterJobEventArgs) = Nothing
            completed =
               Sub(sender, e)
               If e.Status = DocumentConverterJobStatus.Success Then
                  Console.WriteLine("Success")
               Else
                  Console.WriteLine("{0} Errors", e.Status)
                  For Each item As DocumentConverterJobError In e.Job.Errors
                     Console.WriteLine("  {0} at {1}: {2}", item.Operation, item.InputDocumentPageNumber, item.Error.Message)
                  Next
               End If
               Dim thisJobs As DocumentConverterJobs = TryCast(sender, DocumentConverterJobs)
               RemoveHandler thisJobs.JobCompleted, completed
            End Sub

            finished.Set()

            AddHandler documentConverter.Jobs.JobCompleted, completed

            finished = New AutoResetEvent(False)
            documentConverter.Jobs.RunJobAsync(job)
            finished.WaitOne()
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      static void DocumentConverterJobsRunJobAsyncExample()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            documentConverter.Diagnostics.EnableTrace = true;
            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.converted.pdf");
            var format = DocumentFormat.Pdf;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";

            var job = documentConverter.Jobs.CreateJob(jobData);

            AutoResetEvent finished = null;

            EventHandler&lt;DocumentConverterJobEventArgs&gt; completed = null;
            completed = (sender, e) =&gt;
            {
               if (e.Status == DocumentConverterJobStatus.Success)
               {
                  Console.WriteLine("Success");
               }
               else
               {
                  Console.WriteLine("{0} Errors", e.Status);
                  foreach (var error in e.Job.Errors)
                  {
                     Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
                  }
               }

               var thisJobs = sender as DocumentConverterJobs;
               thisJobs.JobCompleted -= completed;

               finished.Set();
            };

            documentConverter.Jobs.JobCompleted += completed;

            finished = new AutoResetEvent(false);
            documentConverter.Jobs.RunJobAsync(job);
            finished.WaitOne();
         }
      }</code>
        <!--DocumentConverterJobs.RunJobAsync-->
      </example>
    </member>
    <member name="M:Leadtools.Documents.Converters.DocumentConverterJobs.AbortAllJobs">
      <summary>
            Aborts all asynchronous running and pending jobs
            </summary>
      <remarks>
        <para>Call this method to cause all running and pending jobs started with <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> to gracefully abort. Notice that this method will only
            triggers the abortion operation and returns immediately. You must still add synchronization code if your application logic needs to be informed when all jobs are
            completed/aborted. The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> event will occur for each job started with <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> but with <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.AbortAllJobs" /> being
            triggered, the <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Status">DocumentConverterJob.Status</see> value of each will be set to 
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Aborted</see>.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted">
      <summary>
            Occurs when a job is about to start.
            </summary>
      <event>
        <para>The event handler receives an argument of type <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" /> containing data related to this event. The following
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" /> properties provide information specific to this event.</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Operation" />
            </term>
            <description>
              <para>
                <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">DocumentConverterJobOperation.Started</see>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation" />
            </term>
            <description>
              <para>
                <strong>false</strong>. Note that <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">DocumentConverterJobOperation.Started</see>) only fires once per job</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Status" />
            </term>
            <description>
              <para>Current job status. Usually <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Success</see>. Set this
            to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Abotred</see> to abort this job.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job" />
            </term>
            <description>
              <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object passed to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> that
            initiated this event.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.InputDocumentPageNumber" />
            </term>
            <description>
              <para>
                <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />, usually 1</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OutputDocumentPageNumber" />
            </term>
            <description>
              <para>
                <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />, usually 1</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Document" />
            </term>
            <description>
              <para>The same value as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document">DocumentConverterJobData.Document</see></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.DocumentWriter" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrDocument" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPageImage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.SvgDocument" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnContainer" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnotationsMode" />
            </term>
            <description>
              <para>Same value as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode">DocumentConverterJobData.AnnotationsMode</see></para>
            </description>
          </item>
        </list>
      </event>
      <remarks>
        <para>This event will occur when <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
        <para>To abort pending jobs in a multi-threaded application using <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />, you subscribe to this event and set the value of
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Status" /> to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Abort</see>. You can also examine
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job" /> and only abort certain jobs depending on your application logic.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> will occur exactly once per job. <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see>
            will always be <strong>false</strong>.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> event will always occur when a job is finished running whether the job is aborted or completed.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted">
      <summary>
            Occurs when a job is completed or aborted.
            </summary>
      <event>
        <para>The event handler receives an argument of type <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" /> containing data related to this event. The following
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" /> properties provide information specific to this event.</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Operation" />
            </term>
            <description>
              <para>
                <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">DocumentConverterJobOperation.Completed</see>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation" />
            </term>
            <description>
              <para>
                <strong>false</strong>. Note that <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">DocumentConverterJobOperation.Completed</see>) only fires once per job</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Status" />
            </term>
            <description>
              <para>Current job status. <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Success</see> if the conversion was successful,
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.SuccessWithErrors</see> if the conversion was completed but errors occured or
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Abotred</see> if the job was not completed. If not sucessful,
            check <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">DocumentConverterJob.Errors</see> for a list of the errors that might have occured.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job" />
            </term>
            <description>
              <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object passed to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> that
            initiated this event.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.InputDocumentPageNumber" />
            </term>
            <description>
              <para>
                <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />, usually 1</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OutputDocumentPageNumber" />
            </term>
            <description>
              <para>
                <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />, usually 1</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Document" />
            </term>
            <description>
              <para>The same value as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document">DocumentConverterJobData.Document</see></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.DocumentWriter" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrDocument" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPageImage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.SvgDocument" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnContainer" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnotationsMode" />
            </term>
            <description>
              <para>Same value as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode">DocumentConverterJobData.AnnotationsMode</see></para>
            </description>
          </item>
        </list>
      </event>
      <remarks>
        <para>This event will occur when <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> is finished running.</para>
        <para>You can use this event to keep track of the number of jobs pending running. You can also examine <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job">DocumentConverterJobEventArgs.Job</see>
            to get information on whether job finished successfully and get error status if any. <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> example shows complete source code of how to easily
            accomplish these tasks in your application.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> will occur exactly once per job. <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see>
            will always be <strong>false</strong>.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> event will always occur when a job is finished running whether the job is aborted or completed.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> event occurs when a job is about to start.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation">
      <summary>
            Occurs while a job is running.
            </summary>
      <event>
        <para>The event handler receives an argument of type <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" /> containing data related to this event. The following
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" /> properties provide information specific to this event.</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Operation" />
            </term>
            <description>
              <para>
                <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">DocumentConverterJobOperation.Completed</see>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation" />
            </term>
            <description>
              <para>
                <strong>false</strong>. Note that <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> (<see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation">DocumentConverterJobOperation.Completed</see>) only fires once per job</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Status" />
            </term>
            <description>
              <para>Current job status. <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Success</see> if the conversion was successful,
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.SuccessWithErrors</see> if the conversion was completed but errors occured or
            <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobStatus">DocumentConverterJobStatus.Abotred</see> if the job was not completed. If not sucessful,
            check <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">DocumentConverterJob.Errors</see> for a list of the errors that might have occured.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Job" />
            </term>
            <description>
              <para>The <see cref="T:Leadtools.Documents.Converters.DocumentConverterJob" /> object passed to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> that
            initiated this event.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.InputDocumentPageNumber" />
            </term>
            <description>
              <para>
                <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />, usually 1</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OutputDocumentPageNumber" />
            </term>
            <description>
              <para>
                <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.InputDocumentFirstPageNumber" />, usually 1</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.Document" />
            </term>
            <description>
              <para>The same value as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.Document">DocumentConverterJobData.Document</see></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.DocumentWriter" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrDocument" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.OcrPageImage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.RasterImage" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.SvgDocument" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnContainer" />
            </term>
            <description>
              <para>
                <strong>null</strong>
              </para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.AnnotationsMode" />
            </term>
            <description>
              <para>Same value as <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.AnnotationsMode">DocumentConverterJobData.AnnotationsMode</see></para>
            </description>
          </item>
        </list>
      </event>
      <remarks>
        <para>This event one or more times will occur while <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> or <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" /> is running.</para>
        <para>You can use this event to get information on the current operation (loading a page, converting, saving, etc.).</para>
        <para>The values of <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobEventArgs" /> depend on the current operation. You can modify these values at certain operations
            to alter or override the behavior or data of the conversion process. Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for more information.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobOperation" /> event occurs twice per operation. First with <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see>
            set to <strong>false</strong> to indicate that the operation is about to happen. then with <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobEventArgs.IsPostOperation">DocumentConverterJobEventArgs.IsPostOperation</see>
            set to <strong>true</strong> to indicate that the operation was performed.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobStarted" /> event occurs when a job is about to start.</para>
        <para>The <see cref="E:Leadtools.Documents.Converters.DocumentConverterJobs.JobCompleted" /> event will always occur when a job is finished running whether the job is aborted or completed.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJob(Leadtools.Documents.Converters.DocumentConverterJob)" /> and <see cref="M:Leadtools.Documents.Converters.DocumentConverterJobs.RunJobAsync(Leadtools.Documents.Converters.DocumentConverterJob)" />.</para>
      </example>
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterOptions">
      <summary>
            Manages the extra options to use with the document converter.
            </summary>
      <remarks>
        <para>
          <see cref="T:Leadtools.Documents.Converters.DocumentConverterOptions" /> manages the extra options to use with the document converter and can be accessed through the
            <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Options" /> property of <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
        <para>This class contains the following members:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode" />
            </term>
            <description>
              <para>Ability to resume on none critical errors.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.PageNumberingTemplate" />
            </term>
            <description>
              <para>Template to use for the individual file names when the output format does not support multi-pages.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.EnableSvgConversion" />
            </term>
            <description>
              <para>Use SVG conversion when supported.</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <seealso cref="T:Leadtools.Documents.Document" />
      <seealso cref="T:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager" />
      <seealso cref="T:FO.Topics.ProgrammingWithOcr">Programming with the LEADTOOLS .NET OCR</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Public Shared Sub DocumentConverterOptionsExample()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            'use options to force ocr conversion (disable SVG)
            documentConverter.Options.EnableSvgConversion = False
            'abort job at first error (in any page)
            documentConverter.Options.JobErrorMode = DocumentConverterJobErrorMode.Abort
            Dim ocrEngine As IOcrEngine = OcrEngineManager.CreateEngine(OcrEngineType.Advantage, False)
            Dim rasterCodecs As New RasterCodecs()
            Dim documentWriter As New DocumentWriter()
            ocrEngine.Startup(rasterCodecs, documentWriter, Nothing, LEAD_VARS.OcrAdvantageRuntimeDir)
            documentConverter.SetOcrEngineInstance(ocrEngine, True)
            documentConverter.Diagnostics.EnableTrace = True

            Dim inFile As String = Path.Combine(ImagesPath.Path, "Leadtools.doc")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "Leadtools.pdf")
            Dim format As DocumentFormat = DocumentFormat.Pdf
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"

            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      public static void DocumentConverterOptionsExample()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            //use options to force ocr conversion (disable SVG)
            documentConverter.Options.EnableSvgConversion = false;
            //abort job at first error (in any page)
            documentConverter.Options.JobErrorMode = DocumentConverterJobErrorMode.Abort;
            var ocrEngine = OcrEngineManager.CreateEngine(OcrEngineType.Advantage, false);
            var rasterCodecs = new RasterCodecs();
            var documentWriter = new DocumentWriter();
            ocrEngine.Startup(rasterCodecs, documentWriter, null, LEAD_VARS.OcrAdvantageRuntimeDir);
            documentConverter.SetOcrEngineInstance(ocrEngine, true);
            documentConverter.Diagnostics.EnableTrace = true;

            var inFile = Path.Combine(ImagesPath.Path, @"Leadtools.doc");
            var outFile = Path.Combine(ImagesPath.Path, @"Leadtools.pdf");
            var format = DocumentFormat.Pdf;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";

            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterOptions.JobErrorMode">
      <summary>
            Gets or sets a value that indicates whether to abort or try to conintue running jobs when an error occur.
            </summary>
      <value>An <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode" /> enumeration member that specifies whether to abort or try to conintue running jobs when an error occur. Default
            value is <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Continue</see>.</value>
      <remarks>
        <para>When the value of this property is <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Abort</see>, any error that may occur while
            running a job will result in an exception being thrown.</para>
        <para>If the value of this property is <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobErrorMode">DocumentConverterJobErrorMode.Continue</see>, then none critical errors can be
            logged and running continues. For example, if a source document has a page that could not be recognized. The offending page will be added to the final document as
            a graphics images and recognition will continue to the next page. In this mode, the engine will not throw an exception if an error occur, instead, all errors will
            be logged into the job's <see cref="P:Leadtools.Documents.Converters.DocumentConverterJob.Errors">DocumentConverterJob.Errors</see> collection. When conversion finishes, you can check if this
            collection is not empty and get the information of the errors and act upon them according to your application logic.</para>
        <para>Refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterJobOperation" /> for information on which operation is considered critical.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterOptions" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterOptions.PageNumberingTemplate">
      <summary>
            Gets or sets the template to use for the individual file names when the output format does not support multi-pages.
            </summary>
      <value>A string that contains the template to use for the individual file names when the output format does not support multi-pages.
            Default value is <c>##name##_Page(##page##).##extension##"</c>.</value>
      <remarks>
        <para>This template is used when the input document has multiple pages but the output format chosen contains does not support creating files with multiple pages.
            For example, when converting from a multi-page PDF file to PNG raster image format.</para>
        <para>The converter understands the following placeholders:</para>
        <list type="bullet">
          <item>
            <description>
              <para>
                <c>##name##</c>: Will be replaced by the file name without the extension</para>
            </description>
          </item>
          <item>
            <description>
              <para>
                <c>##page##</c>: Will be replaced by the 1-based page number of the source file</para>
            </description>
          </item>
          <item>
            <description>
              <para>
                <c>##extension##</c>: Will be replaced by extension of the output format</para>
            </description>
          </item>
        </list>
        <para>This template will be applied to the value of
            <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName">DocumentConverterJobData.OutputDocumentFileName</see>. In the example of PDF input and PNG output above
            assume the user passed <c>C:\Dir\Output.png</c> as the value for <see cref="P:Leadtools.Documents.Converters.DocumentConverterJobData.OutputDocumentFileName" />, and assume the PDF file has 4 pages.
            After the conversion is performed, the following files are created if the default template is used:</para>
        <para>
          <pre>
            <code>
            C:\Dir\Output_Page1.png
            C:\Dir\Output_Page2.png
            C:\Dir\Output_Page3.png
            C:\Dir\Output_Page4.png
            </code>
          </pre>
        </para>
        <para>You can omit any part of the template when modifying it. For example, if you set the value to <c>result_##page##.##extension##</c> then the files created are:</para>
        <para>
          <pre>
            <code>
            C:\Dir\result_Page1.png
            C:\Dir\result_Page2.png
            C:\Dir\result_Page3.png
            C:\Dir\result_Page4.png
            </code>
          </pre>
        </para>
        <para>And the text "Output" is omitted and not used.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <noexample />
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterOptions.EnableSvgConversion">
      <summary>
            Gets or sets a value that indicate whether SVG conversion should be used if available.
            </summary>
      <value>
        <strong>true</strong> if SVG conversion should be used if available, otherwise; <strong>false</strong> and OCR mode is forced.
            Default value is <strong>true</strong>.</value>
      <remarks>
        <para>When converting using a document format as the output, the engine will try to use SVG conversion as much as possible for maximum accuracy and speed.
            If this is not desired, you can force OCR only mode by setting the value of <see cref="P:Leadtools.Documents.Converters.DocumentConverterOptions.EnableSvgConversion" /> to <strong>false</strong>. This will make the
            document converter worker in a way very similar to <see cref="T:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager" /> but can be useful when debugging.</para>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <noexample />
    </member>
    <member name="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor">
      <summary>
            Manages the pre-processing options of the document converter.
            </summary>
      <remarks>
        <para>
          <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" /> manages the pre-processing options of the document converter and can be accessed through the
            <see cref="P:Leadtools.Documents.Converters.DocumentConverter.Preprocessor" /> property of <see cref="T:Leadtools.Documents.Converters.DocumentConverter" />.</para>
        <para>This class contains the following members:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Deskew" />
            </term>
            <description>
              <para>Automatically correct the skew angle if found in pages.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Orient" />
            </term>
            <description>
              <para>Automatically correct the orientation of rotated pages.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Invert" />
            </term>
            <description>
              <para>Automatically correct inverted pages.</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:DOXC.Topics.DocumentConverters_Using">Using LEADTOOLS Document Converters</seealso>
      <seealso cref="T:Leadtools.Documents.Document" />
      <seealso cref="T:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager" />
      <seealso cref="T:FO.Topics.ProgrammingWithOcr">Programming with the LEADTOOLS .NET OCR</seealso>
      <example>
        <code lang="VB">      Imports Leadtools
      Imports Leadtools.Codecs
      Imports Leadtools.Forms.DocumentWriters
      Imports Leadtools.Svg
      Imports Leadtools.Documents
      Imports Leadtools.Caching
      Imports Leadtools.Annotations.Core
      Imports Leadtools.Forms.Ocr
      Imports Leadtools.Documents.Converters

      Private Shared Sub DocumentConverterPreprocessorExample()
         Using documentConverter As DocumentConverter = New DocumentConverter()
            documentConverter.Diagnostics.EnableTrace = True
            documentConverter.Preprocessor.Deskew = True
            Dim inFile As String = Path.Combine(ImagesPath.Path, "ocr1.tif")
            Dim outFile As String = Path.Combine(ImagesPath.Path, "oc1deskew.tif")
            Dim format As RasterImageFormat = RasterImageFormat.Tif
            Dim jobData As DocumentConverterJobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format)
            jobData.JobName = "conversion job"

            Dim job As DocumentConverterJob = documentConverter.Jobs.CreateJob(jobData)
            documentConverter.Jobs.RunJob(job)

            If job.Status = DocumentConverterJobStatus.Success Then
               Console.WriteLine("Success")
            Else
               Console.WriteLine("{0} Errors", job.Status)
               For Each errorItem As DocumentConverterJobError In job.Errors
                  Console.WriteLine("  {0} at {1}: {2}", errorItem.Operation, errorItem.InputDocumentPageNumber, errorItem.Error.Message)
               Next
            End If
         End Using
      End Sub</code>
        <code lang="CS">      using Leadtools;
      using Leadtools.Codecs;
      using Leadtools.Forms.DocumentWriters;
      using Leadtools.Svg;
      using Leadtools.Documents;
      using Leadtools.Caching;
      using Leadtools.Annotations.Core;
      using Leadtools.Forms.Ocr;
      using Leadtools.Documents.Converters;

      static void DocumentConverterPreprocessorExample()
      {
         using (DocumentConverter documentConverter = new DocumentConverter())
         {
            documentConverter.Diagnostics.EnableTrace = true;
            documentConverter.Preprocessor.Deskew = true;
            var inFile = Path.Combine(ImagesPath.Path, @"ocr1.tif");
            var outFile = Path.Combine(ImagesPath.Path, @"oc1deskew.tif");
            var format = RasterImageFormat.Tif;
            var jobData = DocumentConverterJobs.CreateJobData(inFile, outFile, format);
            jobData.JobName = "conversion job";

            var job = documentConverter.Jobs.CreateJob(jobData);
            documentConverter.Jobs.RunJob(job);

            if (job.Status == DocumentConverterJobStatus.Success)
            {
               Console.WriteLine("Success");
            }
            else
            {
               Console.WriteLine("{0} Errors", job.Status);
               foreach (var error in job.Errors)
               {
                  Console.WriteLine("  {0} at {1}: {2}", error.Operation, error.InputDocumentPageNumber, error.Error.Message);
               }
            }
         }
      }</code>
        <!--DocumentConverterPreprocessor-->
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Deskew">
      <summary>
            Gets or sets a value that indicate that automatic deskewing should be used.
            </summary>
      <value>
        <strong>true</strong> if automatic deskewing should be used, otherwise; <strong>false</strong>. Default value is <strong>false</strong>.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Deskew" /> is supported when OCR is used during conversion. If the value is <strong>true</strong>, the engine will set the value of
            <see cref="P:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager.PreprocessPageCommands">IOcrAutoRecognizeManager.PreprocessPageCommands</see> accordingly.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Deskew" /> is supported during raster conversion. If the value is <strong>true</strong>, the engine will use the <see cref="T:Leadtools.ImageProcessing.Core.DeskewCommand" />.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Deskew" /> is not supported when SVG is used during conversion.</para>
      </remarks>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Orient">
      <summary>
            Gets or sets a value that indicate that automatic orientation correction should be used.
            </summary>
      <value>
        <strong>true</strong> if automatic orientation correction should be used, otherwise; <strong>false</strong>. Default value is <strong>false</strong>.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Orient" /> is supported when OCR is used during conversion. If the value is <strong>true</strong>, the engine will set the value of
            <see cref="P:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager.PreprocessPageCommands">IOcrAutoRecognizeManager.PreprocessPageCommands</see> accordingly.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Orient" /> is not supported during raster conversion.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Orient" /> is not supported when SVG is used during conversion.</para>
      </remarks>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" />.</para>
      </example>
    </member>
    <member name="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Invert">
      <summary>
            Gets or sets a value that indicate that automatic inversion correction should be used.
            </summary>
      <value>
        <strong>true</strong> if automatic inversion correction should be used, otherwise; <strong>false</strong>. Default value is <strong>false</strong>.</value>
      <remarks>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Invert" /> is supported when OCR is used during conversion. If the value is <strong>true</strong>, the engine will set the value of
            <see cref="P:Leadtools.Forms.Ocr.IOcrAutoRecognizeManager.PreprocessPageCommands">IOcrAutoRecognizeManager.PreprocessPageCommands</see> accordingly.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Invert" /> is not supported during raster conversion.</para>
        <para>
          <see cref="P:Leadtools.Documents.Converters.DocumentConverterPreprocessor.Invert" /> is not supported when SVG is used during conversion.</para>
      </remarks>
      <example>
        <para>For an example, refer to <see cref="T:Leadtools.Documents.Converters.DocumentConverterPreprocessor" />.</para>
      </example>
    </member>
  </members>
</doc>